<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- NewPage -->
<html lang="en">
<head>
<!-- Generated by javadoc (version 1.7.0_02) on Tue Feb 21 13:58:17 PST 2012 -->
<title>ChannelMap</title>
<meta name="date" content="2012-02-21">
<link rel="stylesheet" type="text/css" href="../../../stylesheet.css" title="Style">
</head>
<body>
<script type="text/javascript"><!--
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="ChannelMap";
    }
//-->
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a name="navbar_top">
<!--   -->
</a><a href="#skip-navbar_top" title="Skip navigation links"></a><a name="navbar_top_firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/ChannelMap.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../index-files/index-1.html">Index</a></li>
<li><a href="../../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li>Prev Class</li>
<li><a href="../../../com/rbnb/sapi/ChannelMap.ByteOrderEnum.html" title="class in com.rbnb.sapi"><span class="strong">Next Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../../../index.html?com/rbnb/sapi/ChannelMap.html" target="_top">Frames</a></li>
<li><a href="ChannelMap.html" target="_top">No Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../../../allclasses-noframe.html">All Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li><a href="#nested_class_summary">Nested</a>&nbsp;|&nbsp;</li>
<li><a href="#field_summary">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor_summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li><a href="#field_detail">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor_detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_detail">Method</a></li>
</ul>
</div>
<a name="skip-navbar_top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
<!-- ======== START OF CLASS DATA ======== -->
<div class="header">
<div class="subTitle">com.rbnb.sapi</div>
<h2 title="Class ChannelMap" class="title">Class ChannelMap</h2>
</div>
<div class="contentContainer">
<ul class="inheritance">
<li>java.lang.Object</li>
<li>
<ul class="inheritance">
<li>com.rbnb.sapi.ChannelMap</li>
</ul>
</li>
</ul>
<div class="description">
<ul class="blockList">
<li class="blockList">
<dl>
<dt>All Implemented Interfaces:</dt>
<dd>java.io.Serializable</dd>
</dl>
<dl>
<dt>Direct Known Subclasses:</dt>
<dd><a href="../../../com/rbnb/sapi/PlugInChannelMap.html" title="class in com.rbnb.sapi">PlugInChannelMap</a></dd>
</dl>
<hr>
<br>
<pre>public class <span class="strong">ChannelMap</span>
extends java.lang.Object
implements java.io.Serializable</pre>
<div class="block">A class to encapsulate the concept of a list of channels, each of which
  contains data.
 <p></div>
<dl><dt><span class="strong">Version:</span></dt>
  <dd>2005/03/31</dd>
<dt><span class="strong">Author:</span></dt>
  <dd>WHF</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../serialized-form.html#com.rbnb.sapi.ChannelMap">Serialized Form</a></dd></dl>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">
<!-- ======== NESTED CLASS SUMMARY ======== -->
<ul class="blockList">
<li class="blockList"><a name="nested_class_summary">
<!--   -->
</a>
<h3>Nested Class Summary</h3>
<table class="overviewSummary" border="0" cellpadding="3" cellspacing="0" summary="Nested Class Summary table, listing nested classes, and an explanation">
<caption><span>Nested Classes</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Class and Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static class&nbsp;</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/sapi/ChannelMap.ByteOrderEnum.html" title="class in com.rbnb.sapi">ChannelMap.ByteOrderEnum</a></strong></code>
<div class="block">Byte order enumerated type.</div>
</td>
</tr>
</table>
</li>
</ul>
<!-- =========== FIELD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="field_summary">
<!--   -->
</a>
<h3>Field Summary</h3>
<table class="overviewSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Field and Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static <a href="../../../com/rbnb/sapi/ChannelMap.ByteOrderEnum.html" title="class in com.rbnb.sapi">ChannelMap.ByteOrderEnum</a></code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/sapi/ChannelMap.html#LOCAL">LOCAL</a></strong></code>
<div class="block">The data is in whichever format is appropriate for this NATIVE
  machine.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static <a href="../../../com/rbnb/sapi/ChannelMap.ByteOrderEnum.html" title="class in com.rbnb.sapi">ChannelMap.ByteOrderEnum</a></code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/sapi/ChannelMap.html#LSB">LSB</a></strong></code>
<div class="block">Least significant bytes are first in each point, ala Intel.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static <a href="../../../com/rbnb/sapi/ChannelMap.ByteOrderEnum.html" title="class in com.rbnb.sapi">ChannelMap.ByteOrderEnum</a></code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/sapi/ChannelMap.html#MSB">MSB</a></strong></code>
<div class="block">Most significant bytes are first in each point, as is the case
  with many UNIX machines, and Java data on export.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static int</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/sapi/ChannelMap.html#TYPE_BYTEARRAY">TYPE_BYTEARRAY</a></strong></code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static int</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/sapi/ChannelMap.html#TYPE_FLOAT32">TYPE_FLOAT32</a></strong></code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static int</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/sapi/ChannelMap.html#TYPE_FLOAT64">TYPE_FLOAT64</a></strong></code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static int</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/sapi/ChannelMap.html#TYPE_INT16">TYPE_INT16</a></strong></code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static int</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/sapi/ChannelMap.html#TYPE_INT32">TYPE_INT32</a></strong></code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static int</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/sapi/ChannelMap.html#TYPE_INT64">TYPE_INT64</a></strong></code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static int</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/sapi/ChannelMap.html#TYPE_INT8">TYPE_INT8</a></strong></code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static int</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/sapi/ChannelMap.html#TYPE_STRING">TYPE_STRING</a></strong></code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static int</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/sapi/ChannelMap.html#TYPE_UNKNOWN">TYPE_UNKNOWN</a></strong></code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static int</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/sapi/ChannelMap.html#TYPE_USER">TYPE_USER</a></strong></code>&nbsp;</td>
</tr>
</table>
</li>
</ul>
<!-- ======== CONSTRUCTOR SUMMARY ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor_summary">
<!--   -->
</a>
<h3>Constructor Summary</h3>
<table class="overviewSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colOne" scope="col">Constructor and Description</th>
</tr>
<tr class="altColor">
<td class="colOne"><code><strong><a href="../../../com/rbnb/sapi/ChannelMap.html#ChannelMap()">ChannelMap</a></strong>()</code>
<div class="block">Default constructor.</div>
</td>
</tr>
</table>
</li>
</ul>
<!-- ========== METHOD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="method_summary">
<!--   -->
</a>
<h3>Method Summary</h3>
<table class="overviewSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
<caption><span>Methods</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Method and Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>int</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/sapi/ChannelMap.html#Add(java.lang.String)">Add</a></strong>(java.lang.String&nbsp;channelName)</code>
<div class="block">Adds a channel (or channels, if a wildcard is used) to the
  acqusition list.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/sapi/ChannelMap.html#AddFolder(java.lang.String)">AddFolder</a></strong>(java.lang.String&nbsp;channelName)</code>
<div class="block">Add a folder to this channel map.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/sapi/ChannelMap.html#AddPlugInOption(java.lang.String, java.lang.String, java.lang.String)">AddPlugInOption</a></strong>(java.lang.String&nbsp;channel,
               java.lang.String&nbsp;key,
               java.lang.String&nbsp;value)</code>
<div class="block">Used in request maps, adds an option to configure a PlugIn's response
   to this request.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/sapi/ChannelMap.html#Clear()">Clear</a></strong>()</code>
<div class="block">Removes all channels from the acquisition list.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>java.lang.String[]</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/sapi/ChannelMap.html#GetChannelList()">GetChannelList</a></strong>()</code>
<div class="block">Convenience function to return the list of channels contained in
 this ChannelMap.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>byte[]</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/sapi/ChannelMap.html#GetData(int)">GetData</a></strong>(int&nbsp;index)</code>
<div class="block">Determines the type of the data in the array, and then converts it
  to an array of bytes in local machine order.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>java.lang.Object</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/sapi/ChannelMap.html#GetDataAsArray(int)">GetDataAsArray</a></strong>(int&nbsp;index)</code>
<div class="block">Returns the channel data as an untyped Object.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>byte[][]</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/sapi/ChannelMap.html#GetDataAsByteArray(int)">GetDataAsByteArray</a></strong>(int&nbsp;index)</code>
<div class="block">Returns the channel data as an array of arrays of bytes.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>float[]</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/sapi/ChannelMap.html#GetDataAsFloat32(int)">GetDataAsFloat32</a></strong>(int&nbsp;index)</code>
<div class="block">Returns the channel data as an array of floats.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>double[]</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/sapi/ChannelMap.html#GetDataAsFloat64(int)">GetDataAsFloat64</a></strong>(int&nbsp;index)</code>
<div class="block">Returns the channel data as an array of doubles.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>short[]</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/sapi/ChannelMap.html#GetDataAsInt16(int)">GetDataAsInt16</a></strong>(int&nbsp;index)</code>
<div class="block">Returns the channel data as an array of shorts.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>int[]</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/sapi/ChannelMap.html#GetDataAsInt32(int)">GetDataAsInt32</a></strong>(int&nbsp;index)</code>
<div class="block">Returns the channel data as an array of ints.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>long[]</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/sapi/ChannelMap.html#GetDataAsInt64(int)">GetDataAsInt64</a></strong>(int&nbsp;index)</code>
<div class="block">Returns the channel data as an array of longs.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>byte[]</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/sapi/ChannelMap.html#GetDataAsInt8(int)">GetDataAsInt8</a></strong>(int&nbsp;index)</code>
<div class="block">Returns the channel data as an array of bytes.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>java.lang.String[]</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/sapi/ChannelMap.html#GetDataAsString(int)">GetDataAsString</a></strong>(int&nbsp;index)</code>
<div class="block">Returns the channel data as an array of Strings.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>java.lang.String[]</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/sapi/ChannelMap.html#GetFolderList()">GetFolderList</a></strong>()</code>
<div class="block">Returns the list of <em>empty</em> folders contained within this 
  ChannelMap.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/sapi/ChannelMap.html#GetIfFetchTimedOut()">GetIfFetchTimedOut</a></strong>()</code>
<div class="block">Returns true if and only if this channel map was returned in
  reponse to a <code>Fetch()</code> which timed-out.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>int</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/sapi/ChannelMap.html#GetIndex(java.lang.String)">GetIndex</a></strong>(java.lang.String&nbsp;channelName)</code>
<div class="block">Returns the index of a channel which has been added to this map
  if given its name.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>java.lang.String</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/sapi/ChannelMap.html#GetMime(int)">GetMime</a></strong>(int&nbsp;index)</code>
<div class="block">Returns the MIME type identifier for this channel, if any.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>java.lang.String</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/sapi/ChannelMap.html#GetName(int)">GetName</a></strong>(int&nbsp;index)</code>
<div class="block">Get the fully qualified channel name from its index in constant time.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>java.lang.String[]</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/sapi/ChannelMap.html#GetNodeList()">GetNodeList</a></strong>()</code>
<div class="block"><strong>Deprecated.</strong>&nbsp;
<div class="block"><i>Please use the <code>ChannelTree</code> class for 
  per-node heirarchy construction and identification.</i></div>
</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>java.lang.String[]</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/sapi/ChannelMap.html#GetPlugInList()">GetPlugInList</a></strong>()</code>
<div class="block"><strong>Deprecated.</strong>&nbsp;
<div class="block"><i>Please use the <code>ChannelTree</code> class for 
  per-node heirarchy construction and identification.</i></div>
</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>java.lang.String[]</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/sapi/ChannelMap.html#GetServerList()">GetServerList</a></strong>()</code>
<div class="block"><strong>Deprecated.</strong>&nbsp;
<div class="block"><i>Please use the <code>ChannelTree</code> class for 
  per-node heirarchy construction and identification.</i></div>
</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>java.lang.String[]</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/sapi/ChannelMap.html#GetSinkList()">GetSinkList</a></strong>()</code>
<div class="block"><strong>Deprecated.</strong>&nbsp;
<div class="block"><i>Please use the <code>ChannelTree</code> class for 
  per-node heirarchy construction and identification.</i></div>
</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>java.lang.String[]</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/sapi/ChannelMap.html#GetSourceList()">GetSourceList</a></strong>()</code>
<div class="block"><strong>Deprecated.</strong>&nbsp;
<div class="block"><i>Please use the <code>ChannelTree</code> class for 
  per-node heirarchy construction and identification.</i></div>
</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>double</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/sapi/ChannelMap.html#GetTimeDuration(int)">GetTimeDuration</a></strong>(int&nbsp;index)</code>
<div class="block">Yields the duration of this channel's data.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>double[]</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/sapi/ChannelMap.html#GetTimes(int)">GetTimes</a></strong>(int&nbsp;index)</code>
<div class="block">Yields the times for each data point for the specified channel.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>double</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/sapi/ChannelMap.html#GetTimeStart(int)">GetTimeStart</a></strong>(int&nbsp;index)</code>
<div class="block">Yields the start time of this channel's data.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>int</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/sapi/ChannelMap.html#GetType(int)">GetType</a></strong>(int&nbsp;index)</code>
<div class="block">Returns the type of the data returned by the specified channel.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>java.lang.String</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/sapi/ChannelMap.html#GetUserInfo(int)">GetUserInfo</a></strong>(int&nbsp;channel)</code>
<div class="block">Returns user information for the specified channel, if any is available.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>int</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/sapi/ChannelMap.html#NumberOfChannels()">NumberOfChannels</a></strong>()</code>
<div class="block">Returns the number of channels available in the map.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/sapi/ChannelMap.html#PutData(int, byte[], int)">PutData</a></strong>(int&nbsp;channelIndex,
       byte[]&nbsp;rawData,
       int&nbsp;typeID)</code>
<div class="block">Adds the data given in rawBytes to the channel identified with
  the specified channel index.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/sapi/ChannelMap.html#PutData(int, byte[], int, com.rbnb.sapi.ChannelMap.ByteOrderEnum)">PutData</a></strong>(int&nbsp;channelIndex,
       byte[]&nbsp;rawData,
       int&nbsp;typeID,
       <a href="../../../com/rbnb/sapi/ChannelMap.ByteOrderEnum.html" title="class in com.rbnb.sapi">ChannelMap.ByteOrderEnum</a>&nbsp;byteOrder)</code>
<div class="block">Adds the data given in rawBytes to the channel identified with
  the specified channel index.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/sapi/ChannelMap.html#PutDataAsByteArray(int, byte[])">PutDataAsByteArray</a></strong>(int&nbsp;channelIndex,
                  byte[]&nbsp;data)</code>
<div class="block">Type safe version of PutData().</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/sapi/ChannelMap.html#PutDataAsFloat32(int, float[])">PutDataAsFloat32</a></strong>(int&nbsp;channelIndex,
                float[]&nbsp;data)</code>
<div class="block">Type safe version of PutData().</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/sapi/ChannelMap.html#PutDataAsFloat64(int, double[])">PutDataAsFloat64</a></strong>(int&nbsp;channelIndex,
                double[]&nbsp;data)</code>
<div class="block">Type safe version of PutData().</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/sapi/ChannelMap.html#PutDataAsInt16(int, short[])">PutDataAsInt16</a></strong>(int&nbsp;channelIndex,
              short[]&nbsp;data)</code>
<div class="block">Type safe version of PutData().</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/sapi/ChannelMap.html#PutDataAsInt32(int, int[])">PutDataAsInt32</a></strong>(int&nbsp;channelIndex,
              int[]&nbsp;data)</code>
<div class="block">Type safe version of PutData().</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/sapi/ChannelMap.html#PutDataAsInt64(int, long[])">PutDataAsInt64</a></strong>(int&nbsp;channelIndex,
              long[]&nbsp;data)</code>
<div class="block">Type safe version of PutData().</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/sapi/ChannelMap.html#PutDataAsInt8(int, byte[])">PutDataAsInt8</a></strong>(int&nbsp;channelIndex,
             byte[]&nbsp;data)</code>
<div class="block">Type safe version of PutData().</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/sapi/ChannelMap.html#PutDataAsString(int, java.lang.String)">PutDataAsString</a></strong>(int&nbsp;channelIndex,
               java.lang.String&nbsp;data)</code>
<div class="block">Type safe version of PutData().</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/sapi/ChannelMap.html#PutDataRef(int, com.rbnb.sapi.ChannelMap, int)">PutDataRef</a></strong>(int&nbsp;destChannel,
          <a href="../../../com/rbnb/sapi/ChannelMap.html" title="class in com.rbnb.sapi">ChannelMap</a>&nbsp;sourceMap,
          int&nbsp;sourceChannel)</code>
<div class="block">Transfers a reference of the data in the sourceMap to <code>this</code>
  map.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/sapi/ChannelMap.html#PutMime(int, java.lang.String)">PutMime</a></strong>(int&nbsp;index,
       java.lang.String&nbsp;mime)</code>
<div class="block">Specifies the MIME (Multipurpose Internet Mail Extensions)
  type of this source data.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/sapi/ChannelMap.html#PutTime(double, double)">PutTime</a></strong>(double&nbsp;start,
       double&nbsp;duration)</code>
<div class="block">Sets the time range for all data subsequently added to the channel
  map.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/sapi/ChannelMap.html#PutTimeAuto(java.lang.String)">PutTimeAuto</a></strong>(java.lang.String&nbsp;timeMode)</code>
<div class="block">Sets the mode for automatic time stamp generation that will be used
  on the next call to Flush().</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/sapi/ChannelMap.html#PutTimeRef(com.rbnb.sapi.ChannelMap, int)">PutTimeRef</a></strong>(<a href="../../../com/rbnb/sapi/ChannelMap.html" title="class in com.rbnb.sapi">ChannelMap</a>&nbsp;sourceMap,
          int&nbsp;channelIndex)</code>
<div class="block">Copies the time reference for the specified channel on the
  ChannelMap provided into the current time buffer for this
  channel.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/sapi/ChannelMap.html#PutTimes(double[])">PutTimes</a></strong>(double[]&nbsp;times)</code>
<div class="block">Sets the time vector for all data subsequently added to the channel
  map.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/sapi/ChannelMap.html#PutUserInfo(int, java.lang.String)">PutUserInfo</a></strong>(int&nbsp;channelIndex,
           java.lang.String&nbsp;data)</code>
<div class="block">Specify user information for a given channel.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>int[]</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/sapi/ChannelMap.html#Search(java.lang.String, java.lang.String)">Search</a></strong>(java.lang.String&nbsp;mimeType,
      java.lang.String&nbsp;keywords)</code>
<div class="block">Convenience function to search this <code>ChannelMap</code>
 for the specified <code>keyword</code> and <code>mimeType</code>.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>java.lang.String</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/sapi/ChannelMap.html#toString()">toString</a></strong>()</code>
<div class="block">Returns a descriptive <code>String</code> about the state of
  this channel map.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>int</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/sapi/ChannelMap.html#TypeID(java.lang.String)">TypeID</a></strong>(java.lang.String&nbsp;type)</code>
<div class="block">Determines the numerical constant used as the type ID
  for the specified data type.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>java.lang.String</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/sapi/ChannelMap.html#TypeName(int)">TypeName</a></strong>(int&nbsp;typeID)</code>
<div class="block">Returns a string type identifier which matches the given typeID.</div>
</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a name="methods_inherited_from_class_java.lang.Object">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
<code>equals, getClass, hashCode, notify, notifyAll, wait, wait, wait</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">
<!-- ============ FIELD DETAIL =========== -->
<ul class="blockList">
<li class="blockList"><a name="field_detail">
<!--   -->
</a>
<h3>Field Detail</h3>
<a name="LSB">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>LSB</h4>
<pre>public static final&nbsp;<a href="../../../com/rbnb/sapi/ChannelMap.ByteOrderEnum.html" title="class in com.rbnb.sapi">ChannelMap.ByteOrderEnum</a> LSB</pre>
<div class="block">Least significant bytes are first in each point, ala Intel.</div>
</li>
</ul>
<a name="MSB">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>MSB</h4>
<pre>public static final&nbsp;<a href="../../../com/rbnb/sapi/ChannelMap.ByteOrderEnum.html" title="class in com.rbnb.sapi">ChannelMap.ByteOrderEnum</a> MSB</pre>
<div class="block">Most significant bytes are first in each point, as is the case
  with many UNIX machines, and Java data on export.</div>
</li>
</ul>
<a name="LOCAL">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>LOCAL</h4>
<pre>public static final&nbsp;<a href="../../../com/rbnb/sapi/ChannelMap.ByteOrderEnum.html" title="class in com.rbnb.sapi">ChannelMap.ByteOrderEnum</a> LOCAL</pre>
<div class="block">The data is in whichever format is appropriate for this NATIVE
  machine.  Please note that this is not appropriate for Java
  generated data.</div>
</li>
</ul>
<a name="TYPE_FLOAT64">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>TYPE_FLOAT64</h4>
<pre>public static final&nbsp;int TYPE_FLOAT64</pre>
<dl><dt><span class="strong">See Also:</span></dt><dd><a href="../../../constant-values.html#com.rbnb.sapi.ChannelMap.TYPE_FLOAT64">Constant Field Values</a></dd></dl>
</li>
</ul>
<a name="TYPE_FLOAT32">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>TYPE_FLOAT32</h4>
<pre>public static final&nbsp;int TYPE_FLOAT32</pre>
<dl><dt><span class="strong">See Also:</span></dt><dd><a href="../../../constant-values.html#com.rbnb.sapi.ChannelMap.TYPE_FLOAT32">Constant Field Values</a></dd></dl>
</li>
</ul>
<a name="TYPE_INT64">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>TYPE_INT64</h4>
<pre>public static final&nbsp;int TYPE_INT64</pre>
<dl><dt><span class="strong">See Also:</span></dt><dd><a href="../../../constant-values.html#com.rbnb.sapi.ChannelMap.TYPE_INT64">Constant Field Values</a></dd></dl>
</li>
</ul>
<a name="TYPE_INT32">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>TYPE_INT32</h4>
<pre>public static final&nbsp;int TYPE_INT32</pre>
<dl><dt><span class="strong">See Also:</span></dt><dd><a href="../../../constant-values.html#com.rbnb.sapi.ChannelMap.TYPE_INT32">Constant Field Values</a></dd></dl>
</li>
</ul>
<a name="TYPE_INT16">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>TYPE_INT16</h4>
<pre>public static final&nbsp;int TYPE_INT16</pre>
<dl><dt><span class="strong">See Also:</span></dt><dd><a href="../../../constant-values.html#com.rbnb.sapi.ChannelMap.TYPE_INT16">Constant Field Values</a></dd></dl>
</li>
</ul>
<a name="TYPE_INT8">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>TYPE_INT8</h4>
<pre>public static final&nbsp;int TYPE_INT8</pre>
<dl><dt><span class="strong">See Also:</span></dt><dd><a href="../../../constant-values.html#com.rbnb.sapi.ChannelMap.TYPE_INT8">Constant Field Values</a></dd></dl>
</li>
</ul>
<a name="TYPE_STRING">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>TYPE_STRING</h4>
<pre>public static final&nbsp;int TYPE_STRING</pre>
<dl><dt><span class="strong">See Also:</span></dt><dd><a href="../../../constant-values.html#com.rbnb.sapi.ChannelMap.TYPE_STRING">Constant Field Values</a></dd></dl>
</li>
</ul>
<a name="TYPE_UNKNOWN">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>TYPE_UNKNOWN</h4>
<pre>public static final&nbsp;int TYPE_UNKNOWN</pre>
<dl><dt><span class="strong">See Also:</span></dt><dd><a href="../../../constant-values.html#com.rbnb.sapi.ChannelMap.TYPE_UNKNOWN">Constant Field Values</a></dd></dl>
</li>
</ul>
<a name="TYPE_BYTEARRAY">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>TYPE_BYTEARRAY</h4>
<pre>public static final&nbsp;int TYPE_BYTEARRAY</pre>
<dl><dt><span class="strong">See Also:</span></dt><dd><a href="../../../constant-values.html#com.rbnb.sapi.ChannelMap.TYPE_BYTEARRAY">Constant Field Values</a></dd></dl>
</li>
</ul>
<a name="TYPE_USER">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>TYPE_USER</h4>
<pre>public static final&nbsp;int TYPE_USER</pre>
<dl><dt><span class="strong">See Also:</span></dt><dd><a href="../../../constant-values.html#com.rbnb.sapi.ChannelMap.TYPE_USER">Constant Field Values</a></dd></dl>
</li>
</ul>
</li>
</ul>
<!-- ========= CONSTRUCTOR DETAIL ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor_detail">
<!--   -->
</a>
<h3>Constructor Detail</h3>
<a name="ChannelMap()">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>ChannelMap</h4>
<pre>public&nbsp;ChannelMap()</pre>
<div class="block">Default constructor.</div>
</li>
</ul>
</li>
</ul>
<!-- ============ METHOD DETAIL ========== -->
<ul class="blockList">
<li class="blockList"><a name="method_detail">
<!--   -->
</a>
<h3>Method Detail</h3>
<a name="Add(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>Add</h4>
<pre>public final&nbsp;int&nbsp;Add(java.lang.String&nbsp;channelName)
              throws <a href="../../../com/rbnb/sapi/SAPIException.html" title="class in com.rbnb.sapi">SAPIException</a></pre>
<div class="block">Adds a channel (or channels, if a wildcard is used) to the
  acqusition list.  Parameter <code>channelName</code>
  must be fully qualified name of the channel, including the
  server name.
 <p> If the channel is already present, its current index is 
     returned, and no other action is taken.
 <p> <strong>Note:</strong> When making requests of PlugIns, 
   a double slash should be used when signalling the PlugIn to 
   forward or filter an absolute channel.  For example, use:<br/>
   <center>"PlugInTest//Server/rbnbSource/c0" </center><br/>
   to filter or forward absolute channel "/Server/rbnbSource/c0".
  If the slash is omitted, the extra portion of the name will be
   interpreted as a relative name.
 <p></div>
<dl><dt><span class="strong">Returns:</span></dt><dd>The index which refers to this channel.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code><a href="../../../com/rbnb/sapi/SAPIException.html" title="class in com.rbnb.sapi">SAPIException</a></code> - If there is a problem parsing the channel name.</dd>
<dd><code>java.lang.NullPointerException</code> - If the channel name is null.</dd>
<dd><code>java.lang.IllegalArgumentException</code> - If the channel name ends in a 
    slash "/".</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/sapi/ChannelMap.html#Clear()"><code>Clear()</code></a>, 
<a href="../../../com/rbnb/sapi/ChannelMap.html#PutData(int, byte[], int, com.rbnb.sapi.ChannelMap.ByteOrderEnum)"><code>PutData(int,byte[],int,ChannelMap.ByteOrderEnum)</code></a></dd></dl>
</li>
</ul>
<a name="AddFolder(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>AddFolder</h4>
<pre>public final&nbsp;void&nbsp;AddFolder(java.lang.String&nbsp;channelName)
                     throws <a href="../../../com/rbnb/sapi/SAPIException.html" title="class in com.rbnb.sapi">SAPIException</a></pre>
<div class="block">Add a folder to this channel map.  Useful primarily for registration.
 The name may end in a slash '/', but this is not required.
 <p></div>
<dl><dt><span class="strong">Throws:</span></dt>
<dd><code><a href="../../../com/rbnb/sapi/SAPIException.html" title="class in com.rbnb.sapi">SAPIException</a></code> - If there is a problem parsing the channel name.</dd>
<dd><code>java.lang.NullPointerException</code> - If the channel name is null.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.1</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/sapi/Source.html#Register(com.rbnb.sapi.ChannelMap)"><code>Source.Register(ChannelMap)</code></a></dd></dl>
</li>
</ul>
<a name="AddPlugInOption(java.lang.String, java.lang.String, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>AddPlugInOption</h4>
<pre>public final&nbsp;void&nbsp;AddPlugInOption(java.lang.String&nbsp;channel,
                   java.lang.String&nbsp;key,
                   java.lang.String&nbsp;value)
                           throws <a href="../../../com/rbnb/sapi/SAPIException.html" title="class in com.rbnb.sapi">SAPIException</a></pre>
<div class="block">Used in request maps, adds an option to configure a PlugIn's response
   to this request.
 <p>For example, if you have a ResamplePlugIn running with the name
  <b>resample</b> and you want to get a maximum of 1200 points from
  each channel in the request, you would use:
 <p><center><code>
   channelMap.AddPlugInOption("resample", "maxSamples", "1200")
  </code></center></p>
 <p>If you wanted to then display a plot of the data through 
 an instance of PNGPlugIn called png, with a width of 640 and 
  a height of 480, you would instead use:
 <p><center><code>
   channelMap.AddPlugInOption("png/resample", "maxSamples", "1200")
  </code></center></p>
 <p><center><code>
   channelMap.AddPlugInOption("png", "width", "640")
  </code></center></p>    
 <p><center><code>
   channelMap.AddPlugInOption("png", "height", "480")
  </code></center></p>    
 <p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>channel</code> - The fully qualified channel representing the 
   PlugIn to configure.</dd><dd><code>key</code> - The case-sensitive name of the option to set.</dd><dd><code>value</code> - The value, a string, of the option to set.
 <p></dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code><a href="../../../com/rbnb/sapi/SAPIException.html" title="class in com.rbnb.sapi">SAPIException</a></code></dd><dt><span class="strong">Since:</span></dt>
  <dd>V3.0B4</dd></dl>
</li>
</ul>
<a name="Clear()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>Clear</h4>
<pre>public final&nbsp;void&nbsp;Clear()</pre>
<div class="block">Removes all channels from the acquisition list.  Also clears
   any cached channel memory which may have been retained for
   efficiency.
 <p></div>
<dl><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/sapi/ChannelMap.html#Add(java.lang.String)"><code>Add(String)</code></a></dd></dl>
</li>
</ul>
<a name="GetTimes(int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>GetTimes</h4>
<pre>public&nbsp;double[]&nbsp;GetTimes(int&nbsp;index)</pre>
<div class="block">Yields the times for each data point for the specified channel.
  A reference to the double array stored in this map is returned,
   which should not be modified by the end user.
 <p>The array returned is calculated only when this method is first
   called on the channel index.  The same array is returned on 
   successive calls.
 <p>A zero length array is returned in cases where no time is available
  for this channel.</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>index</code> - The channel index.</dd>
<dt><span class="strong">Returns:</span></dt><dd>An array of doubles representing the times, or null if no 
        data is available.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code>java.lang.ArrayIndexOutOfBoundsException</code> - If index out of bounds.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/sapi/ChannelMap.html#GetData(int)"><code>GetData(int)</code></a></dd></dl>
</li>
</ul>
<a name="GetTimeStart(int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>GetTimeStart</h4>
<pre>public&nbsp;double&nbsp;GetTimeStart(int&nbsp;index)</pre>
<div class="block">Yields the start time of this channel's data.  Should only be 
   on the map resulting from a <code>Fetch()</code>.
 <p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>index</code> - The channel index.</dd>
<dt><span class="strong">Returns:</span></dt><dd>The start time for this channel's data.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code>java.lang.ArrayIndexOutOfBoundsException</code> - If index out of bounds.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/sapi/ChannelMap.html#GetData(int)"><code>GetData(int)</code></a>, 
<a href="../../../com/rbnb/sapi/ChannelMap.html#GetTimeDuration(int)"><code>GetTimeDuration(int)</code></a></dd></dl>
</li>
</ul>
<a name="GetTimeDuration(int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>GetTimeDuration</h4>
<pre>public&nbsp;double&nbsp;GetTimeDuration(int&nbsp;index)</pre>
<div class="block">Yields the duration of this channel's data.  Should only be 
   on the map resulting from a <code>Fetch()</code>.
 <p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>index</code> - The channel index.</dd>
<dt><span class="strong">Returns:</span></dt><dd>The start time for this channel's data.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code>java.lang.ArrayIndexOutOfBoundsException</code> - If index out of bounds.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/sapi/ChannelMap.html#GetData(int)"><code>GetData(int)</code></a>, 
<a href="../../../com/rbnb/sapi/ChannelMap.html#GetTimeStart(int)"><code>GetTimeStart(int)</code></a></dd></dl>
</li>
</ul>
<a name="GetData(int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>GetData</h4>
<pre>public&nbsp;byte[]&nbsp;GetData(int&nbsp;index)</pre>
<div class="block">Determines the type of the data in the array, and then converts it
  to an array of bytes in local machine order.
 <p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>index</code> - The channel index.</dd>
<dt><span class="strong">Returns:</span></dt><dd>The data as raw bytes.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code>java.lang.ArrayIndexOutOfBoundsException</code> - If index out of bounds.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/sapi/ChannelMap.html#GetTimes(int)"><code>GetTimes(int)</code></a></dd></dl>
</li>
</ul>
<a name="GetDataAsFloat64(int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>GetDataAsFloat64</h4>
<pre>public&nbsp;double[]&nbsp;GetDataAsFloat64(int&nbsp;index)</pre>
<div class="block">Returns the channel data as an array of doubles.
 <p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>index</code> - The channel index.</dd>
<dt><span class="strong">Returns:</span></dt><dd>The data.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code>java.lang.ArrayIndexOutOfBoundsException</code> - If index out of bounds.</dd>
<dd><code>java.lang.ClassCastException</code> - Channel data is not the correct type.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/sapi/ChannelMap.html#GetData(int)"><code>GetData(int)</code></a></dd></dl>
</li>
</ul>
<a name="GetDataAsFloat32(int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>GetDataAsFloat32</h4>
<pre>public&nbsp;float[]&nbsp;GetDataAsFloat32(int&nbsp;index)</pre>
<div class="block">Returns the channel data as an array of floats.
 <p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>index</code> - The channel index.</dd>
<dt><span class="strong">Returns:</span></dt><dd>The data.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code>java.lang.ArrayIndexOutOfBoundsException</code> - If index out of bounds.</dd>
<dd><code>java.lang.ClassCastException</code> - Channel data is not the correct type.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/sapi/ChannelMap.html#GetData(int)"><code>GetData(int)</code></a></dd></dl>
</li>
</ul>
<a name="GetDataAsInt64(int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>GetDataAsInt64</h4>
<pre>public&nbsp;long[]&nbsp;GetDataAsInt64(int&nbsp;index)</pre>
<div class="block">Returns the channel data as an array of longs.
 <p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>index</code> - The channel index.</dd>
<dt><span class="strong">Returns:</span></dt><dd>The data.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code>java.lang.ArrayIndexOutOfBoundsException</code> - If index out of bounds.</dd>
<dd><code>java.lang.ClassCastException</code> - Channel data is not the correct type.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/sapi/ChannelMap.html#GetData(int)"><code>GetData(int)</code></a></dd></dl>
</li>
</ul>
<a name="GetDataAsInt32(int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>GetDataAsInt32</h4>
<pre>public&nbsp;int[]&nbsp;GetDataAsInt32(int&nbsp;index)</pre>
<div class="block">Returns the channel data as an array of ints.
 <p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>index</code> - The channel index.</dd>
<dt><span class="strong">Returns:</span></dt><dd>The data.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code>java.lang.ArrayIndexOutOfBoundsException</code> - If index out of bounds.</dd>
<dd><code>java.lang.ClassCastException</code> - Channel data is not the correct type.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/sapi/ChannelMap.html#GetData(int)"><code>GetData(int)</code></a></dd></dl>
</li>
</ul>
<a name="GetDataAsInt16(int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>GetDataAsInt16</h4>
<pre>public&nbsp;short[]&nbsp;GetDataAsInt16(int&nbsp;index)</pre>
<div class="block">Returns the channel data as an array of shorts.
 <p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>index</code> - The channel index.</dd>
<dt><span class="strong">Returns:</span></dt><dd>The data.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code>java.lang.ArrayIndexOutOfBoundsException</code> - If index out of bounds.</dd>
<dd><code>java.lang.ClassCastException</code> - Channel data is not the correct type.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/sapi/ChannelMap.html#GetData(int)"><code>GetData(int)</code></a></dd></dl>
</li>
</ul>
<a name="GetDataAsInt8(int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>GetDataAsInt8</h4>
<pre>public&nbsp;byte[]&nbsp;GetDataAsInt8(int&nbsp;index)</pre>
<div class="block">Returns the channel data as an array of bytes.
 <p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>index</code> - The channel index.</dd>
<dt><span class="strong">Returns:</span></dt><dd>The data.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code>java.lang.ArrayIndexOutOfBoundsException</code> - If index out of bounds.</dd>
<dd><code>java.lang.ClassCastException</code> - Channel data is not the correct type.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/sapi/ChannelMap.html#GetData(int)"><code>GetData(int)</code></a></dd></dl>
</li>
</ul>
<a name="GetDataAsString(int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>GetDataAsString</h4>
<pre>public&nbsp;java.lang.String[]&nbsp;GetDataAsString(int&nbsp;index)</pre>
<div class="block">Returns the channel data as an array of Strings.
 <p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>index</code> - The channel index.</dd>
<dt><span class="strong">Returns:</span></dt><dd>The data.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code>java.lang.ArrayIndexOutOfBoundsException</code> - If index out of bounds.</dd>
<dd><code>java.lang.ClassCastException</code> - Channel data is not the correct type.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/sapi/ChannelMap.html#GetData(int)"><code>GetData(int)</code></a></dd></dl>
</li>
</ul>
<a name="GetDataAsByteArray(int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>GetDataAsByteArray</h4>
<pre>public&nbsp;byte[][]&nbsp;GetDataAsByteArray(int&nbsp;index)</pre>
<div class="block">Returns the channel data as an array of arrays of bytes.  This is most
   useful when the data, instead of a time series of bytes (int8), is
   in fact an object, such as a file or files, which exist all at one
   particular time stamp.
 <p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>index</code> - The channel index.</dd>
<dt><span class="strong">Returns:</span></dt><dd>The data.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code>java.lang.ArrayIndexOutOfBoundsException</code> - If index out of bounds.</dd>
<dd><code>java.lang.ClassCastException</code> - Channel data is not the correct type.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/sapi/ChannelMap.html#GetData(int)"><code>GetData(int)</code></a>, 
<a href="../../../com/rbnb/sapi/ChannelMap.html#GetDataAsInt8(int)"><code>GetDataAsInt8(int)</code></a></dd></dl>
</li>
</ul>
<a name="GetDataAsArray(int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>GetDataAsArray</h4>
<pre>public&nbsp;java.lang.Object&nbsp;GetDataAsArray(int&nbsp;index)</pre>
<div class="block">Returns the channel data as an untyped Object.  The 
   java.lang.reflect.Array class may then be used to extract doubles.
  This is most useful when writing PlugIns which must deal with 
  multiple input data types.</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>index</code> - The channel index.</dd>
<dt><span class="strong">Returns:</span></dt><dd>The data.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code>java.lang.ArrayIndexOutOfBoundsException</code> - If index out of bounds.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V3.1</dd></dl>
</li>
</ul>
<a name="GetName(int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>GetName</h4>
<pre>public&nbsp;java.lang.String&nbsp;GetName(int&nbsp;index)</pre>
<div class="block">Get the fully qualified channel name from its index in constant time.
 <p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>index</code> - The channel index.</dd>
<dt><span class="strong">Returns:</span></dt><dd>Its corresponding name.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code>java.lang.ArrayIndexOutOfBoundsException</code> - If the index is out of bounds.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/sapi/ChannelMap.html#GetIndex(java.lang.String)"><code>GetIndex(String)</code></a></dd></dl>
</li>
</ul>
<a name="GetIndex(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>GetIndex</h4>
<pre>public final&nbsp;int&nbsp;GetIndex(java.lang.String&nbsp;channelName)</pre>
<div class="block">Returns the index of a channel which has been added to this map
  if given its name.  This search takes approximately constant time.
  Note that the value returned by this function will change with
  each call to <code>Fetch()</code>, even if this map is reused,
  and should not be stored.
 <p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>channelName</code> - The fully qualified channel name, including the server name.</dd>
<dt><span class="strong">Returns:</span></dt><dd>The corresponding channel index, or -1 if not found.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/sapi/ChannelMap.html#GetName(int)"><code>GetName(int)</code></a></dd></dl>
</li>
</ul>
<a name="GetType(int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>GetType</h4>
<pre>public final&nbsp;int&nbsp;GetType(int&nbsp;index)</pre>
<div class="block">Returns the type of the data returned by the specified channel.
 Note that this function never returns TYPE_USER.  The reason for this
  is that a registration channel map which does contain user info will
  also contain server meta-data, and thus is of the more general type
  TYPE_STRING.  To test if user info is available, call GetUserInfo, 
  which will return an empty string if there is none.
 <p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>index</code> - The desired channel index.</dd>
<dt><span class="strong">Returns:</span></dt><dd>The corresponding data type ID.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code>java.lang.ArrayIndexOutOfBoundsException</code> - If index out of bounds.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="#TYPE_FLOAT64"><code>TYPE_FLOAT64</code></a></dd></dl>
</li>
</ul>
<a name="GetMime(int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>GetMime</h4>
<pre>public final&nbsp;java.lang.String&nbsp;GetMime(int&nbsp;index)</pre>
<div class="block">Returns the MIME type identifier for this channel, if any.</div>
</li>
</ul>
<a name="GetIfFetchTimedOut()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>GetIfFetchTimedOut</h4>
<pre>public final&nbsp;boolean&nbsp;GetIfFetchTimedOut()</pre>
<div class="block">Returns true if and only if this channel map was returned in
  reponse to a <code>Fetch()</code> which timed-out.  
 <p>A call to <a href="../../../com/rbnb/sapi/Sink.html#Fetch(long)"><code>Sink.Fetch(long)</code></a> may return a <code>
  ChannelMap</code> with no channels.  This method allows you to 
  determine whether this map is empty because the request timed out,
  or because the request made matches no data on the server.</div>
</li>
</ul>
<a name="GetUserInfo(int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>GetUserInfo</h4>
<pre>public final&nbsp;java.lang.String&nbsp;GetUserInfo(int&nbsp;channel)</pre>
<div class="block">Returns user information for the specified channel, if any is available.
  <p>User information corresponds to the string in server registration
  data
 between the &lt;user&gt; and &lt;/user&gt; tags.  It is placed into the
  server by registering a ChannelMap containing one or more channels to
  which <a href="../../../com/rbnb/sapi/ChannelMap.html#PutUserInfo(int, java.lang.String)"><code>PutUserInfo(int, String)</code></a> has been applied.
 <p></div>
<dl><dt><span class="strong">Returns:</span></dt><dd>The user info, or an empty string if the mime type is not
  "text/xml" or the underlying data type is not String.
 <p></dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.5B4</dd></dl>
</li>
</ul>
<a name="PutMime(int, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>PutMime</h4>
<pre>public&nbsp;void&nbsp;PutMime(int&nbsp;index,
           java.lang.String&nbsp;mime)</pre>
<div class="block">Specifies the MIME (Multipurpose Internet Mail Extensions)
  type of this source data.  Typical MIME types include 
  "text/plain", "text/xml", for String data, and 
  "application/octet-stream" for binary data.
 <p>A full list can be found at:
 <blockquote><a href="ftp://ftp.isi.edu/in-notes/iana/assignments/media-types/media-types">
  ftp://ftp.isi.edu/in-notes/iana/assignments/media-types/media-types</a>
  </blockquote>
 <p><strong>NOTE:</strong> The MIME type information will only be sent
                to the server if one of the <code>PutData()</code> methods is
     called on this channel.
 <p></div>
</li>
</ul>
<a name="TypeID(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>TypeID</h4>
<pre>public&nbsp;int&nbsp;TypeID(java.lang.String&nbsp;type)</pre>
<div class="block">Determines the numerical constant used as the type ID
  for the specified data type.  This function is intended primarily
  for use by the COM interface; Java users should use the 
  appropriate <code>public static final int TYPE_*</code>
  constants.
 <p>
 The String should be one of "int8", "int16", "int32", "int64"
  "float32", "float64", "string", "bytearray", or "unknown".
  Case is ignored.
 For example, calling this function with "int8" returns 
  <a href="../../../com/rbnb/sapi/ChannelMap.html#TYPE_INT8"><code>TYPE_INT8</code></a>.
 <p></div>
<dl><dt><span class="strong">Throws:</span></dt>
<dd><code>java.lang.IllegalArgumentException</code> - if the type is not one of the ones
  listed above;</dd>
<dd><code>java.lang.NullPointerException</code> - if <code>type</code> is null.</dd></dl>
</li>
</ul>
<a name="TypeName(int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>TypeName</h4>
<pre>public&nbsp;java.lang.String&nbsp;TypeName(int&nbsp;typeID)</pre>
<div class="block">Returns a string type identifier which matches the given typeID.
 <p></div>
<dl><dt><span class="strong">Throws:</span></dt>
<dd><code>ArrayOutOfBoundsException</code> - If the typeID does not match
  any of the allowed types.</dd></dl>
</li>
</ul>
<a name="PutData(int, byte[], int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>PutData</h4>
<pre>public&nbsp;void&nbsp;PutData(int&nbsp;channelIndex,
           byte[]&nbsp;rawData,
           int&nbsp;typeID)
             throws <a href="../../../com/rbnb/sapi/SAPIException.html" title="class in com.rbnb.sapi">SAPIException</a></pre>
<div class="block">Adds the data given in rawBytes to the channel identified with
  the specified channel index.  This assumes
  that the byte ordering of the data is the same as the local 
  system.  (Not Java byte ordering, which is always MSB!)
 <p><B>Note:</b> the data is not copied,
   so do not overwrite it until it is Flushed.
 <p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>channelIndex</code> - The channel index.</dd><dd><code>rawData</code> - An array of bytes representing the data.</dd><dd><code>typeID</code> - An integer representing the type of the data.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code><a href="../../../com/rbnb/sapi/SAPIException.html" title="class in com.rbnb.sapi">SAPIException</a></code> - If there is an error creating the channel locally.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/sapi/Source.html#Flush(com.rbnb.sapi.ChannelMap)"><code>Source.Flush(ChannelMap)</code></a>, 
<a href="../../../com/rbnb/sapi/ChannelMap.html#PutData(int, byte[], int, com.rbnb.sapi.ChannelMap.ByteOrderEnum)"><code>PutData(int,byte[],int,ChannelMap.ByteOrderEnum)</code></a></dd></dl>
</li>
</ul>
<a name="PutData(int, byte[], int, com.rbnb.sapi.ChannelMap.ByteOrderEnum)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>PutData</h4>
<pre>public&nbsp;void&nbsp;PutData(int&nbsp;channelIndex,
           byte[]&nbsp;rawData,
           int&nbsp;typeID,
           <a href="../../../com/rbnb/sapi/ChannelMap.ByteOrderEnum.html" title="class in com.rbnb.sapi">ChannelMap.ByteOrderEnum</a>&nbsp;byteOrder)
             throws <a href="../../../com/rbnb/sapi/SAPIException.html" title="class in com.rbnb.sapi">SAPIException</a></pre>
<div class="block">Adds the data given in rawBytes to the channel identified with
  the specified channel index. 
 <p><B>Note:</b> the data is not copied,
   so do not overwrite it until it is Flushed.
 <p>
 Note that this version of PutData is not available in the 
   JavaBean/ActiveX API.</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>channelIndex</code> - The index of the channel, obtained via 
  <a href="../../../com/rbnb/sapi/ChannelMap.html#Add(java.lang.String)"><code>Add(String)</code></a> or <a href="../../../com/rbnb/sapi/ChannelMap.html#GetIndex(java.lang.String)"><code>GetIndex(String)</code></a>.</dd><dd><code>rawData</code> - An array of bytes representing the data.</dd><dd><code>typeID</code> - An integer representing the type of the data.</dd><dd><code>byteOrder</code> - An enumerated type, one of <a href=#LOCAL>LOCAL</a>,
  <a href=#LSB>LSB</a>, or <a href=#MSB>MSB</a>.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code><a href="../../../com/rbnb/sapi/SAPIException.html" title="class in com.rbnb.sapi">SAPIException</a></code> - If there is an error creating the channel locally.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/sapi/Source.html#Flush(com.rbnb.sapi.ChannelMap)"><code>Source.Flush(ChannelMap)</code></a>, 
<a href="../../../com/rbnb/sapi/ChannelMap.html#Add(java.lang.String)"><code>Add(String)</code></a>, 
<a href="../../../com/rbnb/sapi/ChannelMap.html#GetIndex(java.lang.String)"><code>GetIndex(String)</code></a></dd></dl>
</li>
</ul>
<a name="PutDataAsFloat64(int, double[])">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>PutDataAsFloat64</h4>
<pre>public&nbsp;void&nbsp;PutDataAsFloat64(int&nbsp;channelIndex,
                    double[]&nbsp;data)
                      throws <a href="../../../com/rbnb/sapi/SAPIException.html" title="class in com.rbnb.sapi">SAPIException</a></pre>
<div class="block">Type safe version of PutData().
 <p><B>Note:</b> the data is not copied,
   so do not overwrite it until it is Flushed.</div>
<dl><dt><span class="strong">Throws:</span></dt>
<dd><code><a href="../../../com/rbnb/sapi/SAPIException.html" title="class in com.rbnb.sapi">SAPIException</a></code></dd><dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/sapi/ChannelMap.html#PutData(int, byte[], int)"><code>PutData(int,byte[],int)</code></a></dd></dl>
</li>
</ul>
<a name="PutDataAsFloat32(int, float[])">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>PutDataAsFloat32</h4>
<pre>public&nbsp;void&nbsp;PutDataAsFloat32(int&nbsp;channelIndex,
                    float[]&nbsp;data)
                      throws <a href="../../../com/rbnb/sapi/SAPIException.html" title="class in com.rbnb.sapi">SAPIException</a></pre>
<div class="block">Type safe version of PutData().
 <p><B>Note:</b> the data is not copied,
   so do not overwrite it until it is Flushed.</div>
<dl><dt><span class="strong">Throws:</span></dt>
<dd><code><a href="../../../com/rbnb/sapi/SAPIException.html" title="class in com.rbnb.sapi">SAPIException</a></code></dd><dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/sapi/ChannelMap.html#PutData(int, byte[], int)"><code>PutData(int,byte[],int)</code></a></dd></dl>
</li>
</ul>
<a name="PutDataAsInt64(int, long[])">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>PutDataAsInt64</h4>
<pre>public&nbsp;void&nbsp;PutDataAsInt64(int&nbsp;channelIndex,
                  long[]&nbsp;data)
                    throws <a href="../../../com/rbnb/sapi/SAPIException.html" title="class in com.rbnb.sapi">SAPIException</a></pre>
<div class="block">Type safe version of PutData().
 <p><B>Note:</b> the data is not copied,
   so do not overwrite it until it is Flushed.</div>
<dl><dt><span class="strong">Throws:</span></dt>
<dd><code><a href="../../../com/rbnb/sapi/SAPIException.html" title="class in com.rbnb.sapi">SAPIException</a></code></dd><dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/sapi/ChannelMap.html#PutData(int, byte[], int)"><code>PutData(int,byte[],int)</code></a></dd></dl>
</li>
</ul>
<a name="PutDataAsInt32(int, int[])">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>PutDataAsInt32</h4>
<pre>public&nbsp;void&nbsp;PutDataAsInt32(int&nbsp;channelIndex,
                  int[]&nbsp;data)
                    throws <a href="../../../com/rbnb/sapi/SAPIException.html" title="class in com.rbnb.sapi">SAPIException</a></pre>
<div class="block">Type safe version of PutData().
 <p><B>Note:</b> the data is not copied,
   so do not overwrite it until it is Flushed.</div>
<dl><dt><span class="strong">Throws:</span></dt>
<dd><code><a href="../../../com/rbnb/sapi/SAPIException.html" title="class in com.rbnb.sapi">SAPIException</a></code></dd><dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/sapi/ChannelMap.html#PutData(int, byte[], int)"><code>PutData(int,byte[],int)</code></a></dd></dl>
</li>
</ul>
<a name="PutDataAsInt16(int, short[])">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>PutDataAsInt16</h4>
<pre>public&nbsp;void&nbsp;PutDataAsInt16(int&nbsp;channelIndex,
                  short[]&nbsp;data)
                    throws <a href="../../../com/rbnb/sapi/SAPIException.html" title="class in com.rbnb.sapi">SAPIException</a></pre>
<div class="block">Type safe version of PutData().
 <p><B>Note:</b> the data is not copied,
   so do not overwrite it until it is Flushed.</div>
<dl><dt><span class="strong">Throws:</span></dt>
<dd><code><a href="../../../com/rbnb/sapi/SAPIException.html" title="class in com.rbnb.sapi">SAPIException</a></code></dd><dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/sapi/ChannelMap.html#PutData(int, byte[], int)"><code>PutData(int,byte[],int)</code></a></dd></dl>
</li>
</ul>
<a name="PutDataAsInt8(int, byte[])">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>PutDataAsInt8</h4>
<pre>public&nbsp;void&nbsp;PutDataAsInt8(int&nbsp;channelIndex,
                 byte[]&nbsp;data)
                   throws <a href="../../../com/rbnb/sapi/SAPIException.html" title="class in com.rbnb.sapi">SAPIException</a></pre>
<div class="block">Type safe version of PutData().
 <p><B>Note:</b> the data is not copied,
   so do not overwrite it until it is Flushed.</div>
<dl><dt><span class="strong">Throws:</span></dt>
<dd><code><a href="../../../com/rbnb/sapi/SAPIException.html" title="class in com.rbnb.sapi">SAPIException</a></code></dd><dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/sapi/ChannelMap.html#PutData(int, byte[], int)"><code>PutData(int,byte[],int)</code></a></dd></dl>
</li>
</ul>
<a name="PutDataAsString(int, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>PutDataAsString</h4>
<pre>public&nbsp;void&nbsp;PutDataAsString(int&nbsp;channelIndex,
                   java.lang.String&nbsp;data)
                     throws <a href="../../../com/rbnb/sapi/SAPIException.html" title="class in com.rbnb.sapi">SAPIException</a></pre>
<div class="block">Type safe version of PutData().
 <p><B>Note:</b> the data is not copied,
   so do not overwrite it until it is Flushed.</div>
<dl><dt><span class="strong">Throws:</span></dt>
<dd><code><a href="../../../com/rbnb/sapi/SAPIException.html" title="class in com.rbnb.sapi">SAPIException</a></code></dd><dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/sapi/ChannelMap.html#PutData(int, byte[], int)"><code>PutData(int,byte[],int)</code></a></dd></dl>
</li>
</ul>
<a name="PutDataAsByteArray(int, byte[])">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>PutDataAsByteArray</h4>
<pre>public&nbsp;void&nbsp;PutDataAsByteArray(int&nbsp;channelIndex,
                      byte[]&nbsp;data)
                        throws <a href="../../../com/rbnb/sapi/SAPIException.html" title="class in com.rbnb.sapi">SAPIException</a></pre>
<div class="block">Type safe version of PutData().  Places a block of bytes into the
   ChannelMap as a contiguous object.
 <p><B>Note:</b> the data is not copied,
   so do not overwrite it until it is Flushed.</div>
<dl><dt><span class="strong">Throws:</span></dt>
<dd><code><a href="../../../com/rbnb/sapi/SAPIException.html" title="class in com.rbnb.sapi">SAPIException</a></code></dd><dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/sapi/ChannelMap.html#PutData(int, byte[], int)"><code>PutData(int,byte[],int)</code></a></dd></dl>
</li>
</ul>
<a name="PutUserInfo(int, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>PutUserInfo</h4>
<pre>public final&nbsp;void&nbsp;PutUserInfo(int&nbsp;channelIndex,
               java.lang.String&nbsp;data)
                       throws <a href="../../../com/rbnb/sapi/SAPIException.html" title="class in com.rbnb.sapi">SAPIException</a></pre>
<div class="block">Specify user information for a given channel.  For use with server
  registration, this method signals the server to place the provided
  string inside the &lt;user&gt; and &lt;/user&gt; tags of the server
  XML file.  This is prefered to placing data directly in the 
  registration map, as that overrides the server registration data.
 <p>Although there is no official standard for user data information,
  many viewers understand key/value pairs in the following form:
 <p><center>key1=value1,key2=value2,...,keyN=valueN</center></p>
 <p>
 This method will work along with <a href="../../../com/rbnb/sapi/ChannelMap.html#GetUserInfo(int)"><code>GetUserInfo(int)</code></a> with data
 (non registration) ChannelMaps.  However, <a href="../../../com/rbnb/sapi/ChannelMap.html#PutDataAsString(int, java.lang.String)"><code>PutDataAsString(
 int, String)</code></a>/<a href="../../../com/rbnb/sapi/ChannelMap.html#GetDataAsString(int)"><code>GetDataAsString(int)</code></a> has more functionality in 
  this case and is recommended.
 <p></div>
<dl><dt><span class="strong">Throws:</span></dt>
<dd><code><a href="../../../com/rbnb/sapi/SAPIException.html" title="class in com.rbnb.sapi">SAPIException</a></code></dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.5B4</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/sapi/Sink.html#RequestRegistration()"><code>Sink.RequestRegistration()</code></a>, 
<a href="../../../com/rbnb/sapi/Source.html#Register(com.rbnb.sapi.ChannelMap)"><code>Source.Register(ChannelMap)</code></a></dd></dl>
</li>
</ul>
<a name="PutDataRef(int, com.rbnb.sapi.ChannelMap, int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>PutDataRef</h4>
<pre>public&nbsp;void&nbsp;PutDataRef(int&nbsp;destChannel,
              <a href="../../../com/rbnb/sapi/ChannelMap.html" title="class in com.rbnb.sapi">ChannelMap</a>&nbsp;sourceMap,
              int&nbsp;sourceChannel)
                throws <a href="../../../com/rbnb/sapi/SAPIException.html" title="class in com.rbnb.sapi">SAPIException</a></pre>
<div class="block">Transfers a reference of the data in the sourceMap to <code>this</code>
  map. The primary application of this method is in "pass-through"
  PlugIns, such as VSource, which do nothing with the data other than
  transfer it from one channel to another.
 <p></div>
<dl><dt><span class="strong">Throws:</span></dt>
<dd><code>IndexOutOfRange</code> - If either <code>destChannel >= 
  this.NumberOfChannels()</code>
  or <code>sourceChannel >= sourceMap.NumberOfChannels()</code>.</dd>
<dd><code><a href="../../../com/rbnb/sapi/SAPIException.html" title="class in com.rbnb.sapi">SAPIException</a></code> - If there is a problem transferring the data.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0B10</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/sapi/ChannelMap.html#PutTimeRef(com.rbnb.sapi.ChannelMap, int)"><code>PutTimeRef(ChannelMap, int)</code></a></dd></dl>
</li>
</ul>
<a name="PutTime(double, double)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>PutTime</h4>
<pre>public&nbsp;void&nbsp;PutTime(double&nbsp;start,
           double&nbsp;duration)</pre>
<div class="block">Sets the time range for all data subsequently added to the channel
  map.  This function may be called once per frame, once per 
  channel, or once per point for a multi-point block, depending
  on your application.
 <p>Clears the AutoTimeStamp setting, if any.
 <p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>start</code> - The absolute start time of the next frame.</dd><dd><code>duration</code> - The duration of the next frame.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/sapi/ChannelMap.html#PutTimeAuto(java.lang.String)"><code>PutTimeAuto(String)</code></a>, 
<a href="../../../com/rbnb/sapi/ChannelMap.html#PutData(int, byte[], int)"><code>PutData(int,byte[],int)</code></a>, 
<a href="../../../com/rbnb/sapi/Source.html#Flush(com.rbnb.sapi.ChannelMap, boolean)"><code>Source.Flush(ChannelMap,boolean)</code></a></dd></dl>
</li>
</ul>
<a name="PutTimes(double[])">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>PutTimes</h4>
<pre>public&nbsp;void&nbsp;PutTimes(double[]&nbsp;times)</pre>
<div class="block">Sets the time vector for all data subsequently added to the channel
  map.  This function may be called once per frame, once per 
  channel, or once per point for a multi-point block, depending
  on your application.  The array should have the same number of
  points as the data subsequently added, or else an exception
  will be thrown on the <code>PutData</code> call.
 <p>Clears the AutoTimeStamp setting, if any.
 <p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>times</code> - The array of time points that applies to the data set.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/sapi/ChannelMap.html#PutTimeAuto(java.lang.String)"><code>PutTimeAuto(String)</code></a>, 
<a href="../../../com/rbnb/sapi/ChannelMap.html#PutData(int, byte[], int)"><code>PutData(int,byte[],int)</code></a>, 
<a href="../../../com/rbnb/sapi/Source.html#Flush(com.rbnb.sapi.ChannelMap, boolean)"><code>Source.Flush(ChannelMap,boolean)</code></a></dd></dl>
</li>
</ul>
<a name="PutTimeRef(com.rbnb.sapi.ChannelMap, int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>PutTimeRef</h4>
<pre>public&nbsp;void&nbsp;PutTimeRef(<a href="../../../com/rbnb/sapi/ChannelMap.html" title="class in com.rbnb.sapi">ChannelMap</a>&nbsp;sourceMap,
              int&nbsp;channelIndex)</pre>
<div class="block">Copies the time reference for the specified channel on the
  ChannelMap provided into the current time buffer for this
  channel.  This is done in the most efficient way possible,
  usually much better than:<blockquote>
  <code>PutTimes(sourceMap.GetTimes(channelIndex))</code>
  </blockquote>
 <p>This function may be called once per frame, once per 
  channel, or once per point for a multi-point block, depending
  on your application.  The time reference must be compatable 
  with the data subsequently added, or else an exception
  will be thrown on the <code>PutData</code> call.
 <p>Clears the PutTimeAuto setting, if any.
 <p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>sourceMap</code> - The map from which to copy the time reference.</dd><dd><code>channelIndex</code> - The index of the channel whose reference to copy.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/sapi/ChannelMap.html#PutTimeAuto(java.lang.String)"><code>PutTimeAuto(String)</code></a>, 
<a href="../../../com/rbnb/sapi/ChannelMap.html#PutTimes(double[])"><code>PutTimes(double[])</code></a>, 
<a href="../../../com/rbnb/sapi/ChannelMap.html#PutData(int, byte[], int)"><code>PutData(int,byte[],int)</code></a>, 
<a href="../../../com/rbnb/sapi/Source.html#Flush(com.rbnb.sapi.ChannelMap, boolean)"><code>Source.Flush(ChannelMap,boolean)</code></a></dd></dl>
</li>
</ul>
<a name="PutTimeAuto(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>PutTimeAuto</h4>
<pre>public&nbsp;void&nbsp;PutTimeAuto(java.lang.String&nbsp;timeMode)
                 throws java.lang.IllegalArgumentException</pre>
<div class="block">Sets the mode for automatic time stamp generation that will be used
  on the next call to Flush(). Case is not significant.
 <p>
 If the <code>timeMode</code> is "next", then the time-stamp
 increments starting from 1 each time <code>Source.Flush</code> is
 called.
 <p>
 If the <code>timeMode</code> is "timeofday", then the time-stamp is
 set equal to the client-side system clock time each time
 <code>PutData</code> is called.
 <p>
 If the <code>timeMode</code> is "server", then the time-stamp is
 set equal to the server-side system clock time at the point when
 the flushed frame is placed in the ring buffer.  This mode should
 not be used in conjunction with any other time-stamping style
 within a single frame, although it can be changed from flush to
 flush.
 <p>
 If the mode is not set, it defaults to "server".
 <p>
 The default units for auto timestamps are seconds since 1970,
 stored in a double precision number (System.currentTimeMillis()/1000.).
 Note that this results in approximately 1 micro-second time resolution.
 For higher resolution, use manual (non-auto) timestamps, e.g.
 use a relative (zero-based) start time instead of 1970.
 <p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>timeMode</code> - The mode setting, one of "next", "timeofday", or
                       "server".</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code>java.lang.IllegalArgumentException</code> - If the mode is not correct.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/sapi/Source.html#Flush(com.rbnb.sapi.ChannelMap, boolean)"><code>Source.Flush(ChannelMap,boolean)</code></a></dd></dl>
</li>
</ul>
<a name="NumberOfChannels()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>NumberOfChannels</h4>
<pre>public&nbsp;int&nbsp;NumberOfChannels()</pre>
<div class="block">Returns the number of channels available in the map.
 <p></div>
<dl><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/sapi/ChannelMap.html#Add(java.lang.String)"><code>Add(String)</code></a></dd></dl>
</li>
</ul>
<a name="toString()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>toString</h4>
<pre>public&nbsp;java.lang.String&nbsp;toString()</pre>
<div class="block">Returns a descriptive <code>String</code> about the state of
  this channel map.
 <p></div>
<dl>
<dt><strong>Overrides:</strong></dt>
<dd><code>toString</code>&nbsp;in class&nbsp;<code>java.lang.Object</code></dd>
<dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd></dl>
</li>
</ul>
<a name="GetNodeList()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>GetNodeList</h4>
<pre>public final&nbsp;java.lang.String[]&nbsp;GetNodeList()</pre>
<div class="block"><span class="strong">Deprecated.</span>&nbsp;<i>Please use the <code>ChannelTree</code> class for 
  per-node heirarchy construction and identification.</i></div>
<div class="block">Returns a String array containing one string for every node
  in the channel hierarchy of this map.  If all the channels in
  the map were placed in one or more trees, with the first token
  (using '/' to separate tokens) as the root, the second tokens as
  its children, etc., each node of this tree would be returned 
  by this function.  Each String is as qualified as possible.
 <p>For example, if a <code>ChannelMap</code> contains the channel
        "/Server/Source/Channel", the return result would be "/Server",
        "/Server/Source", and "/Server/Source/Channel".  However, if
        the channel was "Source/Channel", only "Source" and
        "Source/Channel" would be returned.
 <p></div>
<dl><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd></dl>
</li>
</ul>
<a name="GetChannelList()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>GetChannelList</h4>
<pre>public final&nbsp;java.lang.String[]&nbsp;GetChannelList()</pre>
<div class="block">Convenience function to return the list of channels contained in
 this ChannelMap.  This could be implemented as:
 <p><code>ChannelMap map= ...<br>
        String[] list=new String[map.NumberOfChannels()];<br>
        for (int ii=0; ii&lt;list.length; ++ii)<br>
        &nbsp;&nbsp;&nbsp;&nbsp;list[ii]=map.GetName(ii);</code></p>
 <p>However, this function is slightly more efficient.</p>
 <p></div>
<dl><dt><span class="strong">Returns:</span></dt><dd>The list of channels, or a zero length array if no channels
   are available.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd></dl>
</li>
</ul>
<a name="GetFolderList()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>GetFolderList</h4>
<pre>public final&nbsp;java.lang.String[]&nbsp;GetFolderList()</pre>
<div class="block">Returns the list of <em>empty</em> folders contained within this 
  ChannelMap.  If there are no such folders, an array of length zero
  is returned.  In general there will only be folders in a ChannelMap
  which is the result of a <a href="../../../com/rbnb/sapi/Sink.html#RequestRegistration(com.rbnb.sapi.ChannelMap)"><code>Sink.RequestRegistration(ChannelMap)</code></a>.
 <p></div>
<dl><dt><span class="strong">Since:</span></dt>
  <dd>V2.1</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/sapi/Sink.html#RequestRegistration(com.rbnb.sapi.ChannelMap)"><code>Sink.RequestRegistration(ChannelMap)</code></a></dd></dl>
</li>
</ul>
<a name="GetServerList()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>GetServerList</h4>
<pre>public final&nbsp;java.lang.String[]&nbsp;GetServerList()</pre>
<div class="block"><span class="strong">Deprecated.</span>&nbsp;<i>Please use the <code>ChannelTree</code> class for 
  per-node heirarchy construction and identification.</i></div>
<div class="block">Convenience function to return the list of child servers contained in
 this ChannelMap.  This is only useful for maps returned from
  a registration request.
 <p></div>
<dl><dt><span class="strong">Returns:</span></dt><dd>The list of child servers, or a zero length array if no servers
   are available.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd></dl>
</li>
</ul>
<a name="GetSinkList()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>GetSinkList</h4>
<pre>public final&nbsp;java.lang.String[]&nbsp;GetSinkList()</pre>
<div class="block"><span class="strong">Deprecated.</span>&nbsp;<i>Please use the <code>ChannelTree</code> class for 
  per-node heirarchy construction and identification.</i></div>
<div class="block">Returns the list of <a href="../../../com/rbnb/sapi/Sink.html" title="class in com.rbnb.sapi"><code>Sink</code></a>s contained in
 this ChannelMap.  This is only useful for maps returned from
  a registration request.
 <p></div>
<dl><dt><span class="strong">Returns:</span></dt><dd>The list of Sinks, or a zero length array if no Sinks
   are present.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0B10</dd></dl>
</li>
</ul>
<a name="GetSourceList()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>GetSourceList</h4>
<pre>public final&nbsp;java.lang.String[]&nbsp;GetSourceList()</pre>
<div class="block"><span class="strong">Deprecated.</span>&nbsp;<i>Please use the <code>ChannelTree</code> class for 
  per-node heirarchy construction and identification.</i></div>
<div class="block">Returns the list of <a href="../../../com/rbnb/sapi/Source.html" title="class in com.rbnb.sapi"><code>Source</code></a>s contained in
 this ChannelMap.  This is only useful for maps returned from
  a registration request.
 <p></div>
<dl><dt><span class="strong">Returns:</span></dt><dd>The list of Sources, or a zero length array if no Sources
   are present.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0B10</dd></dl>
</li>
</ul>
<a name="GetPlugInList()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>GetPlugInList</h4>
<pre>public final&nbsp;java.lang.String[]&nbsp;GetPlugInList()</pre>
<div class="block"><span class="strong">Deprecated.</span>&nbsp;<i>Please use the <code>ChannelTree</code> class for 
  per-node heirarchy construction and identification.</i></div>
<div class="block">Returns the list of <a href="../../../com/rbnb/sapi/PlugIn.html" title="class in com.rbnb.sapi"><code>PlugIn</code></a>s contained in
 this ChannelMap.  This is only useful for maps returned from
  a registration request.
 <p></div>
<dl><dt><span class="strong">Returns:</span></dt><dd>The list of PlugIns, or a zero length array if no PlugIns
   are present.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0B10</dd></dl>
</li>
</ul>
<a name="Search(java.lang.String, java.lang.String)">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>Search</h4>
<pre>public&nbsp;int[]&nbsp;Search(java.lang.String&nbsp;mimeType,
           java.lang.String&nbsp;keywords)</pre>
<div class="block">Convenience function to search this <code>ChannelMap</code>
 for the specified <code>keyword</code> and <code>mimeType</code>.
  &nbsp;All channels of <b>fetched</b> data currently in the map are
  iterrogated to see if their MIME type exactly matches the specified 
 <code>mimeType</code> parameter.  If they do, the data for that 
  channel is searched to see if every key word in the input set exists.
  If so, the channel is added to the array of channels returned.
 <p>Keywords should be separated by spaces.  If either parameter
  is null, that constraint is ignored on the search.</p>
 <p></div>
<dl><dt><span class="strong">Returns:</span></dt><dd>An array of channel indices for channels which match the search
        criteria.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd></dl>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
</div>
<!-- ========= END OF CLASS DATA ========= -->
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a name="navbar_bottom">
<!--   -->
</a><a href="#skip-navbar_bottom" title="Skip navigation links"></a><a name="navbar_bottom_firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/ChannelMap.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../index-files/index-1.html">Index</a></li>
<li><a href="../../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li>Prev Class</li>
<li><a href="../../../com/rbnb/sapi/ChannelMap.ByteOrderEnum.html" title="class in com.rbnb.sapi"><span class="strong">Next Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../../../index.html?com/rbnb/sapi/ChannelMap.html" target="_top">Frames</a></li>
<li><a href="ChannelMap.html" target="_top">No Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="../../../allclasses-noframe.html">All Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li><a href="#nested_class_summary">Nested</a>&nbsp;|&nbsp;</li>
<li><a href="#field_summary">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor_summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li><a href="#field_detail">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor_detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_detail">Method</a></li>
</ul>
</div>
<a name="skip-navbar_bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</body>
</html>
