<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- NewPage -->
<html lang="en">
<head>
<!-- Generated by javadoc (version 1.7.0_02) on Tue Feb 21 13:58:18 PST 2012 -->
<title>Client</title>
<meta name="date" content="2012-02-21">
<link rel="stylesheet" type="text/css" href="../../../stylesheet.css" title="Style">
</head>
<body>
<script type="text/javascript"><!--
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="Client";
    }
//-->
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a name="navbar_top">
<!--   -->
</a><a href="#skip-navbar_top" title="Skip navigation links"></a><a name="navbar_top_firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/Client.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../index-files/index-1.html">Index</a></li>
<li><a href="../../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../../../com/rbnb/sapi/ChannelTree.NodeTypeEnum.html" title="class in com.rbnb.sapi"><span class="strong">Prev Class</span></a></li>
<li><a href="../../../com/rbnb/sapi/Control.html" title="class in com.rbnb.sapi"><span class="strong">Next Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../../../index.html?com/rbnb/sapi/Client.html" target="_top">Frames</a></li>
<li><a href="Client.html" target="_top">No Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../../../allclasses-noframe.html">All Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li>Constr&nbsp;|&nbsp;</li>
<li><a href="#method_summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li>Constr&nbsp;|&nbsp;</li>
<li><a href="#method_detail">Method</a></li>
</ul>
</div>
<a name="skip-navbar_top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
<!-- ======== START OF CLASS DATA ======== -->
<div class="header">
<div class="subTitle">com.rbnb.sapi</div>
<h2 title="Class Client" class="title">Class Client</h2>
</div>
<div class="contentContainer">
<ul class="inheritance">
<li>java.lang.Object</li>
<li>
<ul class="inheritance">
<li>com.rbnb.sapi.Client</li>
</ul>
</li>
</ul>
<div class="description">
<ul class="blockList">
<li class="blockList">
<dl>
<dt>All Implemented Interfaces:</dt>
<dd>java.io.Serializable</dd>
</dl>
<dl>
<dt>Direct Known Subclasses:</dt>
<dd><a href="../../../com/rbnb/sapi/Control.html" title="class in com.rbnb.sapi">Control</a>, <a href="../../../com/rbnb/sapi/PlugIn.html" title="class in com.rbnb.sapi">PlugIn</a>, <a href="../../../com/rbnb/sapi/Sink.html" title="class in com.rbnb.sapi">Sink</a>, <a href="../../../com/rbnb/sapi/Source.html" title="class in com.rbnb.sapi">Source</a></dd>
</dl>
<hr>
<br>
<pre>public abstract class <span class="strong">Client</span>
extends java.lang.Object
implements java.io.Serializable</pre>
<div class="block">Base class of all simple clients to RBNB servers.  This class encapsulates 
  functionality common to all clients.  It is not intended for end-user
  subclassing.
  
 <p></div>
<dl><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">Version:</span></dt>
  <dd>03/25/2008</dd>
<dt><span class="strong">Author:</span></dt>
  <dd>WHF</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../serialized-form.html#com.rbnb.sapi.Client">Serialized Form</a></dd></dl>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">
<!-- ========== METHOD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="method_summary">
<!--   -->
</a>
<h3>Method Summary</h3>
<table class="overviewSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
<caption><span>Methods</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Method and Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>abstract long</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/sapi/Client.html#BytesTransferred()">BytesTransferred</a></strong>()</code>
<div class="block">Reports the total number of bytes read and written by this Client.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/sapi/Client.html#CloseRBNBConnection()">CloseRBNBConnection</a></strong>()</code>
<div class="block">Close the connection with the server, and free up associated resources.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/sapi/Client.html#CloseRBNBConnection(boolean, boolean)">CloseRBNBConnection</a></strong>(boolean&nbsp;keepCache,
                   boolean&nbsp;keepArchive)</code>
<div class="block"><strong>Deprecated.</strong>&nbsp;
<div class="block"><i>Flags were counter-intuitive and allowed certain impossible
  requests, such as a deleted archive with a kept cache.  Use <a href="../../../com/rbnb/sapi/Client.html#CloseRBNBConnection()"><code>CloseRBNBConnection()</code></a> and <a href="../../../com/rbnb/sapi/Source.html#Detach()"><code>Source.Detach()</code></a> instead.</i></div>
</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>java.lang.String</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/sapi/Client.html#GetArchiveMode()">GetArchiveMode</a></strong>()</code>
<div class="block">Returns the archive mode used.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>int</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/sapi/Client.html#GetArchiveSize()">GetArchiveSize</a></strong>()</code>
<div class="block">Returns the number of archive frames used.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>int</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/sapi/Client.html#GetCacheSize()">GetCacheSize</a></strong>()</code>
<div class="block">Returns the number of cache frames used.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>java.lang.String[]</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/sapi/Client.html#GetChannelList()">GetChannelList</a></strong>()</code>
<div class="block"><strong>Deprecated.</strong>&nbsp;
<div class="block"><i>Please use <a href="../../../com/rbnb/sapi/Sink.html#RequestRegistration(com.rbnb.sapi.ChannelMap)"><code>Sink.RequestRegistration(
	ChannelMap)</code></a> instead.</i></div>
</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>java.lang.String[]</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/sapi/Client.html#GetChannelList(java.lang.String)">GetChannelList</a></strong>(java.lang.String&nbsp;matchStr)</code>
<div class="block"><strong>Deprecated.</strong>&nbsp;
<div class="block"><i>Please use <a href="../../../com/rbnb/sapi/Sink.html#RequestRegistration(com.rbnb.sapi.ChannelMap)"><code>Sink.RequestRegistration(
	ChannelMap)</code></a> instead.</i></div>
</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>java.lang.String</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/sapi/Client.html#GetClientName()">GetClientName</a></strong>()</code>
<div class="block">Returns the name of this client.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>java.lang.String</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/sapi/Client.html#GetServerName()">GetServerName</a></strong>()</code>
<div class="block">Returns the name of the server to which this client is connected.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/sapi/Client.html#OpenRBNBConnection()">OpenRBNBConnection</a></strong>()</code>
<div class="block">Opens a connection to the server, using default parameters.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/sapi/Client.html#OpenRBNBConnection(java.lang.String, java.lang.String)">OpenRBNBConnection</a></strong>(java.lang.String&nbsp;serverAddress,
                  java.lang.String&nbsp;clientName)</code>
<div class="block">Opens a connection to the server, using some default parameters.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/sapi/Client.html#OpenRBNBConnection(java.lang.String, java.lang.String, java.lang.String, java.lang.String)">OpenRBNBConnection</a></strong>(java.lang.String&nbsp;serverAddress,
                  java.lang.String&nbsp;clientName,
                  java.lang.String&nbsp;userName,
                  java.lang.String&nbsp;password)</code>
<div class="block">Opens a connection to the server.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/sapi/Client.html#SetRingBuffer(int, java.lang.String, int)">SetRingBuffer</a></strong>(int&nbsp;cache,
             java.lang.String&nbsp;mode,
             int&nbsp;archive)</code>
<div class="block">Allows the cache size, archive mode, and archive size to be 
  specified outside of the constructor.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/sapi/Client.html#VerifyConnection()">VerifyConnection</a></strong>()</code>
<div class="block">Returns true if the connection to the server is still valid; false, 
  if the connection has been severed.</div>
</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a name="methods_inherited_from_class_java.lang.Object">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
<code>equals, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">
<!-- ============ METHOD DETAIL ========== -->
<ul class="blockList">
<li class="blockList"><a name="method_detail">
<!--   -->
</a>
<h3>Method Detail</h3>
<a name="BytesTransferred()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>BytesTransferred</h4>
<pre>public abstract&nbsp;long&nbsp;BytesTransferred()</pre>
<div class="block">Reports the total number of bytes read and written by this Client. <p>
 <p></div>
<dl><dt><span class="strong">Returns:</span></dt><dd>The total number of bytes read and written.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.6</dd></dl>
</li>
</ul>
<a name="SetRingBuffer(int, java.lang.String, int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>SetRingBuffer</h4>
<pre>public&nbsp;void&nbsp;SetRingBuffer(int&nbsp;cache,
                 java.lang.String&nbsp;mode,
                 int&nbsp;archive)
                   throws <a href="../../../com/rbnb/sapi/SAPIException.html" title="class in com.rbnb.sapi">SAPIException</a></pre>
<div class="block">Allows the cache size, archive mode, and archive size to be 
  specified outside of the constructor.  This is useful for the 
  following purposes:
  <ul>
  <li>For JavaBean / ActiveX users, who cannot call the constructors
  which take arguments.</li>
  <li>To change the cache and archive settings while connected to
   the server.</li>
  <li>To delete the cache and archive at the server.</li>
  </ul>
 <p><STRONG>Note:</STRONG> This method will delete any data which
  lies in the current cache or archive, and replace it with a new
  cache or archive of the new size.
 <p></div>
<dl><dt><span class="strong">Throws:</span></dt>
<dd><code><a href="../../../com/rbnb/sapi/SAPIException.html" title="class in com.rbnb.sapi">SAPIException</a></code> - If connected to a server 
  when called, and the reset fails.</dd>
<dd><code>java.lang.IllegalArgumentException</code> - If cache is less than one;
  mode is not one of "none", "load", "create", "append", or
  "delete"; or if archive size is less than zero (for mode other
  than null or "none".</dd></dl>
</li>
</ul>
<a name="OpenRBNBConnection()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>OpenRBNBConnection</h4>
<pre>public final&nbsp;void&nbsp;OpenRBNBConnection()
                              throws <a href="../../../com/rbnb/sapi/SAPIException.html" title="class in com.rbnb.sapi">SAPIException</a></pre>
<div class="block">Opens a connection to the server, using default parameters. <p>
 <ul>
 <li><code>serverAddress</code> = "localhost:3333"</li>
 <li><code>clientName</code> = "MyClient"</li>
 <li><code>userName</code> = ""</li>
 <li><code>password</code> = ""</li>
 </ul>
 <p></div>
<dl><dt><span class="strong">Throws:</span></dt>
<dd><code><a href="../../../com/rbnb/sapi/SAPIException.html" title="class in com.rbnb.sapi">SAPIException</a></code> - If there is a problem connecting to the server.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd></dl>
</li>
</ul>
<a name="OpenRBNBConnection(java.lang.String, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>OpenRBNBConnection</h4>
<pre>public final&nbsp;void&nbsp;OpenRBNBConnection(java.lang.String&nbsp;serverAddress,
                      java.lang.String&nbsp;clientName)
                              throws <a href="../../../com/rbnb/sapi/SAPIException.html" title="class in com.rbnb.sapi">SAPIException</a></pre>
<div class="block">Opens a connection to the server, using some default parameters. <p>
 <ul>
 <li><code>userName</code> = ""</li>
 <li><code>password</code> = ""</li>
 </ul>
 <p></div>
<dl><dt><span class="strong">Throws:</span></dt>
<dd><code><a href="../../../com/rbnb/sapi/SAPIException.html" title="class in com.rbnb.sapi">SAPIException</a></code> - If there is a problem connecting to the server.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd></dl>
</li>
</ul>
<a name="OpenRBNBConnection(java.lang.String, java.lang.String, java.lang.String, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>OpenRBNBConnection</h4>
<pre>public final&nbsp;void&nbsp;OpenRBNBConnection(java.lang.String&nbsp;serverAddress,
                      java.lang.String&nbsp;clientName,
                      java.lang.String&nbsp;userName,
                      java.lang.String&nbsp;password)
                              throws <a href="../../../com/rbnb/sapi/SAPIException.html" title="class in com.rbnb.sapi">SAPIException</a></pre>
<div class="block">Opens a connection to the server.
 <p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>serverAddress</code> - The address of the server to connect to.</dd><dd><code>clientName</code> - The name used to identify this client on the server.</dd><dd><code>userName</code> - The name used to log onto the server, if secure.
                 <p>The username is transmitted in plain-text.  It is
                       not actually used to restrict access.</dd><dd><code>password</code> - The password associated with the user name.
                 <p>This value is transmitted in plain-text.  If set,
                       only other clients with the same password will be
                       allowed to access the data.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code><a href="../../../com/rbnb/sapi/SAPIException.html" title="class in com.rbnb.sapi">SAPIException</a></code> - If there are problems connecting to the server.</dd>
<dd><code>java.lang.IllegalArgumentException</code> - If <code>clientName</code> is
  null, zero-length, or contains slashes.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd></dl>
</li>
</ul>
<a name="CloseRBNBConnection()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>CloseRBNBConnection</h4>
<pre>public final&nbsp;void&nbsp;CloseRBNBConnection()</pre>
<div class="block">Close the connection with the server, and free up associated resources.
  Any cache on the server will be removed, but any connected archive will
  be preserved on disk, although the data is no longer available through
  the server.
 <p>If you have a Source and you wish to close the connection, but 
  allow the data to still be
  accessed, use <a href="../../../com/rbnb/sapi/Source.html#Detach()"><code>Source.Detach()</code></a>.</div>
<dl><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/sapi/Source.html#Detach()"><code>Source.Detach()</code></a></dd></dl>
</li>
</ul>
<a name="CloseRBNBConnection(boolean, boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>CloseRBNBConnection</h4>
<pre>public final&nbsp;void&nbsp;CloseRBNBConnection(boolean&nbsp;keepCache,
                       boolean&nbsp;keepArchive)</pre>
<div class="block"><span class="strong">Deprecated.</span>&nbsp;<i>Flags were counter-intuitive and allowed certain impossible
  requests, such as a deleted archive with a kept cache.  Use <a href="../../../com/rbnb/sapi/Client.html#CloseRBNBConnection()"><code>CloseRBNBConnection()</code></a> and <a href="../../../com/rbnb/sapi/Source.html#Detach()"><code>Source.Detach()</code></a> instead.</i></div>
<div class="block">Close the connection with the server, and free up associated resources.
 <p>
  The two parameters keepCache and keepArchive determine the state of 
  data on the server from this source, after the source has disconnected.
   If <code>keepCache</code> is true, the memory cache at the server will
  be preserved, so that Sinks can request the data even after the Source
  has closed.  If <code>keepArchive</code> is true, the disk archive at 
  the server will be preserved.  Otherwise it will be deleted from the 
  disk.
 <p>
  In order to load a stored archive, a Source with the same name as the
   Source which created the archive must open a connection with the 
   archive option set to "load".  See <a href="../../../com/rbnb/sapi/Source.html#Source(int, java.lang.String, int)"><code>Source.Source(int,
	String,int)</code></a> and <a href="../../../com/rbnb/sapi/Client.html#SetRingBuffer(int, java.lang.String, int)"><code>SetRingBuffer(int,String,int)</code></a>.
 <p>
 Currently the only implemented options are <code>keepCache = false
  </code>, and <code>keepArchive = true</code>.  That is to say, 
  regardless of the options passed to this function, it is impossible
  to disconnect a source from the server and leave the cache in the
  ring buffer, nor is it possible to delete an archive from the server's
  disk.  These features will be implemented in a future release.
 <p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>keepCache</code> - If true, the memory cache at the server
    will be preserved.</dd><dd><code>keepArchive</code> - If true, the disk archive at the server will 
    be preserved. Otherwise it will be deleted from the disk.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd></dl>
</li>
</ul>
<a name="GetChannelList(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>GetChannelList</h4>
<pre>public final&nbsp;java.lang.String[]&nbsp;GetChannelList(java.lang.String&nbsp;matchStr)
                                        throws <a href="../../../com/rbnb/sapi/SAPIException.html" title="class in com.rbnb.sapi">SAPIException</a></pre>
<div class="block"><span class="strong">Deprecated.</span>&nbsp;<i>Please use <a href="../../../com/rbnb/sapi/Sink.html#RequestRegistration(com.rbnb.sapi.ChannelMap)"><code>Sink.RequestRegistration(
	ChannelMap)</code></a> instead.</i></div>
<div class="block">Obtains the list of channels available at the server.
 Requires a live connection to the server and a valid match string.
 <p>
 The wildcard for all channels is "...".  The asterisk acts
  as it does in path names (i.e. not recursively).  
  Therefore, to access all channels
  of a depth of three on a server you would use: /ServerName/ * / * / *</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>matchStr</code> - A string against which the channels are 
  compared to determine if they belong.</dd>
<dt><span class="strong">Returns:</span></dt><dd>An array of currently available channels.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code><a href="../../../com/rbnb/sapi/SAPIException.html" title="class in com.rbnb.sapi">SAPIException</a></code> - If not connected to a server or there 
  is a problem with the connection.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd></dl>
</li>
</ul>
<a name="GetChannelList()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>GetChannelList</h4>
<pre>public final&nbsp;java.lang.String[]&nbsp;GetChannelList()
                                        throws <a href="../../../com/rbnb/sapi/SAPIException.html" title="class in com.rbnb.sapi">SAPIException</a></pre>
<div class="block"><span class="strong">Deprecated.</span>&nbsp;<i>Please use <a href="../../../com/rbnb/sapi/Sink.html#RequestRegistration(com.rbnb.sapi.ChannelMap)"><code>Sink.RequestRegistration(
	ChannelMap)</code></a> instead.</i></div>
<div class="block">Gets all available channels.
 <p></div>
<dl><dt><span class="strong">Throws:</span></dt>
<dd><code><a href="../../../com/rbnb/sapi/SAPIException.html" title="class in com.rbnb.sapi">SAPIException</a></code></dd></dl>
</li>
</ul>
<a name="GetServerName()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>GetServerName</h4>
<pre>public final&nbsp;java.lang.String&nbsp;GetServerName()</pre>
<div class="block">Returns the name of the server to which this client is connected.
  Note that this involves a round-trip to the server to verify the
  connection.
 <p></div>
<dl><dt><span class="strong">Throws:</span></dt>
<dd><code>java.lang.IllegalStateException</code> - If we are not currently connected
   to a server.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/sapi/Client.html#OpenRBNBConnection(java.lang.String, java.lang.String, java.lang.String, java.lang.String)"><code>OpenRBNBConnection(String, String, String, String)</code></a></dd></dl>
</li>
</ul>
<a name="VerifyConnection()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>VerifyConnection</h4>
<pre>public final&nbsp;boolean&nbsp;VerifyConnection()</pre>
<div class="block">Returns true if the connection to the server is still valid; false, 
  if the connection has been severed.</div>
</li>
</ul>
<a name="GetClientName()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>GetClientName</h4>
<pre>public final&nbsp;java.lang.String&nbsp;GetClientName()</pre>
<div class="block">Returns the name of this client. &nbsp;This may not be identical
  to the name given to OpenRBNBClient(), as the server will append
  additional identifiers of the form ".n", where n is the number
  of clients requesting that name minus one, in the case of 
  duplicate client names.
 <p></div>
<dl><dt><span class="strong">Throws:</span></dt>
<dd><code>java.lang.IllegalStateException</code> - If we are not currently connected
   to a server.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/sapi/Client.html#OpenRBNBConnection(java.lang.String, java.lang.String, java.lang.String, java.lang.String)"><code>OpenRBNBConnection(String, String, String, String)</code></a></dd></dl>
</li>
</ul>
<a name="GetCacheSize()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>GetCacheSize</h4>
<pre>public final&nbsp;int&nbsp;GetCacheSize()</pre>
<div class="block">Returns the number of cache frames used.

<p></div>
<dl><dt><span class="strong">Since:</span></dt>
  <dd>V2.6B5</dd></dl>
</li>
</ul>
<a name="GetArchiveSize()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>GetArchiveSize</h4>
<pre>public final&nbsp;int&nbsp;GetArchiveSize()</pre>
<div class="block">Returns the number of archive frames used.

<p></div>
<dl><dt><span class="strong">Since:</span></dt>
  <dd>V2.6B5</dd></dl>
</li>
</ul>
<a name="GetArchiveMode()">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>GetArchiveMode</h4>
<pre>public final&nbsp;java.lang.String&nbsp;GetArchiveMode()</pre>
<div class="block">Returns the archive mode used.

<p></div>
<dl><dt><span class="strong">Since:</span></dt>
  <dd>V2.6B5</dd></dl>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
</div>
<!-- ========= END OF CLASS DATA ========= -->
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a name="navbar_bottom">
<!--   -->
</a><a href="#skip-navbar_bottom" title="Skip navigation links"></a><a name="navbar_bottom_firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/Client.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../index-files/index-1.html">Index</a></li>
<li><a href="../../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../../../com/rbnb/sapi/ChannelTree.NodeTypeEnum.html" title="class in com.rbnb.sapi"><span class="strong">Prev Class</span></a></li>
<li><a href="../../../com/rbnb/sapi/Control.html" title="class in com.rbnb.sapi"><span class="strong">Next Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../../../index.html?com/rbnb/sapi/Client.html" target="_top">Frames</a></li>
<li><a href="Client.html" target="_top">No Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="../../../allclasses-noframe.html">All Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li>Constr&nbsp;|&nbsp;</li>
<li><a href="#method_summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li>Constr&nbsp;|&nbsp;</li>
<li><a href="#method_detail">Method</a></li>
</ul>
</div>
<a name="skip-navbar_bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</body>
</html>
