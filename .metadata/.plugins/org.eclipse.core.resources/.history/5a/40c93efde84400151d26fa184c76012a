<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- NewPage -->
<html lang="en">
<head>
<!-- Generated by javadoc (version 1.7.0_02) on Tue Feb 21 13:58:32 PST 2012 -->
<title>Rmap</title>
<meta name="date" content="2012-02-21">
<link rel="stylesheet" type="text/css" href="../../../stylesheet.css" title="Style">
</head>
<body>
<script type="text/javascript"><!--
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="Rmap";
    }
//-->
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a name="navbar_top">
<!--   -->
</a><a href="#skip-navbar_top" title="Skip navigation links"></a><a name="navbar_top_firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/Rmap.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../index-files/index-1.html">Index</a></li>
<li><a href="../../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../../../com/rbnb/api/RequestOptions.html" title="class in com.rbnb.api"><span class="strong">Prev Class</span></a></li>
<li><a href="../../../com/rbnb/api/RmapInterface.html" title="interface in com.rbnb.api"><span class="strong">Next Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../../../index.html?com/rbnb/api/Rmap.html" target="_top">Frames</a></li>
<li><a href="Rmap.html" target="_top">No Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../../../allclasses-noframe.html">All Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li><a href="#field_summary">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor_summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li><a href="#field_detail">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor_detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_detail">Method</a></li>
</ul>
</div>
<a name="skip-navbar_top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
<!-- ======== START OF CLASS DATA ======== -->
<div class="header">
<div class="subTitle">com.rbnb.api</div>
<h2 title="Class Rmap" class="title">Class Rmap</h2>
</div>
<div class="contentContainer">
<ul class="inheritance">
<li>java.lang.Object</li>
<li>
<ul class="inheritance">
<li>com.rbnb.api.Rmap</li>
</ul>
</li>
</ul>
<div class="description">
<ul class="blockList">
<li class="blockList">
<dl>
<dt>All Implemented Interfaces:</dt>
<dd><a href="../../../com/rbnb/utility/SortCompareInterface.html" title="interface in com.rbnb.utility">SortCompareInterface</a>, <a href="../../../com/rbnb/utility/SortInterface.html" title="interface in com.rbnb.utility">SortInterface</a>, java.io.Serializable, java.lang.Cloneable</dd>
</dl>
<dl>
<dt>Direct Known Subclasses:</dt>
<dd><a href="../../../com/rbnb/api/ControllerHandle.html" title="class in com.rbnb.api">ControllerHandle</a>, <a href="../../../com/rbnb/api/DataRequest.html" title="class in com.rbnb.api">DataRequest</a>, <a href="../../../com/rbnb/api/EndOfStream.html" title="class in com.rbnb.api">EndOfStream</a>, <a href="../../../com/rbnb/api/Server.html" title="class in com.rbnb.api">Server</a></dd>
</dl>
<hr>
<br>
<pre>public class <span class="strong">Rmap</span>
extends java.lang.Object
implements <a href="../../../com/rbnb/utility/SortCompareInterface.html" title="interface in com.rbnb.utility">SortCompareInterface</a></pre>
<div class="block">Hierarchical description of data.
 <p>
 An <code>Rmap</code> consists of six major parts:
 <p><ol>
 <li>A name,</li>
 <li>A time <code>TimeRange</code>,</li>
 <li>A frame index <code>TimeRange</code>,</li>
 <li>A data block,</li>
 <li>A list of group member <code>Rmaps</code>, and</li>
 <li>A list of child <code>Rmaps</code>.</li>
 </ol><p>
 The optional name is a string that provides part of the unique
 identification for this <code>Rmap</code> within its parent
 <code>Rmap's</code> group or child list. 
 <p>
 The optional time <code>TimeRange</code> provides the remainder of the
 unique identification for this <code>Rmap</code> within its parent
 <code>Rmap's</code> group or child list.
 <p>
 The optional frame index <code>TimeRange</code> provides the frame index(es)
 represented by this <code>Rmap</code>. A "frame" is defined as a single
 <code>Rmap</code> hierarchy sent by a source application to the server. The
 server provides a monotonically increasing index for each frame.
 <p>
 A parent <code>Rmap</code> can contain only a single <code>Rmap</code> with
 a particular combination of name and time (including no name and no
 <code>TimeRange</code>). <code>Rmaps</code> are sorted in a list (group or
 child) by name (nameless <code>Rmaps</code> come first) and then by time
 (timeless <code>Rmaps</code> come first).
 <p>
 The optional <code>DataBlock</code> describes and optionally provides the
 data belonging to this <code>Rmap</code> and its children.
 <p>
 The optional group list contains <code>Rmaps</code> that inherit the
 children of this <code>Rmap</code> as children of themselves.
 <p>
 The optional children list contains <code>Rmaps</code> that belong to this
 <code>Rmap</code> and its group members.
 <p></div>
<dl><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">Version:</span></dt>
  <dd>05/12/2005</dd>
<dt><span class="strong">Author:</span></dt>
  <dd>Ian Brown</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/api/DataBlock.html" title="class in com.rbnb.api"><code>DataBlock</code></a>, 
<code>DataReference</code>, 
<a href="../../../com/rbnb/api/DataArray.html" title="class in com.rbnb.api"><code>DataArray</code></a>, 
<a href="../../../com/rbnb/api/TimeRange.html" title="class in com.rbnb.api"><code>TimeRange</code></a>, 
<a href="../../../serialized-form.html#com.rbnb.api.Rmap">Serialized Form</a></dd></dl>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">
<!-- =========== FIELD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="field_summary">
<!--   -->
</a>
<h3>Field Summary</h3>
<table class="overviewSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Field and Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static char</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/Rmap.html#PATHDELIMITER">PATHDELIMITER</a></strong></code>
<div class="block">the delimiter between names in a fully specified channel name path.</div>
</td>
</tr>
</table>
</li>
</ul>
<!-- ======== CONSTRUCTOR SUMMARY ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor_summary">
<!--   -->
</a>
<h3>Constructor Summary</h3>
<table class="overviewSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colOne" scope="col">Constructor and Description</th>
</tr>
<tr class="altColor">
<td class="colOne"><code><strong><a href="../../../com/rbnb/api/Rmap.html#Rmap()">Rmap</a></strong>()</code>
<div class="block">Class constructor.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colOne"><code><strong><a href="../../../com/rbnb/api/Rmap.html#Rmap(java.lang.String)">Rmap</a></strong>(java.lang.String&nbsp;nameI)</code>
<div class="block">Class constructor to build an <code>Rmap</code> from a name.</div>
</td>
</tr>
<tr class="altColor">
<td class="colOne"><code><strong><a href="../../../com/rbnb/api/Rmap.html#Rmap(java.lang.String, com.rbnb.api.DataBlock, com.rbnb.api.TimeRange)">Rmap</a></strong>(java.lang.String&nbsp;nameI,
    <a href="../../../com/rbnb/api/DataBlock.html" title="class in com.rbnb.api">DataBlock</a>&nbsp;dblockI,
    <a href="../../../com/rbnb/api/TimeRange.html" title="class in com.rbnb.api">TimeRange</a>&nbsp;trangeI)</code>
<div class="block">Class constructor to build an <code>Rmap</code> from a name, data block,
 and <code>TimeRange</code>.</div>
</td>
</tr>
</table>
</li>
</ul>
<!-- ========== METHOD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="method_summary">
<!--   -->
</a>
<h3>Method Summary</h3>
<table class="overviewSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
<caption><span>Methods</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Method and Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code><a href="../../../com/rbnb/api/Rmap.html" title="class in com.rbnb.api">Rmap</a></code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/Rmap.html#addChannel(java.lang.String)">addChannel</a></strong>(java.lang.String&nbsp;channelNameI)</code>
<div class="block">Adds a new <code>Rmap</code> hierarchy (channel name) to an existing
 hierarchy.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/Rmap.html#addChild(com.rbnb.api.Rmap)">addChild</a></strong>(<a href="../../../com/rbnb/api/Rmap.html" title="class in com.rbnb.api">Rmap</a>&nbsp;childI)</code>
<div class="block">Adds a child <code>Rmap</code> to this <code>Rmap</code>.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/Rmap.html#addChildAt(com.rbnb.api.Rmap, int)">addChildAt</a></strong>(<a href="../../../com/rbnb/api/Rmap.html" title="class in com.rbnb.api">Rmap</a>&nbsp;childI,
          int&nbsp;indexI)</code>
<div class="block">Adds a child <code>Rmap</code> to this <code>Rmap</code> at the
 specified index.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/Rmap.html#addDataWithTimeReference(java.lang.Object, int, int, byte, byte, com.rbnb.api.DataArray)">addDataWithTimeReference</a></strong>(java.lang.Object&nbsp;dataI,
                        int&nbsp;ndataI,
                        int&nbsp;ptsizeI,
                        byte&nbsp;dtypeI,
                        byte&nbsp;worderI,
                        <a href="../../../com/rbnb/api/DataArray.html" title="class in com.rbnb.api">DataArray</a>&nbsp;referenceI)</code>
<div class="block">Adds data to this <code>Rmap</code> hierarchy with a
 <code>DataArray</code> supplying the <code>TimeRanges</code>.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/Rmap.html#addMember(com.rbnb.api.Rmap)">addMember</a></strong>(<a href="../../../com/rbnb/api/Rmap.html" title="class in com.rbnb.api">Rmap</a>&nbsp;memberI)</code>
<div class="block">Adds a member <code>Rmap</code> to this <code>Rmap</code>.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>java.lang.Object</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/Rmap.html#clone()">clone</a></strong>()</code>
<div class="block">Clones this <code>Rmap</code>.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/Rmap.html#collapse()">collapse</a></strong>()</code>
<div class="block">Collapses this <code>Rmap</code> hierarchy.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>int</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/Rmap.html#compareNames(com.rbnb.api.Rmap)">compareNames</a></strong>(<a href="../../../com/rbnb/api/Rmap.html" title="class in com.rbnb.api">Rmap</a>&nbsp;otherI)</code>
<div class="block">Compares the name of this <code>Rmap</code> to the name of the input
 <code>Rmap</code>.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>int</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/Rmap.html#compareNames(java.lang.String)">compareNames</a></strong>(java.lang.String&nbsp;nameI)</code>
<div class="block">Compares the name of this <code>Rmap</code> to the input name.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static int</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/Rmap.html#compareNames(java.lang.String, java.lang.String)">compareNames</a></strong>(java.lang.String&nbsp;nameI,
            java.lang.String&nbsp;name2I)</code>
<div class="block">Compares the input names.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>int</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/Rmap.html#compareTo(java.lang.Object, java.lang.Object)">compareTo</a></strong>(java.lang.Object&nbsp;sidI,
         java.lang.Object&nbsp;otherI)</code>
<div class="block">Compares the sorting value of this <code>Rmap</code> to the input
 sorting value according to the type sort specified by the sort
 identifier.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>int</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/Rmap.html#compareTo(com.rbnb.api.Rmap)">compareTo</a></strong>(<a href="../../../com/rbnb/api/Rmap.html" title="class in com.rbnb.api">Rmap</a>&nbsp;rmapI)</code>
<div class="block">Compares the input <code>Rmap</code> to this one.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static <a href="../../../com/rbnb/api/Rmap.html" title="class in com.rbnb.api">Rmap</a></code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/Rmap.html#createFromName(java.lang.String)">createFromName</a></strong>(java.lang.String&nbsp;nameI)</code>
<div class="block">Creates an <code>Rmap</code> hierarchy from the input name.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code><a href="../../../com/rbnb/api/DataArray.html" title="class in com.rbnb.api">DataArray</a></code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/Rmap.html#extract(java.lang.String)">extract</a></strong>(java.lang.String&nbsp;chanNameI)</code>
<div class="block">Extracts the time and data for a particular channel.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code><a href="../../../com/rbnb/api/DataArray.html" title="class in com.rbnb.api">DataArray</a></code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/Rmap.html#extract(java.lang.String, boolean, boolean, boolean)">extract</a></strong>(java.lang.String&nbsp;chanNameI,
       boolean&nbsp;frameFlagI,
       boolean&nbsp;timeFlagI,
       boolean&nbsp;dataFlagI)</code>
<div class="block">Extracts the frame indexes, time, and/or data for a particular channel.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>java.lang.String[]</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/Rmap.html#extractFolders()">extractFolders</a></strong>()</code>
<div class="block">Extracts the names of folders from this <code>Rmap</code> hierarchy.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>java.lang.String[]</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/Rmap.html#extractFoldersAndChannels()">extractFoldersAndChannels</a></strong>()</code>
<div class="block">Extracts the names of channels and folders from this <code>Rmap</code>
 hierarchy.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>java.lang.String[]</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/Rmap.html#extractNames()">extractNames</a></strong>()</code>
<div class="block">Extracts the names from this <code>Rmap</code> hierarchy.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code><a href="../../../com/rbnb/api/Rmap.html" title="class in com.rbnb.api">Rmap</a></code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/Rmap.html#extractRmap(com.rbnb.api.Rmap, boolean)">extractRmap</a></strong>(<a href="../../../com/rbnb/api/Rmap.html" title="class in com.rbnb.api">Rmap</a>&nbsp;requestI,
           boolean&nbsp;dataFlagI)</code>
<div class="block">Extracts <code>Rmaps</code> from this <code>Rmap</code> that match the
 input request <code>Rmap</code>.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code><a href="../../../com/rbnb/api/Rmap.html" title="class in com.rbnb.api">Rmap</a></code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/Rmap.html#findChild(com.rbnb.api.Rmap)">findChild</a></strong>(<a href="../../../com/rbnb/api/Rmap.html" title="class in com.rbnb.api">Rmap</a>&nbsp;childI)</code>
<div class="block">Finds a matching child <code>Rmap</code>.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code><a href="../../../com/rbnb/api/Rmap.html" title="class in com.rbnb.api">Rmap</a></code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/Rmap.html#findDescendant(java.lang.String, boolean)">findDescendant</a></strong>(java.lang.String&nbsp;nameI,
              boolean&nbsp;addI)</code>
<div class="block">Finds a descendant <code>Rmap</code> by name.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code><a href="../../../com/rbnb/api/Rmap.html" title="class in com.rbnb.api">Rmap</a></code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/Rmap.html#findMember(com.rbnb.api.Rmap)">findMember</a></strong>(<a href="../../../com/rbnb/api/Rmap.html" title="class in com.rbnb.api">Rmap</a>&nbsp;memberI)</code>
<div class="block">Finds a matching member <code>Rmap</code>.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code><a href="../../../com/rbnb/api/Rmap.html" title="class in com.rbnb.api">Rmap</a></code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/Rmap.html#getChildAt(int)">getChildAt</a></strong>(int&nbsp;indexI)</code>
<div class="block">Gets the child at the specified index.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>com.rbnb.api.RmapVector</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/Rmap.html#getChildren()">getChildren</a></strong>()</code>
<div class="block">Gets the list of children of this <code>Rmap</code>.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code><a href="../../../com/rbnb/api/DataBlock.html" title="class in com.rbnb.api">DataBlock</a></code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/Rmap.html#getDblock()">getDblock</a></strong>()</code>
<div class="block">Gets the <code>DataBlock</code> of this <code>Rmap</code>.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code><a href="../../../com/rbnb/api/TimeRange.html" title="class in com.rbnb.api">TimeRange</a></code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/Rmap.html#getFrange()">getFrange</a></strong>()</code>
<div class="block">Gets the frame index <code>TimeRange</code> of this <code>Rmap</code>.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>java.lang.String</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/Rmap.html#getFullName()">getFullName</a></strong>()</code>
<div class="block">Gets the fully qualified name of this <code>Rmap</code>.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code><a href="../../../com/rbnb/api/Rmap.html" title="class in com.rbnb.api">Rmap</a></code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/Rmap.html#getMemberAt(int)">getMemberAt</a></strong>(int&nbsp;indexI)</code>
<div class="block">Gets the member at the specified index.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>com.rbnb.api.RmapVector</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/Rmap.html#getMembers()">getMembers</a></strong>()</code>
<div class="block">Gets the group members of this <code>Rmap</code>.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>java.lang.String</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/Rmap.html#getName()">getName</a></strong>()</code>
<div class="block">Gets the name of this <code>Rmap</code>.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>int</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/Rmap.html#getNchildren()">getNchildren</a></strong>()</code>
<div class="block">Gets the number of children.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>int</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/Rmap.html#getNmembers()">getNmembers</a></strong>()</code>
<div class="block">Gets the number of members.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code><a href="../../../com/rbnb/api/Rmap.html" title="class in com.rbnb.api">Rmap</a></code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/Rmap.html#getParent()">getParent</a></strong>()</code>
<div class="block">Gets the parent <code>Rmap</code> of this <code>Rmap</code>.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code><a href="../../../com/rbnb/api/TimeRange.html" title="class in com.rbnb.api">TimeRange</a></code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/Rmap.html#getTrange()">getTrange</a></strong>()</code>
<div class="block">Gets the <code>TimeRange</code> of this <code>Rmap</code>.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/Rmap.html#isImplemented(byte)">isImplemented</a></strong>(byte&nbsp;typeI)</code>
<div class="block">Is the specified type of operation implemented?</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/Rmap.html#markLeaf()">markLeaf</a></strong>()</code>
<div class="block">Marks leaf nodes of an <code>Rmap</code> hierarchy by putting in
 single byte <code>DataBlocks</code>.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code><a href="../../../com/rbnb/api/Rmap.html" title="class in com.rbnb.api">Rmap</a></code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/Rmap.html#mergeWith(com.rbnb.api.Rmap)">mergeWith</a></strong>(<a href="../../../com/rbnb/api/Rmap.html" title="class in com.rbnb.api">Rmap</a>&nbsp;rmapI)</code>
<div class="block">Merges the input <code>Rmap</code> hierarchy with this one.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code><a href="../../../com/rbnb/api/Rmap.html" title="class in com.rbnb.api">Rmap</a></code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/Rmap.html#moveToBottom()">moveToBottom</a></strong>()</code>
<div class="block">Moves to the bottom of this <code>Rmap</code> hierarchy.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code><a href="../../../com/rbnb/api/Rmap.html" title="class in com.rbnb.api">Rmap</a></code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/Rmap.html#moveToTop()">moveToTop</a></strong>()</code>
<div class="block">Moves to the top of this <code>Rmap</code> hierarchy.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/Rmap.html#nullify()">nullify</a></strong>()</code>
<div class="block">Nullifies this <code>Rmap</code>.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/Rmap.html#removeChild(com.rbnb.api.Rmap)">removeChild</a></strong>(<a href="../../../com/rbnb/api/Rmap.html" title="class in com.rbnb.api">Rmap</a>&nbsp;childI)</code>
<div class="block">Removes a child <code>Rmap</code> from this <code>Rmap</code>.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/Rmap.html#removeChildAt(int)">removeChildAt</a></strong>(int&nbsp;indexI)</code>
<div class="block">Removes the child <code>Rmap</code> at a particular index from this
 <code>Rmap</code>.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/Rmap.html#removeMember(com.rbnb.api.Rmap)">removeMember</a></strong>(<a href="../../../com/rbnb/api/Rmap.html" title="class in com.rbnb.api">Rmap</a>&nbsp;memberI)</code>
<div class="block">Removes a member <code>Rmap</code> from this <code>Rmap</code>.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/Rmap.html#removeMemberAt(int)">removeMemberAt</a></strong>(int&nbsp;indexI)</code>
<div class="block">Removes the member <code>Rmap</code> at a particular index from this
 <code>Rmap</code>.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/Rmap.html#setDblock(com.rbnb.api.DataBlock)">setDblock</a></strong>(<a href="../../../com/rbnb/api/DataBlock.html" title="class in com.rbnb.api">DataBlock</a>&nbsp;dblockI)</code>
<div class="block">Sets the <code>DataBlock</code> of this <code>Rmap</code>.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/Rmap.html#setFrange(com.rbnb.api.TimeRange)">setFrange</a></strong>(<a href="../../../com/rbnb/api/TimeRange.html" title="class in com.rbnb.api">TimeRange</a>&nbsp;frangeI)</code>
<div class="block">Sets the frame index <code>TimeRange</code> of this <code>Rmap</code>.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/Rmap.html#setName(java.lang.String)">setName</a></strong>(java.lang.String&nbsp;nameI)</code>
<div class="block">Sets the name of this <code>Rmap</code>.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/Rmap.html#setTrange(com.rbnb.api.TimeRange)">setTrange</a></strong>(<a href="../../../com/rbnb/api/TimeRange.html" title="class in com.rbnb.api">TimeRange</a>&nbsp;trangeI)</code>
<div class="block">Sets the <code>TimeRange</code> of this <code>Rmap</code>.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>java.lang.Object</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/Rmap.html#sortField(java.lang.Object)">sortField</a></strong>(java.lang.Object&nbsp;sidI)</code>
<div class="block">Gets the sorting value for this <code>Rmap</code>.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code><a href="../../../com/rbnb/api/Rmap.html" title="class in com.rbnb.api">Rmap</a></code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/Rmap.html#toNameHierarchy()">toNameHierarchy</a></strong>()</code>
<div class="block">Creates an <code>Rmap</code> hierarchy that can be used to make requests
 for the names.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>java.lang.String</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/Rmap.html#toString()">toString</a></strong>()</code>
<div class="block">Gets a displayable string representation of this <code>Rmap</code>.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>java.lang.String</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/Rmap.html#toString(boolean, java.lang.String)">toString</a></strong>(boolean&nbsp;memberI,
        java.lang.String&nbsp;indentI)</code>
<div class="block">Gets a displayable string representation of this <code>Rmap</code>.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static java.lang.String</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/Rmap.html#xmlRegistration(long, java.lang.String)">xmlRegistration</a></strong>(long&nbsp;lengthI,
               java.lang.String&nbsp;mimeTypeI)</code>
<div class="block">Produces an XML description of the specified length for the registration
 map.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static java.lang.String</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/Rmap.html#xmlRegistration(long, java.lang.String, java.lang.String)">xmlRegistration</a></strong>(long&nbsp;lengthI,
               java.lang.String&nbsp;mimeTypeI,
               java.lang.String&nbsp;xmlI)</code>
<div class="block">Produces an XML description of the specified length and the MIME type
 for the registration map.</div>
</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a name="methods_inherited_from_class_java.lang.Object">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
<code>equals, getClass, hashCode, notify, notifyAll, wait, wait, wait</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">
<!-- ============ FIELD DETAIL =========== -->
<ul class="blockList">
<li class="blockList"><a name="field_detail">
<!--   -->
</a>
<h3>Field Detail</h3>
<a name="PATHDELIMITER">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>PATHDELIMITER</h4>
<pre>public static final&nbsp;char PATHDELIMITER</pre>
<div class="block">the delimiter between names in a fully specified channel name path.
 <p></div>
<dl><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../constant-values.html#com.rbnb.api.Rmap.PATHDELIMITER">Constant Field Values</a></dd></dl>
</li>
</ul>
</li>
</ul>
<!-- ========= CONSTRUCTOR DETAIL ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor_detail">
<!--   -->
</a>
<h3>Constructor Detail</h3>
<a name="Rmap()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>Rmap</h4>
<pre>public&nbsp;Rmap()</pre>
<div class="block">Class constructor.
 <p></div>
<dl><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/api/Rmap.html#Rmap(java.lang.String)"><code>Rmap(String)</code></a>, 
<a href="../../../com/rbnb/api/Rmap.html#Rmap(java.lang.String, com.rbnb.api.DataBlock, com.rbnb.api.TimeRange)"><code>Rmap(String,DataBlock,TimeRange)</code></a></dd></dl>
</li>
</ul>
<a name="Rmap(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>Rmap</h4>
<pre>public&nbsp;Rmap(java.lang.String&nbsp;nameI)
     throws <a href="../../../com/rbnb/api/AddressException.html" title="class in com.rbnb.api">AddressException</a>,
            <a href="../../../com/rbnb/api/SerializeException.html" title="class in com.rbnb.api">SerializeException</a>,
            java.io.EOFException,
            java.io.InterruptedIOException,
            java.io.IOException,
            java.lang.InterruptedException</pre>
<div class="block">Class constructor to build an <code>Rmap</code> from a name.
 <p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>nameI</code> - the name of the <code>Rmap</code>.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code><a href="../../../com/rbnb/api/AddressException.html" title="class in com.rbnb.api">AddressException</a></code> - thrown if there is a problem with an address.</dd>
<dd><code><a href="../../../com/rbnb/api/SerializeException.html" title="class in com.rbnb.api">SerializeException</a></code> - thrown if there is a problem with the serialization.</dd>
<dd><code>java.io.EOFException</code> - thrown if the end of the input stream is reached.</dd>
<dd><code>java.io.InterruptedIOException</code> - thrown if this operation is interrupted during I/O.</dd>
<dd><code>java.io.IOException</code> - thrown if there is an error during I/O.</dd>
<dd><code>java.lang.InterruptedException</code> - thrown if the operation is interrupted.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/api/Rmap.html#Rmap()"><code>Rmap()</code></a></dd></dl>
</li>
</ul>
<a name="Rmap(java.lang.String, com.rbnb.api.DataBlock, com.rbnb.api.TimeRange)">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>Rmap</h4>
<pre>public&nbsp;Rmap(java.lang.String&nbsp;nameI,
    <a href="../../../com/rbnb/api/DataBlock.html" title="class in com.rbnb.api">DataBlock</a>&nbsp;dblockI,
    <a href="../../../com/rbnb/api/TimeRange.html" title="class in com.rbnb.api">TimeRange</a>&nbsp;trangeI)
     throws <a href="../../../com/rbnb/api/AddressException.html" title="class in com.rbnb.api">AddressException</a>,
            <a href="../../../com/rbnb/api/SerializeException.html" title="class in com.rbnb.api">SerializeException</a>,
            java.io.EOFException,
            java.io.InterruptedIOException,
            java.io.IOException,
            java.lang.InterruptedException</pre>
<div class="block">Class constructor to build an <code>Rmap</code> from a name, data block,
 and <code>TimeRange</code>.
 <p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>nameI</code> - the name of the <code>Rmap</code>.</dd><dd><code>dblockI</code> - the <code>DataBlock</code>.</dd><dd><code>trangeI</code> - the <code>TimeRange</code>.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code><a href="../../../com/rbnb/api/AddressException.html" title="class in com.rbnb.api">AddressException</a></code> - thrown if there is a problem with an address.</dd>
<dd><code><a href="../../../com/rbnb/api/SerializeException.html" title="class in com.rbnb.api">SerializeException</a></code> - thrown if there is a problem with the serialization.</dd>
<dd><code>java.io.EOFException</code> - thrown if the end of the input stream is reached.</dd>
<dd><code>java.io.InterruptedIOException</code> - thrown if this operation is interrupted during I/O.</dd>
<dd><code>java.io.IOException</code> - thrown if there is an error during I/O.</dd>
<dd><code>java.lang.InterruptedException</code> - thrown if the operation is interrupted.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd></dl>
</li>
</ul>
</li>
</ul>
<!-- ============ METHOD DETAIL ========== -->
<ul class="blockList">
<li class="blockList"><a name="method_detail">
<!--   -->
</a>
<h3>Method Detail</h3>
<a name="addChannel(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>addChannel</h4>
<pre>public final&nbsp;<a href="../../../com/rbnb/api/Rmap.html" title="class in com.rbnb.api">Rmap</a>&nbsp;addChannel(java.lang.String&nbsp;channelNameI)
                      throws <a href="../../../com/rbnb/api/AddressException.html" title="class in com.rbnb.api">AddressException</a>,
                             <a href="../../../com/rbnb/api/SerializeException.html" title="class in com.rbnb.api">SerializeException</a>,
                             java.io.EOFException,
                             java.io.IOException,
                             java.lang.InterruptedException</pre>
<div class="block">Adds a new <code>Rmap</code> hierarchy (channel name) to an existing
 hierarchy.
 <p>
 This method creates the minimum number of additional <code>Rmaps</code>
 needed to add the new hierarchy by matching names in the new hierarchy
 to those in the existing hierarchy.
 <p>
 If necessary, this method creates a common parent for the existing
 hierarchy and the new one.
 <p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>channelNameI</code> - the name to add.</dd>
<dt><span class="strong">Returns:</span></dt><dd>the new <code>Rmap</code> representing the channel.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code><a href="../../../com/rbnb/api/AddressException.html" title="class in com.rbnb.api">AddressException</a></code> - thrown if there is a problem with an address.</dd>
<dd><code><a href="../../../com/rbnb/api/SerializeException.html" title="class in com.rbnb.api">SerializeException</a></code> - thrown if there is a problem with the serialization.</dd>
<dd><code>java.io.EOFException</code> - thrown if the end of the input stream is reached.</dd>
<dd><code>java.io.IOException</code> - thrown if there is an error during I/O.</dd>
<dd><code>java.lang.IllegalArgumentException</code> - thrown if there is a problem with the input name.</dd>
<dd><code>java.lang.IllegalStateException</code> - thrown if this <code>Rmap</code> already has a parent.</dd>
<dd><code>java.lang.InterruptedException</code> - thrown if the operation is interrupted.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd></dl>
</li>
</ul>
<a name="addChild(com.rbnb.api.Rmap)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>addChild</h4>
<pre>public&nbsp;void&nbsp;addChild(<a href="../../../com/rbnb/api/Rmap.html" title="class in com.rbnb.api">Rmap</a>&nbsp;childI)
              throws <a href="../../../com/rbnb/api/AddressException.html" title="class in com.rbnb.api">AddressException</a>,
                     <a href="../../../com/rbnb/api/SerializeException.html" title="class in com.rbnb.api">SerializeException</a>,
                     java.io.EOFException,
                     java.io.IOException,
                     java.lang.InterruptedException</pre>
<div class="block">Adds a child <code>Rmap</code> to this <code>Rmap</code>.
 <p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>childI</code> - the new child <code>Rmap</code>.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code><a href="../../../com/rbnb/api/AddressException.html" title="class in com.rbnb.api">AddressException</a></code> - thrown if there is a problem with an address.</dd>
<dd><code><a href="../../../com/rbnb/api/SerializeException.html" title="class in com.rbnb.api">SerializeException</a></code> - thrown if there is a problem with the serialization.</dd>
<dd><code>java.io.EOFException</code> - thrown if the end of the input stream is reached.</dd>
<dd><code>java.io.IOException</code> - thrown if there is an error during I/O.</dd>
<dd><code>java.lang.IllegalArgumentException</code> - thrown if the input <code>Rmap</code> is already a
                  child of another <code>Rmap</code> or if the input is null.</dd>
<dd><code>java.lang.InterruptedException</code> - thrown if the operation is interrupted.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd></dl>
</li>
</ul>
<a name="addChildAt(com.rbnb.api.Rmap, int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>addChildAt</h4>
<pre>public&nbsp;void&nbsp;addChildAt(<a href="../../../com/rbnb/api/Rmap.html" title="class in com.rbnb.api">Rmap</a>&nbsp;childI,
              int&nbsp;indexI)
                throws <a href="../../../com/rbnb/api/AddressException.html" title="class in com.rbnb.api">AddressException</a>,
                       <a href="../../../com/rbnb/api/SerializeException.html" title="class in com.rbnb.api">SerializeException</a>,
                       java.io.EOFException,
                       java.io.IOException,
                       java.lang.InterruptedException</pre>
<div class="block">Adds a child <code>Rmap</code> to this <code>Rmap</code> at the
 specified index.
 <p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>childI</code> - the new child <code>Rmap</code>.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code><a href="../../../com/rbnb/api/AddressException.html" title="class in com.rbnb.api">AddressException</a></code> - thrown if there is a problem with an address.</dd>
<dd><code><a href="../../../com/rbnb/api/SerializeException.html" title="class in com.rbnb.api">SerializeException</a></code> - thrown if there is a problem with the serialization.</dd>
<dd><code>java.io.EOFException</code> - thrown if the end of the input stream is reached.</dd>
<dd><code>java.io.IOException</code> - thrown if there is an error during I/O.</dd>
<dd><code>java.lang.IllegalArgumentException</code> - thrown if the input <code>Rmap</code> is already a
                  child of another <code>Rmap</code> or if the input is null.</dd>
<dd><code>java.lang.InterruptedException</code> - thrown if the operation is interrupted.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.1</dd></dl>
</li>
</ul>
<a name="addDataWithTimeReference(java.lang.Object, int, int, byte, byte, com.rbnb.api.DataArray)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>addDataWithTimeReference</h4>
<pre>public final&nbsp;void&nbsp;addDataWithTimeReference(java.lang.Object&nbsp;dataI,
                            int&nbsp;ndataI,
                            int&nbsp;ptsizeI,
                            byte&nbsp;dtypeI,
                            byte&nbsp;worderI,
                            <a href="../../../com/rbnb/api/DataArray.html" title="class in com.rbnb.api">DataArray</a>&nbsp;referenceI)
                                    throws <a href="../../../com/rbnb/api/AddressException.html" title="class in com.rbnb.api">AddressException</a>,
                                           <a href="../../../com/rbnb/api/SerializeException.html" title="class in com.rbnb.api">SerializeException</a>,
                                           java.io.EOFException,
                                           java.io.IOException,
                                           java.lang.InterruptedException</pre>
<div class="block">Adds data to this <code>Rmap</code> hierarchy with a
 <code>DataArray</code> supplying the <code>TimeRanges</code>.
 <p>
 The method adds one or more unnamed <code>Rmaps</code> to this
 <code>Rmap</code>.
 <p>
 This method is intended to allow plugins to efficiently copy time values
 from their input to their output without having to go through extracting
 the individual time values.
 <p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>dataI</code> - the data object.</dd><dd><code>ndataI</code> - the number of data points in the input.</dd><dd><code>ptsizeI</code> - the size of a data point in bytes.</dd><dd><code>dtypeI</code> - the type of data.</dd><dd><code>worderI</code> - the word order.</dd><dd><code>referenceI</code> - the <code>DataArray</code> reference.
                         <p>
                         The number of points in the reference must be equal to
                         the number of points in the data object.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code><a href="../../../com/rbnb/api/AddressException.html" title="class in com.rbnb.api">AddressException</a></code> - thrown if there is a problem with an address.</dd>
<dd><code><a href="../../../com/rbnb/api/SerializeException.html" title="class in com.rbnb.api">SerializeException</a></code> - thrown if there is a problem with the serialization.</dd>
<dd><code>java.io.EOFException</code> - thrown if the end of the input stream is reached.</dd>
<dd><code>java.io.IOException</code> - thrown if there is an error during I/O.</dd>
<dd><code>java.lang.IllegalArgumentException</code> - thrown if the input <code>Rmap</code> is already a
                  child of another <code>Rmap</code> or if the input is null.</dd>
<dd><code>java.lang.InterruptedException</code> - thrown if the operation is interrupted.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd></dl>
</li>
</ul>
<a name="addMember(com.rbnb.api.Rmap)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>addMember</h4>
<pre>public&nbsp;void&nbsp;addMember(<a href="../../../com/rbnb/api/Rmap.html" title="class in com.rbnb.api">Rmap</a>&nbsp;memberI)
               throws <a href="../../../com/rbnb/api/SerializeException.html" title="class in com.rbnb.api">SerializeException</a>,
                      java.io.EOFException,
                      java.io.IOException,
                      java.lang.InterruptedException</pre>
<div class="block">Adds a member <code>Rmap</code> to this <code>Rmap</code>.
 <p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>memberI</code> - the new member <code>Rmap</code>.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code><a href="../../../com/rbnb/api/SerializeException.html" title="class in com.rbnb.api">SerializeException</a></code> - thrown if there is a problem with the serialization.</dd>
<dd><code>java.io.EOFException</code> - thrown if the end of the input stream is reached.</dd>
<dd><code>java.io.IOException</code> - thrown if there is an error during I/O.</dd>
<dd><code>java.lang.IllegalArgumentException</code> - thrown if the input <code>Rmap</code> is already a child of
                  another <code>Rmap</code> or if the input is null.</dd>
<dd><code>java.lang.InterruptedException</code> - thrown if the operation is interrupted.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/api/Rmap.html#getMembers()"><code>getMembers()</code></a>, 
<a href="../../../com/rbnb/api/Rmap.html#getParent()"><code>getParent()</code></a>, 
<a href="../../../com/rbnb/api/Rmap.html#removeMember(com.rbnb.api.Rmap)"><code>removeMember(com.rbnb.api.Rmap)</code></a>, 
<a href="../../../com/rbnb/api/Rmap.html#removeMemberAt(int)"><code>removeMemberAt(int)</code></a></dd></dl>
</li>
</ul>
<a name="clone()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>clone</h4>
<pre>public&nbsp;java.lang.Object&nbsp;clone()</pre>
<div class="block">Clones this <code>Rmap</code>.
 <p>
 This method clones the member and child <code>Rmaps</code>, the frame
 and time <code>TimeRanges</code>, and the <code>DataBlock</code>.
 <p></div>
<dl><dt><span class="strong">Returns:</span></dt><dd>the clone.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd></dl>
</li>
</ul>
<a name="collapse()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>collapse</h4>
<pre>public final&nbsp;boolean&nbsp;collapse()
                       throws <a href="../../../com/rbnb/api/AddressException.html" title="class in com.rbnb.api">AddressException</a>,
                              <a href="../../../com/rbnb/api/SerializeException.html" title="class in com.rbnb.api">SerializeException</a>,
                              java.io.InterruptedIOException,
                              java.io.IOException,
                              java.lang.InterruptedException</pre>
<div class="block">Collapses this <code>Rmap</code> hierarchy.
 <p>
 This method collapses and reorganizes the <code>Rmap</code> hierarchy
 rooted at the input <code>Rmap</code> to produce the most efficient
 structure possible, given reasonable time constraints.
 <p>
 The method recursively performs the following operations:
 <p><ol>
 <li>Collapses its member and child hierarchies,</li>
 <li>Eliminates itself if it contains no useful information,</li>
 <li>If there is a single child and no members, and that child contains
     only information not found in this <code>Rmap</code>, collapses out
     the child <code>Rmap</code>,</li>
 <li>Eliminates redundant <code>TimeRanges</code> from its children
     children by moving the <code>TimeRange</code> to this
     <code>Rmap</code> if that won't change the meaning of the
     hierarchy, and</li>
 <li>Eliminates redudant <code>Rmap</code> hierarchies if it is possible
     to move a single copy of their children to the current level and
     create groups using data pools.</li>
 </ol><p>
 Note that this method replaces elements of this <code>Rmap</code>
 hierarchy in place. It does not copy information unless absolutely
 necessary.
 <p>
 Note that the data pool creation logic is not completed. Look into this
 further. It is turned off for now.
 <p></div>
<dl><dt><span class="strong">Returns:</span></dt><dd>keep this <code>Rmap</code>?</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code><a href="../../../com/rbnb/api/AddressException.html" title="class in com.rbnb.api">AddressException</a></code> - thrown if there is a problem with an address.</dd>
<dd><code><a href="../../../com/rbnb/api/SerializeException.html" title="class in com.rbnb.api">SerializeException</a></code> - thrown if there is a problem with serialization.</dd>
<dd><code>java.io.InterruptedIOException</code> - thrown if this operation is interrupted during I/O.</dd>
<dd><code>java.io.IOException</code> - thrown if there is an I/O problem.</dd>
<dd><code>java.lang.InterruptedException</code> - thrown if this operation is interrupted.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd></dl>
</li>
</ul>
<a name="compareNames(com.rbnb.api.Rmap)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>compareNames</h4>
<pre>public final&nbsp;int&nbsp;compareNames(<a href="../../../com/rbnb/api/Rmap.html" title="class in com.rbnb.api">Rmap</a>&nbsp;otherI)</pre>
<div class="block">Compares the name of this <code>Rmap</code> to the name of the input
 <code>Rmap</code>.
 <p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>otherI</code> - the other <code>Rmap</code>.</dd>
<dt><span class="strong">Returns:</span></dt><dd>the results of the comparison:
               <br><ul>
               <li><0 if this <code>Rmap</code> compares less than the
                   input,</li>
               <li> 0 if this <code>Rmap</code> compares equal to the input,
                   and</li>
               <li>>0 if this <code>Rmap</code> compares greater than the
                   input.</li>
               </ul></dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd></dl>
</li>
</ul>
<a name="compareNames(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>compareNames</h4>
<pre>public final&nbsp;int&nbsp;compareNames(java.lang.String&nbsp;nameI)</pre>
<div class="block">Compares the name of this <code>Rmap</code> to the input name.
 <p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>nameI</code> - the name to compare to.</dd>
<dt><span class="strong">Returns:</span></dt><dd>the results of the comparison:
               <p><0 if this <code>Rmap</code> compares less than the input,
               <p> 0 if this <code>Rmap</code> compares equal to the input, and
               <p>>0 if this <code>Rmap</code> compares greater than the input.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd></dl>
</li>
</ul>
<a name="compareNames(java.lang.String, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>compareNames</h4>
<pre>public static final&nbsp;int&nbsp;compareNames(java.lang.String&nbsp;nameI,
               java.lang.String&nbsp;name2I)</pre>
<div class="block">Compares the input names.
 <p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>nameI</code> - the first name.</dd><dd><code>name2I</code> - the second name.</dd>
<dt><span class="strong">Returns:</span></dt><dd>the results of the comparison:
               <p><0 if this <code>Rmap</code> compares less than the input,
               <p> 0 if this <code>Rmap</code> compares equal to the input, and
               <p>>0 if this <code>Rmap</code> compares greater than the input.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd></dl>
</li>
</ul>
<a name="compareTo(java.lang.Object, java.lang.Object)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>compareTo</h4>
<pre>public&nbsp;int&nbsp;compareTo(java.lang.Object&nbsp;sidI,
            java.lang.Object&nbsp;otherI)
              throws <a href="../../../com/rbnb/utility/SortException.html" title="class in com.rbnb.utility">SortException</a></pre>
<div class="block">Compares the sorting value of this <code>Rmap</code> to the input
 sorting value according to the type sort specified by the sort
 identifier.
 <p>
 The sorting value for an <code>Rmap</code> is always itself. The
 comparison is first by name, then by frame <code>TimeRange</code>, and
 finally by <code>TimeRange</code>.
 <p></div>
<dl>
<dt><strong>Specified by:</strong></dt>
<dd><code><a href="../../../com/rbnb/utility/SortCompareInterface.html#compareTo(java.lang.Object, java.lang.Object)">compareTo</a></code>&nbsp;in interface&nbsp;<code><a href="../../../com/rbnb/utility/SortCompareInterface.html" title="interface in com.rbnb.utility">SortCompareInterface</a></code></dd>
<dt><span class="strong">Parameters:</span></dt><dd><code>sidI</code> - the sort type identifier -- must be null.</dd><dd><code>otherI</code> - the other sorting value.</dd>
<dt><span class="strong">Returns:</span></dt><dd>the results of the comparison:
               <p><0 if this <code>Rmap</code> compares less than the input,
               <p> 0 if this <code>Rmap</code> compares equal to the input, and
               <p>>0 if this <code>Rmap</code> compares greater than the input.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code><a href="../../../com/rbnb/utility/SortException.html" title="class in com.rbnb.utility">SortException</a></code> - thrown if the input sort identifier is non-null.</dd>
<dd><code>java.lang.IllegalStateException</code> - thrown if both the this <code>Rmap</code> and the input
                  <code>Rmap</code> are nameless and timeless.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/api/Rmap.html#compareTo(com.rbnb.api.Rmap)"><code>compareTo(com.rbnb.api.Rmap)</code></a></dd></dl>
</li>
</ul>
<a name="compareTo(com.rbnb.api.Rmap)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>compareTo</h4>
<pre>public&nbsp;int&nbsp;compareTo(<a href="../../../com/rbnb/api/Rmap.html" title="class in com.rbnb.api">Rmap</a>&nbsp;rmapI)</pre>
<div class="block">Compares the input <code>Rmap</code> to this one.
 <p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>rmapI</code> - the <code>Rmap</code> to compare.</dd>
<dt><span class="strong">Returns:</span></dt><dd>the results of the comparison:
               <p><0 if this <code>Rmap</code> compares less than the input,
               <p> 0 if this <code>Rmap</code> compares equal to the input, and
               <p>>0 if this <code>Rmap</code> compares greater than the input.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/api/Rmap.html#compareTo(java.lang.Object, java.lang.Object)"><code>compareTo(Object,Object)</code></a></dd></dl>
</li>
</ul>
<a name="createFromName(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>createFromName</h4>
<pre>public static final&nbsp;<a href="../../../com/rbnb/api/Rmap.html" title="class in com.rbnb.api">Rmap</a>&nbsp;createFromName(java.lang.String&nbsp;nameI)
                                 throws <a href="../../../com/rbnb/api/AddressException.html" title="class in com.rbnb.api">AddressException</a>,
                                        <a href="../../../com/rbnb/api/SerializeException.html" title="class in com.rbnb.api">SerializeException</a>,
                                        java.io.EOFException,
                                        java.io.IOException,
                                        java.lang.InterruptedException</pre>
<div class="block">Creates an <code>Rmap</code> hierarchy from the input name.
 <p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>nameI</code> - the name.</dd>
<dt><span class="strong">Returns:</span></dt><dd>the top of the <code>Rmap</code> hierarchy.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code><a href="../../../com/rbnb/api/AddressException.html" title="class in com.rbnb.api">AddressException</a></code> - thrown if there is a problem with an address.</dd>
<dd><code><a href="../../../com/rbnb/api/SerializeException.html" title="class in com.rbnb.api">SerializeException</a></code> - thrown if there is a problem with the serialization.</dd>
<dd><code>java.io.EOFException</code> - thrown if the end of the input stream is reached.</dd>
<dd><code>java.io.IOException</code> - thrown if there is an error during I/O.</dd>
<dd><code>java.lang.IllegalArgumentException</code> - thrown if the input <code>Rmap</code> is already a child of
                  another <code>Rmap</code> or if the input is null.</dd>
<dd><code>java.lang.InterruptedException</code> - thrown if the creation is interrupted.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd></dl>
</li>
</ul>
<a name="extract(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>extract</h4>
<pre>public final&nbsp;<a href="../../../com/rbnb/api/DataArray.html" title="class in com.rbnb.api">DataArray</a>&nbsp;extract(java.lang.String&nbsp;chanNameI)
                        throws <a href="../../../com/rbnb/api/AddressException.html" title="class in com.rbnb.api">AddressException</a>,
                               <a href="../../../com/rbnb/api/SerializeException.html" title="class in com.rbnb.api">SerializeException</a>,
                               java.io.EOFException,
                               java.io.IOException,
                               java.lang.InterruptedException</pre>
<div class="block">Extracts the time and data for a particular channel.
 <p>
 This method requires that all of the data for the channel be of a
 single data type. The returned result is an array of the data type,
 returned as a single object.
 <p>
 If there is no time or data information available for the specified
 channel, an empty <code>DataArray</code> object is returned, with null
 time and data fields.
 <p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>chanNameI</code> - the fully qualified name of the channel.</dd>
<dt><span class="strong">Returns:</span></dt><dd>a <code>DataArray</code> object containing the extracted times
               and data.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code><a href="../../../com/rbnb/api/AddressException.html" title="class in com.rbnb.api">AddressException</a></code> - thrown if there is a problem with an address.</dd>
<dd><code><a href="../../../com/rbnb/api/SerializeException.html" title="class in com.rbnb.api">SerializeException</a></code> - thrown if there is a problem with the serialization.</dd>
<dd><code>java.io.EOFException</code> - thrown if the end of the input stream is reached.</dd>
<dd><code>java.io.IOException</code> - thrown if there is an error during I/O.</dd>
<dd><code>java.lang.IllegalArgumentException</code> - thrown if the input <code>Rmap</code> is already a child of
                  another <code>Rmap</code> or if the input is null.</dd>
<dd><code>java.lang.InterruptedException</code> - thrown if the operation is interrupted.</dd>
<dd><code>java.lang.IllegalStateException</code> - thrown if the <code>Rmap</code> hierarchy contains
                  information that cannot be processed by this code.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd></dl>
</li>
</ul>
<a name="extract(java.lang.String, boolean, boolean, boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>extract</h4>
<pre>public final&nbsp;<a href="../../../com/rbnb/api/DataArray.html" title="class in com.rbnb.api">DataArray</a>&nbsp;extract(java.lang.String&nbsp;chanNameI,
                boolean&nbsp;frameFlagI,
                boolean&nbsp;timeFlagI,
                boolean&nbsp;dataFlagI)
                        throws <a href="../../../com/rbnb/api/AddressException.html" title="class in com.rbnb.api">AddressException</a>,
                               <a href="../../../com/rbnb/api/SerializeException.html" title="class in com.rbnb.api">SerializeException</a>,
                               java.io.EOFException,
                               java.io.IOException,
                               java.lang.InterruptedException</pre>
<div class="block">Extracts the frame indexes, time, and/or data for a particular channel.
 <p>
 This method requires that all of the data for the channel be of a
 single data type. The returned result is an array of the data type,
 returned as a single object.
 <p>
 If there is no frame, time, or data information available for the
 specified channel, an empty <code>DataArray</code> object is returned,
 with null frame, time, and data fields.
 <p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>chanNameI</code> - the fully qualified name of the channel.</dd><dd><code>frameFlagI</code> - return the extracted frame indexes?</dd><dd><code>timeFlagI</code> - return the extacted times?</dd><dd><code>dataFlagI</code> - return the extraced data?</dd>
<dt><span class="strong">Returns:</span></dt><dd>a <code>DataArray</code> object containing the extracted times
               and data.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code><a href="../../../com/rbnb/api/AddressException.html" title="class in com.rbnb.api">AddressException</a></code> - thrown if there is a problem with an address.</dd>
<dd><code><a href="../../../com/rbnb/api/SerializeException.html" title="class in com.rbnb.api">SerializeException</a></code> - thrown if there is a problem with the serialization.</dd>
<dd><code>java.io.EOFException</code> - thrown if the end of the input stream is reached.</dd>
<dd><code>java.io.IOException</code> - thrown if there is an error during I/O.</dd>
<dd><code>java.lang.IllegalArgumentException</code> - thrown if the input <code>Rmap</code> is already a child of
                  another <code>Rmap</code> or if the input is null.</dd>
<dd><code>java.lang.InterruptedException</code> - thrown if the operation is interrupted.</dd>
<dd><code>java.lang.IllegalStateException</code> - thrown if the <code>Rmap</code> hierarchy contains
                  information that cannot be processed by this code.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd></dl>
</li>
</ul>
<a name="extractFolders()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>extractFolders</h4>
<pre>public final&nbsp;java.lang.String[]&nbsp;extractFolders()
                                        throws <a href="../../../com/rbnb/api/AddressException.html" title="class in com.rbnb.api">AddressException</a>,
                                               <a href="../../../com/rbnb/api/SerializeException.html" title="class in com.rbnb.api">SerializeException</a>,
                                               java.io.EOFException,
                                               java.io.IOException,
                                               java.lang.InterruptedException</pre>
<div class="block">Extracts the names of folders from this <code>Rmap</code> hierarchy.
 <p>
 Folders are defined as named <code>Rmaps</code> with no children.
 <p></div>
<dl><dt><span class="strong">Returns:</span></dt><dd>array of the names found.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code><a href="../../../com/rbnb/api/AddressException.html" title="class in com.rbnb.api">AddressException</a></code> - thrown if there is a problem with an address.</dd>
<dd><code><a href="../../../com/rbnb/api/SerializeException.html" title="class in com.rbnb.api">SerializeException</a></code> - thrown if there is a problem with the serialization.</dd>
<dd><code>java.io.EOFException</code> - thrown if the end of the input stream is reached.</dd>
<dd><code>java.io.IOException</code> - thrown if there is an error during I/O.</dd>
<dd><code>java.lang.InterruptedException</code> - thrown if the operation is interrupted.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.1</dd></dl>
</li>
</ul>
<a name="extractFoldersAndChannels()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>extractFoldersAndChannels</h4>
<pre>public final&nbsp;java.lang.String[]&nbsp;extractFoldersAndChannels()
                                                   throws <a href="../../../com/rbnb/api/AddressException.html" title="class in com.rbnb.api">AddressException</a>,
                                                          <a href="../../../com/rbnb/api/SerializeException.html" title="class in com.rbnb.api">SerializeException</a>,
                                                          java.io.EOFException,
                                                          java.io.IOException,
                                                          java.lang.InterruptedException</pre>
<div class="block">Extracts the names of channels and folders from this <code>Rmap</code>
 hierarchy.
 <p>
 Channels are defined as names with data (equivalent to the results of
 <code>extractNames</code>). Folders are defined as named
 <code>Rmaps</code> with no children.
 <p></div>
<dl><dt><span class="strong">Returns:</span></dt><dd>array of the names found.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code><a href="../../../com/rbnb/api/AddressException.html" title="class in com.rbnb.api">AddressException</a></code> - thrown if there is a problem with an address.</dd>
<dd><code><a href="../../../com/rbnb/api/SerializeException.html" title="class in com.rbnb.api">SerializeException</a></code> - thrown if there is a problem with the serialization.</dd>
<dd><code>java.io.EOFException</code> - thrown if the end of the input stream is reached.</dd>
<dd><code>java.io.IOException</code> - thrown if there is an error during I/O.</dd>
<dd><code>java.lang.InterruptedException</code> - thrown if the operation is interrupted.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.1</dd></dl>
</li>
</ul>
<a name="extractNames()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>extractNames</h4>
<pre>public final&nbsp;java.lang.String[]&nbsp;extractNames()
                                      throws <a href="../../../com/rbnb/api/AddressException.html" title="class in com.rbnb.api">AddressException</a>,
                                             <a href="../../../com/rbnb/api/SerializeException.html" title="class in com.rbnb.api">SerializeException</a>,
                                             java.io.EOFException,
                                             java.io.IOException,
                                             java.lang.InterruptedException</pre>
<div class="block">Extracts the names from this <code>Rmap</code> hierarchy.
 <p></div>
<dl><dt><span class="strong">Returns:</span></dt><dd>array of the names found.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code><a href="../../../com/rbnb/api/AddressException.html" title="class in com.rbnb.api">AddressException</a></code> - thrown if there is a problem with an address.</dd>
<dd><code><a href="../../../com/rbnb/api/SerializeException.html" title="class in com.rbnb.api">SerializeException</a></code> - thrown if there is a problem with the serialization.</dd>
<dd><code>java.io.EOFException</code> - thrown if the end of the input stream is reached.</dd>
<dd><code>java.io.IOException</code> - thrown if there is an error during I/O.</dd>
<dd><code>java.lang.InterruptedException</code> - thrown if the operation is interrupted.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd></dl>
</li>
</ul>
<a name="extractRmap(com.rbnb.api.Rmap, boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>extractRmap</h4>
<pre>public&nbsp;<a href="../../../com/rbnb/api/Rmap.html" title="class in com.rbnb.api">Rmap</a>&nbsp;extractRmap(<a href="../../../com/rbnb/api/Rmap.html" title="class in com.rbnb.api">Rmap</a>&nbsp;requestI,
               boolean&nbsp;dataFlagI)
                 throws <a href="../../../com/rbnb/api/AddressException.html" title="class in com.rbnb.api">AddressException</a>,
                        <a href="../../../com/rbnb/api/SerializeException.html" title="class in com.rbnb.api">SerializeException</a>,
                        java.io.EOFException,
                        java.io.IOException,
                        java.lang.InterruptedException</pre>
<div class="block">Extracts <code>Rmaps</code> from this <code>Rmap</code> that match the
 input request <code>Rmap</code>.
 <p>
 This is a complicated process that does what appears to be a relatively
 simple task, namely finding the subset of the Rmap hiearchy headed by
 this Rmap that matches the input request.  It is complicated by the fact
 that Rmaps are a recursive structure that allows for inheritance of
 information from the top down to the bottom.  In addition, the Rmap
 design at the time that this code was written was such that no
 assumptions could be made about the structure of any particular,
 non-specialized Rmap.
 <p>
 The processing involves a number of different objects:
 <p><ol>
    <li>Rmap and its subclasses (such as DataRequest, RBO, RingBuffer,
              etc.),</li>
    <li>TimeRange,</li>
    <li>RmapExctractor, and</li>
    <li>RmapChain and its subclass ExtractedChain.</li>
 </ol><p>
 The process starts by creating an RmapExtractor, which acts as the
 central dispatch and depository.  An ExtractedChain is created to start
 the process of matching the source Rmap hierarchy against the request.
 <p>
 From there, the process proceeds to compare information in the source
 Rmap hierarchy against the request, moving down the two hierarchies,
 until a point in the source Rmap hierarchy is reached such that its
 name, time, and data match a portion of the request hierarchy.  This is
 a recursive search sequence that goes through the following:
 <p><ol>
    <li><code>ExtractedChain.matchList</code> - matches the list of Rmaps
              at the next level down in the source hierarchy against the
              current level of the request hierarchy,</li>
    <li>One of:
        <p><ol type=a>
           <li><code>ExtractedChain.moveDown</code> - moves down past a
                      nameless/timeless entry in the request hierarchy.  If
                      there are multiple children in the request hierarchy, a
                      separate ExtractedChain is started for each one.  This
                      loops back to the first step,</li>
           <li><code>ExtractedChain.matchListCurrent</code> - matches the
                     source list against the current level in the request
                     hierarchy with no inherited information from higher up the
                     request hierarchy,</li>
                 <li><code>ExtractedChain.matchListInherited</code> - matches
                     the source list against just the inherited information
                     from higher up in the request hierarchy, or</li>
                 <li><code>ExtractedChain.matchListCurrentAndInherited</code> -
                     matches the source list against a request consisting of
                     the combination of the current request and the inherited
                     information from higher up,</li>
        </ol></li><p>
    <li><code>ExtractedChain.matchListAgainst</code> - performs the
              actual matching of the source list against the request
              (inherited, current, current+inherited),</li>
          <li><code>RmapVector.findMatches</code> - performs a modified
              binary search for the request name and time within the
              source list,</li>
    <li>If no matches are found at the current level, but there was
              enough information available from higher levels to qualify as a
              match, then extract that information using
              <code>RmapExtractor.extractInformation</code>,</li>
    <li>If no matches are found at the current level and there isn't
              enough information available from higher levels to qualify as a
              match, then note that we were unable to find a match,</li>
    <li>If a list of matches was found, then loop through and process
              each match individually using
              <code>ExtractedChain.matchedList</code>,</li>
    <li><code>ExtractedChain.matchRmap</code> builds one or more new
              ExtractedChains containing the matched source Rmap, the request
              that matched it (inherited, current, or current+inherited),
              inherited information consisting of the inherited information
              from above plus any unmatched name and time range from the
              matching request (<code>ExtractedChain.updateInherited</code>),
              and one child from the next level of request hierarchy as the
              ExtractedChain's request,</li>
    <li>If we've reached the bottom of the request hierarchy and there is
              enough information from the source hierarchy (name, time, data)
              to declare a match, then the match is extracted
              (<code>RmapExtractor.extractInformation</code>),</li>
    <li>If there is more work to do to match the request, then
              <code>ExtractedChain.moveDownFrom</code> starts moving down a
              level in the source hierarchy,</li>
    <li><code>Rmap.moveDownFrom</code> (and the moveDownFrom methods from
              Rmap's specialized subclasses) moves down one level in the source
              hierarchy and starts the process over again.</li>
 </ol><p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>requestI</code> - the request <code>Rmap</code>.</dd><dd><code>dataFlagI</code> - extract the data payloads?</dd>
<dt><span class="strong">Returns:</span></dt><dd>the matched <code>Rmap</code> hierarchy.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code><a href="../../../com/rbnb/api/AddressException.html" title="class in com.rbnb.api">AddressException</a></code> - thrown if there is a problem with an address.</dd>
<dd><code><a href="../../../com/rbnb/api/SerializeException.html" title="class in com.rbnb.api">SerializeException</a></code> - thrown if there is a problem with the serialization.</dd>
<dd><code>java.io.EOFException</code> - thrown if the end of the input stream is reached.</dd>
<dd><code>java.io.IOException</code> - thrown if there is an error during I/O.</dd>
<dd><code>java.lang.InterruptedException</code> - thrown if the operation is interrupted.</dd>
<dd><code>java.lang.IllegalStateException</code> - thrown if the information matching the request cannot be
                  extracted for any reason.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd></dl>
</li>
</ul>
<a name="findChild(com.rbnb.api.Rmap)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>findChild</h4>
<pre>public final&nbsp;<a href="../../../com/rbnb/api/Rmap.html" title="class in com.rbnb.api">Rmap</a>&nbsp;findChild(<a href="../../../com/rbnb/api/Rmap.html" title="class in com.rbnb.api">Rmap</a>&nbsp;childI)
                     throws <a href="../../../com/rbnb/api/AddressException.html" title="class in com.rbnb.api">AddressException</a>,
                            <a href="../../../com/rbnb/api/SerializeException.html" title="class in com.rbnb.api">SerializeException</a>,
                            java.io.IOException,
                            java.lang.InterruptedException</pre>
<div class="block">Finds a matching child <code>Rmap</code>.
 <p>
 If there are multiple matches, the one returned is not defined.
 <p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>childI</code> - the child <code>Rmap</code> to match.</dd>
<dt><span class="strong">Returns:</span></dt><dd>the matching child <code>Rmap</code>.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code><a href="../../../com/rbnb/api/AddressException.html" title="class in com.rbnb.api">AddressException</a></code> - thrown if there is a problem with an address.</dd>
<dd><code><a href="../../../com/rbnb/api/SerializeException.html" title="class in com.rbnb.api">SerializeException</a></code> - thrown if there is a problem with the serialization.</dd>
<dd><code>java.io.IOException</code> - thrown if there is an error during I/O.</dd>
<dd><code>java.lang.InterruptedException</code> - thrown if the operation is interrupted.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd></dl>
</li>
</ul>
<a name="findDescendant(java.lang.String, boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>findDescendant</h4>
<pre>public final&nbsp;<a href="../../../com/rbnb/api/Rmap.html" title="class in com.rbnb.api">Rmap</a>&nbsp;findDescendant(java.lang.String&nbsp;nameI,
                  boolean&nbsp;addI)
                          throws <a href="../../../com/rbnb/api/AddressException.html" title="class in com.rbnb.api">AddressException</a>,
                                 <a href="../../../com/rbnb/api/SerializeException.html" title="class in com.rbnb.api">SerializeException</a>,
                                 java.io.IOException,
                                 java.lang.InterruptedException</pre>
<div class="block">Finds a descendant <code>Rmap</code> by name.
 <p>
 Due to the complications introduced by group membership, this method can
 only be used properly when there are no groups. If a group is discovered
 during the search, an exception is thrown.
 <p>
 This method can optionally create the hierarchy leading to the desired
 descendant.
 <p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>nameI</code> - the fully qualified descendant's name.</dd><dd><code>addI</code> - add the descendant if it doesn't exist?</dd>
<dt><span class="strong">Returns:</span></dt><dd>the descendant.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code><a href="../../../com/rbnb/api/AddressException.html" title="class in com.rbnb.api">AddressException</a></code> - thrown if there is a problem with an address.</dd>
<dd><code><a href="../../../com/rbnb/api/SerializeException.html" title="class in com.rbnb.api">SerializeException</a></code> - thrown if there is a problem with the serialization.</dd>
<dd><code>java.io.IOException</code> - thrown if there is an error during I/O.</dd>
<dd><code>java.lang.InterruptedException</code> - thrown if the operation is interrupted.</dd>
<dd><code>java.lang.IllegalStateException</code> - thrown if a group is discovered.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd></dl>
</li>
</ul>
<a name="findMember(com.rbnb.api.Rmap)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>findMember</h4>
<pre>public final&nbsp;<a href="../../../com/rbnb/api/Rmap.html" title="class in com.rbnb.api">Rmap</a>&nbsp;findMember(<a href="../../../com/rbnb/api/Rmap.html" title="class in com.rbnb.api">Rmap</a>&nbsp;memberI)
                      throws <a href="../../../com/rbnb/api/AddressException.html" title="class in com.rbnb.api">AddressException</a>,
                             <a href="../../../com/rbnb/api/SerializeException.html" title="class in com.rbnb.api">SerializeException</a>,
                             java.io.IOException,
                             java.lang.InterruptedException</pre>
<div class="block">Finds a matching member <code>Rmap</code>.
 <p>
 If there are multiple matches, the one returned is not defined.
 <p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>memberI</code> - the member <code>Rmap</code> to match.</dd>
<dt><span class="strong">Returns:</span></dt><dd>the matching member <code>Rmap</code>.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code><a href="../../../com/rbnb/api/AddressException.html" title="class in com.rbnb.api">AddressException</a></code> - thrown if there is a problem with an address.</dd>
<dd><code><a href="../../../com/rbnb/api/SerializeException.html" title="class in com.rbnb.api">SerializeException</a></code> - thrown if there is a problem with the serialization.</dd>
<dd><code>java.io.IOException</code> - thrown if there is an error during I/O.</dd>
<dd><code>java.lang.InterruptedException</code> - thrown if the operation is interrupted.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd></dl>
</li>
</ul>
<a name="getChildAt(int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getChildAt</h4>
<pre>public&nbsp;<a href="../../../com/rbnb/api/Rmap.html" title="class in com.rbnb.api">Rmap</a>&nbsp;getChildAt(int&nbsp;indexI)
                throws <a href="../../../com/rbnb/api/AddressException.html" title="class in com.rbnb.api">AddressException</a>,
                       <a href="../../../com/rbnb/api/SerializeException.html" title="class in com.rbnb.api">SerializeException</a>,
                       java.io.EOFException,
                       java.io.InterruptedIOException,
                       java.io.IOException,
                       java.lang.InterruptedException</pre>
<div class="block">Gets the child at the specified index.
 <p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>indexI</code> - the index of the child to retrieve.</dd>
<dt><span class="strong">Returns:</span></dt><dd>the child <code>Rmap</code>.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code><a href="../../../com/rbnb/api/AddressException.html" title="class in com.rbnb.api">AddressException</a></code> - thrown if there is a problem with an address.</dd>
<dd><code><a href="../../../com/rbnb/api/SerializeException.html" title="class in com.rbnb.api">SerializeException</a></code> - thrown if there is a problem with the serialization.</dd>
<dd><code>java.io.EOFException</code> - thrown if the end of the input stream is reached.</dd>
<dd><code>java.io.InterruptedIOException</code> - thrown if this operation is interrupted during I/O.</dd>
<dd><code>java.io.IOException</code> - thrown if there is an error during I/O.</dd>
<dd><code>java.lang.ArrayIndexOutOfBoundsException</code> - thrown if there are no children or the index is not in the
                  range 0 to # of children - 1.</dd>
<dd><code>java.lang.InterruptedException</code> - thrown if the operation is interrupted.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/api/Rmap.html#addChild(com.rbnb.api.Rmap)"><code>addChild(com.rbnb.api.Rmap)</code></a>, 
<a href="../../../com/rbnb/api/Rmap.html#getNchildren()"><code>getNchildren()</code></a></dd></dl>
</li>
</ul>
<a name="getChildren()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getChildren</h4>
<pre>public final&nbsp;com.rbnb.api.RmapVector&nbsp;getChildren()
                                          throws <a href="../../../com/rbnb/api/SerializeException.html" title="class in com.rbnb.api">SerializeException</a>,
                                                 java.io.EOFException,
                                                 java.io.IOException,
                                                 java.lang.InterruptedException</pre>
<div class="block">Gets the list of children of this <code>Rmap</code>.
 <p></div>
<dl><dt><span class="strong">Returns:</span></dt><dd>the children.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code><a href="../../../com/rbnb/api/SerializeException.html" title="class in com.rbnb.api">SerializeException</a></code> - thrown if there is a problem with the serialization.</dd>
<dd><code>java.io.EOFException</code> - thrown if the end of the input stream is reached.</dd>
<dd><code>java.io.IOException</code> - thrown if there is an error during I/O.</dd>
<dd><code>java.lang.InterruptedException</code> - thrown if the operation is interrupted.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/api/Rmap.html#addChild(com.rbnb.api.Rmap)"><code>addChild(com.rbnb.api.Rmap)</code></a></dd></dl>
</li>
</ul>
<a name="getDblock()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getDblock</h4>
<pre>public final&nbsp;<a href="../../../com/rbnb/api/DataBlock.html" title="class in com.rbnb.api">DataBlock</a>&nbsp;getDblock()</pre>
<div class="block">Gets the <code>DataBlock</code> of this <code>Rmap</code>.
 <p></div>
<dl><dt><span class="strong">Returns:</span></dt><dd>the <code>DataBlock</code>.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/api/Rmap.html#setDblock(com.rbnb.api.DataBlock)"><code>setDblock(DataBlock)</code></a></dd></dl>
</li>
</ul>
<a name="getFrange()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getFrange</h4>
<pre>public final&nbsp;<a href="../../../com/rbnb/api/TimeRange.html" title="class in com.rbnb.api">TimeRange</a>&nbsp;getFrange()</pre>
<div class="block">Gets the frame index <code>TimeRange</code> of this <code>Rmap</code>.
 <p></div>
<dl><dt><span class="strong">Returns:</span></dt><dd>the frame index <code>TimeRange</code>.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/api/Rmap.html#setFrange(com.rbnb.api.TimeRange)"><code>setFrange(TimeRange)</code></a></dd></dl>
</li>
</ul>
<a name="getFullName()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getFullName</h4>
<pre>public final&nbsp;java.lang.String&nbsp;getFullName()
                                   throws <a href="../../../com/rbnb/api/AddressException.html" title="class in com.rbnb.api">AddressException</a>,
                                          <a href="../../../com/rbnb/api/SerializeException.html" title="class in com.rbnb.api">SerializeException</a>,
                                          java.io.EOFException,
                                          java.io.IOException,
                                          java.lang.InterruptedException</pre>
<div class="block">Gets the fully qualified name of this <code>Rmap</code>.
 <p>
 If the <code>Rmap</code> is a descendent of an <code>Rmap</code> with
 group members, the fully qualified name is actually ambiguous. The code
 fills in a special _<member> name into the fully qualified name at the
 appropriate point.
 <p></div>
<dl><dt><span class="strong">Returns:</span></dt><dd>the fully qualified name.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code><a href="../../../com/rbnb/api/AddressException.html" title="class in com.rbnb.api">AddressException</a></code> - thrown if there is a problem with an address.</dd>
<dd><code><a href="../../../com/rbnb/api/SerializeException.html" title="class in com.rbnb.api">SerializeException</a></code> - thrown if there is a problem with the serialization.</dd>
<dd><code>java.io.EOFException</code> - thrown if the end of the input stream is reached.</dd>
<dd><code>java.io.IOException</code> - thrown if there is an error during I/O.</dd>
<dd><code>java.lang.InterruptedException</code> - thrown if the operation is interrupted.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd></dl>
</li>
</ul>
<a name="getMemberAt(int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getMemberAt</h4>
<pre>public&nbsp;<a href="../../../com/rbnb/api/Rmap.html" title="class in com.rbnb.api">Rmap</a>&nbsp;getMemberAt(int&nbsp;indexI)
                 throws <a href="../../../com/rbnb/api/AddressException.html" title="class in com.rbnb.api">AddressException</a>,
                        <a href="../../../com/rbnb/api/SerializeException.html" title="class in com.rbnb.api">SerializeException</a>,
                        java.io.EOFException,
                        java.io.IOException,
                        java.lang.InterruptedException</pre>
<div class="block">Gets the member at the specified index.
 <p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>indexI</code> - the index of the member to retrieve.</dd>
<dt><span class="strong">Returns:</span></dt><dd>the member <code>Rmap</code>.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code><a href="../../../com/rbnb/api/AddressException.html" title="class in com.rbnb.api">AddressException</a></code> - thrown if there is a problem with an address.</dd>
<dd><code><a href="../../../com/rbnb/api/SerializeException.html" title="class in com.rbnb.api">SerializeException</a></code> - thrown if there is a problem with the serialization.</dd>
<dd><code>java.io.EOFException</code> - thrown if the end of the input stream is reached.</dd>
<dd><code>java.io.IOException</code> - thrown if there is an error during I/O.</dd>
<dd><code>java.lang.ArrayIndexOutOfBoundsException</code> - thrown if there are no members or the index is not in the
                  range 0 to # of members - 1.</dd>
<dd><code>java.lang.InterruptedException</code> - thrown if the operation is interrupted.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/api/Rmap.html#addMember(com.rbnb.api.Rmap)"><code>addMember(com.rbnb.api.Rmap)</code></a>, 
<a href="../../../com/rbnb/api/Rmap.html#getNmembers()"><code>getNmembers()</code></a></dd></dl>
</li>
</ul>
<a name="getMembers()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getMembers</h4>
<pre>public final&nbsp;com.rbnb.api.RmapVector&nbsp;getMembers()
                                         throws <a href="../../../com/rbnb/api/SerializeException.html" title="class in com.rbnb.api">SerializeException</a>,
                                                java.io.EOFException,
                                                java.io.IOException,
                                                java.lang.InterruptedException</pre>
<div class="block">Gets the group members of this <code>Rmap</code>.
 <p></div>
<dl><dt><span class="strong">Returns:</span></dt><dd>the group members.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code><a href="../../../com/rbnb/api/SerializeException.html" title="class in com.rbnb.api">SerializeException</a></code> - thrown if there is a problem with the serialization.</dd>
<dd><code>java.io.EOFException</code> - thrown if the end of the input stream is reached.</dd>
<dd><code>java.io.IOException</code> - thrown if there is an error during I/O.</dd>
<dd><code>java.lang.InterruptedException</code> - thrown if the operation is interrupted.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/api/Rmap.html#addMember(com.rbnb.api.Rmap)"><code>addMember(com.rbnb.api.Rmap)</code></a></dd></dl>
</li>
</ul>
<a name="getName()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getName</h4>
<pre>public final&nbsp;java.lang.String&nbsp;getName()</pre>
<div class="block">Gets the name of this <code>Rmap</code>.
 <p></div>
<dl><dt><span class="strong">Returns:</span></dt><dd>the name.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/api/Rmap.html#setName(java.lang.String)"><code>setName(String)</code></a></dd></dl>
</li>
</ul>
<a name="getNchildren()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getNchildren</h4>
<pre>public final&nbsp;int&nbsp;getNchildren()
                       throws <a href="../../../com/rbnb/api/AddressException.html" title="class in com.rbnb.api">AddressException</a>,
                              <a href="../../../com/rbnb/api/SerializeException.html" title="class in com.rbnb.api">SerializeException</a>,
                              java.io.EOFException,
                              java.io.IOException,
                              java.lang.InterruptedException</pre>
<div class="block">Gets the number of children.
 <p></div>
<dl><dt><span class="strong">Returns:</span></dt><dd>the number of children.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code><a href="../../../com/rbnb/api/AddressException.html" title="class in com.rbnb.api">AddressException</a></code> - thrown if there is a problem with an address.</dd>
<dd><code><a href="../../../com/rbnb/api/SerializeException.html" title="class in com.rbnb.api">SerializeException</a></code> - thrown if there is a problem with the serialization.</dd>
<dd><code>java.io.EOFException</code> - thrown if the end of the input stream is reached.</dd>
<dd><code>java.io.IOException</code> - thrown if there is an error during I/O.</dd>
<dd><code>java.lang.InterruptedException</code> - thrown if the operation is interrupted.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/api/Rmap.html#addChild(com.rbnb.api.Rmap)"><code>addChild(com.rbnb.api.Rmap)</code></a>, 
<a href="../../../com/rbnb/api/Rmap.html#getChildAt(int)"><code>getChildAt(int)</code></a>, 
<a href="../../../com/rbnb/api/Rmap.html#removeChild(com.rbnb.api.Rmap)"><code>removeChild(com.rbnb.api.Rmap)</code></a></dd></dl>
</li>
</ul>
<a name="getNmembers()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getNmembers</h4>
<pre>public final&nbsp;int&nbsp;getNmembers()
                      throws <a href="../../../com/rbnb/api/AddressException.html" title="class in com.rbnb.api">AddressException</a>,
                             <a href="../../../com/rbnb/api/SerializeException.html" title="class in com.rbnb.api">SerializeException</a>,
                             java.io.EOFException,
                             java.io.IOException,
                             java.lang.InterruptedException</pre>
<div class="block">Gets the number of members.
 <p></div>
<dl><dt><span class="strong">Returns:</span></dt><dd>the number of members.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code><a href="../../../com/rbnb/api/AddressException.html" title="class in com.rbnb.api">AddressException</a></code> - thrown if there is a problem with an address.</dd>
<dd><code><a href="../../../com/rbnb/api/SerializeException.html" title="class in com.rbnb.api">SerializeException</a></code> - thrown if there is a problem with the serialization.</dd>
<dd><code>java.io.EOFException</code> - thrown if the end of the input stream is reached.</dd>
<dd><code>java.io.IOException</code> - thrown if there is an error during I/O.</dd>
<dd><code>java.lang.InterruptedException</code> - thrown if the operation is interrupted.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/api/Rmap.html#addMember(com.rbnb.api.Rmap)"><code>addMember(com.rbnb.api.Rmap)</code></a>, 
<a href="../../../com/rbnb/api/Rmap.html#getMemberAt(int)"><code>getMemberAt(int)</code></a>, 
<a href="../../../com/rbnb/api/Rmap.html#removeMember(com.rbnb.api.Rmap)"><code>removeMember(com.rbnb.api.Rmap)</code></a></dd></dl>
</li>
</ul>
<a name="getParent()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getParent</h4>
<pre>public final&nbsp;<a href="../../../com/rbnb/api/Rmap.html" title="class in com.rbnb.api">Rmap</a>&nbsp;getParent()</pre>
<div class="block">Gets the parent <code>Rmap</code> of this <code>Rmap</code>.
 <p></div>
<dl><dt><span class="strong">Returns:</span></dt><dd>the parent <code>Rmap</code>.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd></dl>
</li>
</ul>
<a name="getTrange()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getTrange</h4>
<pre>public final&nbsp;<a href="../../../com/rbnb/api/TimeRange.html" title="class in com.rbnb.api">TimeRange</a>&nbsp;getTrange()</pre>
<div class="block">Gets the <code>TimeRange</code> of this <code>Rmap</code>.
 <p></div>
<dl><dt><span class="strong">Returns:</span></dt><dd>the <code>TimeRange</code>.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/api/Rmap.html#setTrange(com.rbnb.api.TimeRange)"><code>setTrange(TimeRange)</code></a></dd></dl>
</li>
</ul>
<a name="isImplemented(byte)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isImplemented</h4>
<pre>public&nbsp;boolean&nbsp;isImplemented(byte&nbsp;typeI)
                      throws <a href="../../../com/rbnb/api/SerializeException.html" title="class in com.rbnb.api">SerializeException</a>,
                             java.io.IOException,
                             java.lang.InterruptedException</pre>
<div class="block">Is the specified type of operation implemented?
 <p>
 <code>Rmaps</code> implement everything in <code>Rmap</code>.
 <p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>typeI</code> - the type of operation.</dd>
<dt><span class="strong">Returns:</span></dt><dd>is the operation implemented?</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code><a href="../../../com/rbnb/api/SerializeException.html" title="class in com.rbnb.api">SerializeException</a></code> - thrown if there is a problem with the serialization. For
                  example, a missing bracket.</dd>
<dd><code>java.io.IOException</code> - thrown if there is an error reading the input stream.</dd>
<dd><code>java.lang.InterruptedException</code> - thrown if the read is interrupted.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd></dl>
</li>
</ul>
<a name="markLeaf()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>markLeaf</h4>
<pre>public final&nbsp;void&nbsp;markLeaf()
                    throws <a href="../../../com/rbnb/api/AddressException.html" title="class in com.rbnb.api">AddressException</a>,
                           <a href="../../../com/rbnb/api/SerializeException.html" title="class in com.rbnb.api">SerializeException</a>,
                           java.io.EOFException,
                           java.io.InterruptedIOException,
                           java.io.IOException,
                           java.lang.InterruptedException</pre>
<div class="block">Marks leaf nodes of an <code>Rmap</code> hierarchy by putting in
 single byte <code>DataBlocks</code>.
 <p>
 Leaf nodes with <code>DataBlocks</code> are not modified.
 <p></div>
<dl><dt><span class="strong">Throws:</span></dt>
<dd><code><a href="../../../com/rbnb/api/AddressException.html" title="class in com.rbnb.api">AddressException</a></code> - thrown if there is a problem with an address.</dd>
<dd><code><a href="../../../com/rbnb/api/SerializeException.html" title="class in com.rbnb.api">SerializeException</a></code> - thrown if there is a problem with the serialization.</dd>
<dd><code>java.io.EOFException</code> - thrown if the end of the input stream is reached.</dd>
<dd><code>java.io.InterruptedIOException</code> - thrown if this operation is interrupted during I/O.</dd>
<dd><code>java.io.IOException</code> - thrown if there is an error during I/O.</dd>
<dd><code>java.lang.ArrayIndexOutOfBoundsException</code> - thrown if there are no children or the index is not in the
                  range 0 to # of children - 1.</dd>
<dd><code>java.lang.InterruptedException</code> - thrown if the operation is interrupted.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd></dl>
</li>
</ul>
<a name="mergeWith(com.rbnb.api.Rmap)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>mergeWith</h4>
<pre>public final&nbsp;<a href="../../../com/rbnb/api/Rmap.html" title="class in com.rbnb.api">Rmap</a>&nbsp;mergeWith(<a href="../../../com/rbnb/api/Rmap.html" title="class in com.rbnb.api">Rmap</a>&nbsp;rmapI)
                     throws <a href="../../../com/rbnb/api/AddressException.html" title="class in com.rbnb.api">AddressException</a>,
                            <a href="../../../com/rbnb/api/SerializeException.html" title="class in com.rbnb.api">SerializeException</a>,
                            java.io.EOFException,
                            java.io.IOException,
                            java.lang.InterruptedException</pre>
<div class="block">Merges the input <code>Rmap</code> hierarchy with this one.
 <p>
 The merge is done by working through first the group members of each of
 the two <code>Rmaps</code> and then the children. Matching members and
 children are merged using a recursive call. New members and children in
 the input <code>Rmap</code> are added to this <code>Rmap</code>.
 <p>
 If the input <code>Rmap</code> doesn't match this one, then the method
 tries three things:
 <p><ol>
 <li>if this <code>Rmap</code> is nameless and timeless and the input
     <code>Rmap</code> is not, but is a root <code>Rmap</code>, the
     method compares the input <code>Rmap</code> to the children of this
     <code>Rmap</code> and merges with any match or inserts the input
           <code>Rmap</code> hierarchy as a new child, or</li>
 <li>if the two <code>Rmaps</code> are the roots of their hierarchies and
           this <code>Rmap</code> is not nameless and timeless, the method
     creates a new nameless and timeless root <code>Rmap</code> and adds 
     both of the original <code>Rmaps</code> as children,</li>
 <li>throws an exception.</li>
 <ol><p>
 The status input <code>Rmap</code> after this method is called depends
 on what exactly is done, but in general, it shouldn't be used
 independently.
 <p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>rmapI</code> - the <code>Rmap</code> to merge.</dd>
<dt><span class="strong">Returns:</span></dt><dd>the merged <code>Rmap</code> (may be this <code>Rmap</code>).</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code><a href="../../../com/rbnb/api/AddressException.html" title="class in com.rbnb.api">AddressException</a></code> - thrown if there is a problem with an address.</dd>
<dd><code><a href="../../../com/rbnb/api/SerializeException.html" title="class in com.rbnb.api">SerializeException</a></code> - thrown if there is a problem with the serialization.</dd>
<dd><code>java.io.EOFException</code> - thrown if the end of the input stream is reached.</dd>
<dd><code>java.io.IOException</code> - thrown if there is an error during I/O.</dd>
<dd><code>java.lang.IllegalArgumentException</code> - thrown if the input <code>Rmap</code> is already a child of
                  another <code>Rmap</code> or if the input is null.</dd>
<dd><code>java.lang.InterruptedException</code> - thrown if the operation is interrupted.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd></dl>
</li>
</ul>
<a name="moveToBottom()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>moveToBottom</h4>
<pre>public final&nbsp;<a href="../../../com/rbnb/api/Rmap.html" title="class in com.rbnb.api">Rmap</a>&nbsp;moveToBottom()
                        throws <a href="../../../com/rbnb/api/AddressException.html" title="class in com.rbnb.api">AddressException</a>,
                               <a href="../../../com/rbnb/api/SerializeException.html" title="class in com.rbnb.api">SerializeException</a>,
                               java.io.EOFException,
                               java.io.InterruptedIOException,
                               java.io.IOException,
                               java.lang.InterruptedException</pre>
<div class="block">Moves to the bottom of this <code>Rmap</code> hierarchy.
 <p>
 This method is intended for use in conjunction with
 <code>createFromName</code>. At each point in the hierarchy, it gets the
 first child and moves down until it reaches an <code>Rmap</code> with no
 children.
 <p></div>
<dl><dt><span class="strong">Returns:</span></dt><dd>the bottom <code>Rmap</code>.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code><a href="../../../com/rbnb/api/AddressException.html" title="class in com.rbnb.api">AddressException</a></code> - thrown if there is a problem with an address.</dd>
<dd><code><a href="../../../com/rbnb/api/SerializeException.html" title="class in com.rbnb.api">SerializeException</a></code> - thrown if there is a problem with the serialization.</dd>
<dd><code>java.io.EOFException</code> - thrown if the end of the input stream is reached.</dd>
<dd><code>java.io.InterruptedIOException</code> - thrown if this operation is interrupted during I/O.</dd>
<dd><code>java.io.IOException</code> - thrown if there is an error during I/O.</dd>
<dd><code>java.lang.InterruptedException</code> - thrown if the operation is interrupted.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/api/Rmap.html#createFromName(java.lang.String)"><code>createFromName(String)</code></a>, 
<a href="../../../com/rbnb/api/Rmap.html#moveToTop()"><code>moveToTop()</code></a></dd></dl>
</li>
</ul>
<a name="moveToTop()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>moveToTop</h4>
<pre>public final&nbsp;<a href="../../../com/rbnb/api/Rmap.html" title="class in com.rbnb.api">Rmap</a>&nbsp;moveToTop()</pre>
<div class="block">Moves to the top of this <code>Rmap</code> hierarchy.
 <p></div>
<dl><dt><span class="strong">Returns:</span></dt><dd>the top <code>Rmap</code>.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/api/Rmap.html#moveToBottom()"><code>moveToBottom()</code></a></dd></dl>
</li>
</ul>
<a name="nullify()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>nullify</h4>
<pre>public&nbsp;void&nbsp;nullify()</pre>
<div class="block">Nullifies this <code>Rmap</code>.
 <p>
 This method ensures that all pointers in this <code>DataBlock</code>
 are cleared, reducing the effort needed by the garbage collector to
 clean it up.
 <p></div>
<dl><dt><span class="strong">Since:</span></dt>
  <dd>V2.2</dd></dl>
</li>
</ul>
<a name="removeChild(com.rbnb.api.Rmap)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>removeChild</h4>
<pre>public&nbsp;void&nbsp;removeChild(<a href="../../../com/rbnb/api/Rmap.html" title="class in com.rbnb.api">Rmap</a>&nbsp;childI)
                 throws <a href="../../../com/rbnb/api/AddressException.html" title="class in com.rbnb.api">AddressException</a>,
                        <a href="../../../com/rbnb/api/SerializeException.html" title="class in com.rbnb.api">SerializeException</a>,
                        java.io.EOFException,
                        java.io.IOException,
                        java.lang.InterruptedException</pre>
<div class="block">Removes a child <code>Rmap</code> from this <code>Rmap</code>.
 <p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>childI</code> - the child to remove.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code><a href="../../../com/rbnb/api/AddressException.html" title="class in com.rbnb.api">AddressException</a></code> - thrown if there is a problem with an address.</dd>
<dd><code><a href="../../../com/rbnb/api/SerializeException.html" title="class in com.rbnb.api">SerializeException</a></code> - thrown if there is a problem with the serialization.</dd>
<dd><code>java.io.EOFException</code> - thrown if the end of the input stream is reached.</dd>
<dd><code>java.io.IOException</code> - thrown if there is an error during I/O.</dd>
<dd><code>java.lang.InterruptedException</code> - thrown if the operation is interrupted.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/api/Rmap.html#addChild(com.rbnb.api.Rmap)"><code>addChild(com.rbnb.api.Rmap)</code></a>, 
<a href="../../../com/rbnb/api/Rmap.html#getParent()"><code>getParent()</code></a>, 
<a href="../../../com/rbnb/api/Rmap.html#removeChildAt(int)"><code>removeChildAt(int)</code></a></dd></dl>
</li>
</ul>
<a name="removeChildAt(int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>removeChildAt</h4>
<pre>public&nbsp;void&nbsp;removeChildAt(int&nbsp;indexI)
                   throws <a href="../../../com/rbnb/api/AddressException.html" title="class in com.rbnb.api">AddressException</a>,
                          <a href="../../../com/rbnb/api/SerializeException.html" title="class in com.rbnb.api">SerializeException</a>,
                          java.io.EOFException,
                          java.io.IOException,
                          java.lang.InterruptedException</pre>
<div class="block">Removes the child <code>Rmap</code> at a particular index from this
 <code>Rmap</code>.
 <p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>indexI</code> - the index of child to remove.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code><a href="../../../com/rbnb/api/AddressException.html" title="class in com.rbnb.api">AddressException</a></code> - thrown if there is a problem with an address.</dd>
<dd><code><a href="../../../com/rbnb/api/SerializeException.html" title="class in com.rbnb.api">SerializeException</a></code> - thrown if there is a problem with the serialization.</dd>
<dd><code>java.io.EOFException</code> - thrown if the end of the input stream is reached.</dd>
<dd><code>java.io.IOException</code> - thrown if there is an error during I/O.</dd>
<dd><code>java.lang.InterruptedException</code> - thrown if the operation is interrupted.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/api/Rmap.html#addChild(com.rbnb.api.Rmap)"><code>addChild(com.rbnb.api.Rmap)</code></a>, 
<a href="../../../com/rbnb/api/Rmap.html#getParent()"><code>getParent()</code></a>, 
<a href="../../../com/rbnb/api/Rmap.html#removeChild(com.rbnb.api.Rmap)"><code>removeChild(com.rbnb.api.Rmap)</code></a></dd></dl>
</li>
</ul>
<a name="removeMember(com.rbnb.api.Rmap)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>removeMember</h4>
<pre>public&nbsp;void&nbsp;removeMember(<a href="../../../com/rbnb/api/Rmap.html" title="class in com.rbnb.api">Rmap</a>&nbsp;memberI)
                  throws <a href="../../../com/rbnb/api/AddressException.html" title="class in com.rbnb.api">AddressException</a>,
                         <a href="../../../com/rbnb/api/SerializeException.html" title="class in com.rbnb.api">SerializeException</a>,
                         java.io.EOFException,
                         java.io.IOException,
                         java.lang.InterruptedException</pre>
<div class="block">Removes a member <code>Rmap</code> from this <code>Rmap</code>.
 <p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>memberI</code> - the member to remove.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code><a href="../../../com/rbnb/api/AddressException.html" title="class in com.rbnb.api">AddressException</a></code> - thrown if there is a problem with an address.</dd>
<dd><code><a href="../../../com/rbnb/api/SerializeException.html" title="class in com.rbnb.api">SerializeException</a></code> - thrown if there is a problem with the serialization.</dd>
<dd><code>java.io.EOFException</code> - thrown if the end of the input stream is reached.</dd>
<dd><code>java.io.IOException</code> - thrown if there is an error during I/O.</dd>
<dd><code>java.lang.InterruptedException</code> - thrown if the operation is interrupted.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/api/Rmap.html#addMember(com.rbnb.api.Rmap)"><code>addMember(com.rbnb.api.Rmap)</code></a>, 
<a href="../../../com/rbnb/api/Rmap.html#getParent()"><code>getParent()</code></a>, 
<a href="../../../com/rbnb/api/Rmap.html#removeMemberAt(int)"><code>removeMemberAt(int)</code></a></dd></dl>
</li>
</ul>
<a name="removeMemberAt(int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>removeMemberAt</h4>
<pre>public&nbsp;void&nbsp;removeMemberAt(int&nbsp;indexI)
                    throws <a href="../../../com/rbnb/api/AddressException.html" title="class in com.rbnb.api">AddressException</a>,
                           <a href="../../../com/rbnb/api/SerializeException.html" title="class in com.rbnb.api">SerializeException</a>,
                           java.io.EOFException,
                           java.io.IOException,
                           java.lang.InterruptedException</pre>
<div class="block">Removes the member <code>Rmap</code> at a particular index from this
 <code>Rmap</code>.
 <p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>indexI</code> - the index of member to remove.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code><a href="../../../com/rbnb/api/AddressException.html" title="class in com.rbnb.api">AddressException</a></code> - thrown if there is a problem with an address.</dd>
<dd><code><a href="../../../com/rbnb/api/SerializeException.html" title="class in com.rbnb.api">SerializeException</a></code> - thrown if there is a problem with the serialization.</dd>
<dd><code>java.io.EOFException</code> - thrown if the end of the input stream is reached.</dd>
<dd><code>java.io.IOException</code> - thrown if there is an error during I/O.</dd>
<dd><code>java.lang.InterruptedException</code> - thrown if the operation is interrupted.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/api/Rmap.html#addMember(com.rbnb.api.Rmap)"><code>addMember(com.rbnb.api.Rmap)</code></a>, 
<a href="../../../com/rbnb/api/Rmap.html#getParent()"><code>getParent()</code></a>, 
<a href="../../../com/rbnb/api/Rmap.html#removeMember(com.rbnb.api.Rmap)"><code>removeMember(com.rbnb.api.Rmap)</code></a></dd></dl>
</li>
</ul>
<a name="setDblock(com.rbnb.api.DataBlock)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setDblock</h4>
<pre>public final&nbsp;void&nbsp;setDblock(<a href="../../../com/rbnb/api/DataBlock.html" title="class in com.rbnb.api">DataBlock</a>&nbsp;dblockI)</pre>
<div class="block">Sets the <code>DataBlock</code> of this <code>Rmap</code>.
 <p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>dblockI</code> - the <code>DataBlock</code>.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/api/Rmap.html#getDblock()"><code>getDblock()</code></a></dd></dl>
</li>
</ul>
<a name="setFrange(com.rbnb.api.TimeRange)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setFrange</h4>
<pre>public final&nbsp;void&nbsp;setFrange(<a href="../../../com/rbnb/api/TimeRange.html" title="class in com.rbnb.api">TimeRange</a>&nbsp;frangeI)</pre>
<div class="block">Sets the frame index <code>TimeRange</code> of this <code>Rmap</code>.
 <p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>frangeI</code> - the frame <code>TimeRange</code>.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/api/Rmap.html#getFrange()"><code>getFrange()</code></a></dd></dl>
</li>
</ul>
<a name="setName(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setName</h4>
<pre>public final&nbsp;void&nbsp;setName(java.lang.String&nbsp;nameI)
                   throws <a href="../../../com/rbnb/api/AddressException.html" title="class in com.rbnb.api">AddressException</a>,
                          <a href="../../../com/rbnb/api/SerializeException.html" title="class in com.rbnb.api">SerializeException</a>,
                          java.io.EOFException,
                          java.io.InterruptedIOException,
                          java.io.IOException,
                          java.lang.InterruptedException</pre>
<div class="block">Sets the name of this <code>Rmap</code>.
 <p>
 If the <code>Rmap</code> has a parent <code>Rmap</code>, then changing
 the name of this <code>Rmap</code> may effect the sort order of its
 parent's list. To ensure that this change is made properly, this
 method temporarily removes this <code>Rmap</code> from its parent,
 updates the name, and adds this <code>Rmap</code> back in to its
 parent.
 <p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>nameI</code> - the name of the <code>Rmap</code>.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code><a href="../../../com/rbnb/api/AddressException.html" title="class in com.rbnb.api">AddressException</a></code> - thrown if there is a problem with an address.</dd>
<dd><code><a href="../../../com/rbnb/api/SerializeException.html" title="class in com.rbnb.api">SerializeException</a></code> - thrown if there is a problem with the serialization.</dd>
<dd><code>java.io.EOFException</code> - thrown if the end of the input stream is reached.</dd>
<dd><code>java.io.InterruptedIOException</code> - thrown if this operation is interrupted during I/O.</dd>
<dd><code>java.io.IOException</code> - thrown if there is an error during I/O.</dd>
<dd><code>java.lang.InterruptedException</code> - thrown if the operation is interrupted.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/api/Rmap.html#getName()"><code>getName()</code></a></dd></dl>
</li>
</ul>
<a name="setTrange(com.rbnb.api.TimeRange)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setTrange</h4>
<pre>public final&nbsp;void&nbsp;setTrange(<a href="../../../com/rbnb/api/TimeRange.html" title="class in com.rbnb.api">TimeRange</a>&nbsp;trangeI)</pre>
<div class="block">Sets the <code>TimeRange</code> of this <code>Rmap</code>.
 <p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>trangeI</code> - the <code>TimeRange</code>.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/api/Rmap.html#getTrange()"><code>getTrange()</code></a></dd></dl>
</li>
</ul>
<a name="sortField(java.lang.Object)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>sortField</h4>
<pre>public&nbsp;java.lang.Object&nbsp;sortField(java.lang.Object&nbsp;sidI)
                           throws <a href="../../../com/rbnb/utility/SortException.html" title="class in com.rbnb.utility">SortException</a></pre>
<div class="block">Gets the sorting value for this <code>Rmap</code>.
 <p>
 The sort identifier for <code>Rmaps</code> is the <code>Rmap</code>
 itself.
 <p></div>
<dl>
<dt><strong>Specified by:</strong></dt>
<dd><code><a href="../../../com/rbnb/utility/SortInterface.html#sortField(java.lang.Object)">sortField</a></code>&nbsp;in interface&nbsp;<code><a href="../../../com/rbnb/utility/SortInterface.html" title="interface in com.rbnb.utility">SortInterface</a></code></dd>
<dt><span class="strong">Parameters:</span></dt><dd><code>sidI</code> - the sort type identifier -- must be null.</dd>
<dt><span class="strong">Returns:</span></dt><dd>the sort value.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code><a href="../../../com/rbnb/utility/SortException.html" title="class in com.rbnb.utility">SortException</a></code> - thrown if the input sort identifier is non-null.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/api/Rmap.html#compareTo(java.lang.Object, java.lang.Object)"><code>compareTo(Object,Object)</code></a></dd></dl>
</li>
</ul>
<a name="toNameHierarchy()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>toNameHierarchy</h4>
<pre>public&nbsp;<a href="../../../com/rbnb/api/Rmap.html" title="class in com.rbnb.api">Rmap</a>&nbsp;toNameHierarchy()
                     throws <a href="../../../com/rbnb/api/AddressException.html" title="class in com.rbnb.api">AddressException</a>,
                            <a href="../../../com/rbnb/api/SerializeException.html" title="class in com.rbnb.api">SerializeException</a>,
                            java.io.EOFException,
                            java.io.IOException,
                            java.lang.InterruptedException</pre>
<div class="block">Creates an <code>Rmap</code> hierarchy that can be used to make requests
 for the names.
 <p></div>
<dl><dt><span class="strong">Returns:</span></dt><dd>the name <code>Rmap</code> hierarchy.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code><a href="../../../com/rbnb/api/AddressException.html" title="class in com.rbnb.api">AddressException</a></code> - thrown if there is a problem with an address.</dd>
<dd><code><a href="../../../com/rbnb/api/SerializeException.html" title="class in com.rbnb.api">SerializeException</a></code> - thrown if there is a problem with the serialization.</dd>
<dd><code>java.io.EOFException</code> - thrown if the end of the input stream is reached.</dd>
<dd><code>java.io.IOException</code> - thrown if there is an error during I/O.</dd>
<dd><code>java.lang.ArrayIndexOutOfBoundsException</code> - thrown if there are no children or the index is not in the
                  range 0 to # of children - 1.</dd>
<dd><code>java.lang.InterruptedException</code> - thrown if the operation is interrupted.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd></dl>
</li>
</ul>
<a name="toString()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>toString</h4>
<pre>public&nbsp;java.lang.String&nbsp;toString()</pre>
<div class="block">Gets a displayable string representation of this <code>Rmap</code>.
 <p></div>
<dl>
<dt><strong>Overrides:</strong></dt>
<dd><code>toString</code>&nbsp;in class&nbsp;<code>java.lang.Object</code></dd>
<dt><span class="strong">Returns:</span></dt><dd>the string representation.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd></dl>
</li>
</ul>
<a name="toString(boolean, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>toString</h4>
<pre>public&nbsp;java.lang.String&nbsp;toString(boolean&nbsp;memberI,
                        java.lang.String&nbsp;indentI)
                          throws java.lang.InterruptedException</pre>
<div class="block">Gets a displayable string representation of this <code>Rmap</code>.
 <p>
 This method is the workhorse that actually does the work under the
 the standard <code>toString()</code> method. It builds a representation
 that shows the entire structure of the <code>Rmap</code>, including the
 group members and the children.
 <p>
 The input parameters specify whether this <code>Rmap</code> is a group
 member of its parent (or a child) and the identation string to prepend
 to put this <code>Rmap</code> under its parent.
 <p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>memberI</code> - is this <code>Rmap</code> a group member?</dd><dd><code>indentI</code> - the indentation string to use.</dd>
<dt><span class="strong">Returns:</span></dt><dd>the string representation.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code>java.lang.InterruptedException</code> - thrown if the operation is interrupted.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd></dl>
</li>
</ul>
<a name="xmlRegistration(long, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>xmlRegistration</h4>
<pre>public static final&nbsp;java.lang.String&nbsp;xmlRegistration(long&nbsp;lengthI,
                               java.lang.String&nbsp;mimeTypeI)</pre>
<div class="block">Produces an XML description of the specified length for the registration
 map.
 <p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>lengthI</code> - the length.</dd><dd><code>mimeTypeI</code> - the MIME type of the data.</dd>
<dt><span class="strong">Returns:</span></dt><dd>the XML description.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd></dl>
</li>
</ul>
<a name="xmlRegistration(long, java.lang.String, java.lang.String)">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>xmlRegistration</h4>
<pre>public static final&nbsp;java.lang.String&nbsp;xmlRegistration(long&nbsp;lengthI,
                               java.lang.String&nbsp;mimeTypeI,
                               java.lang.String&nbsp;xmlI)</pre>
<div class="block">Produces an XML description of the specified length and the MIME type
 for the registration map. Additional XML is added if desired.
 <p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>lengthI</code> - the length.</dd><dd><code>mimeTypeI</code> - the MIME type of the data.</dd><dd><code>xmlI</code> - the additional XML to add, if any.</dd>
<dt><span class="strong">Returns:</span></dt><dd>the XML description.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd></dl>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
</div>
<!-- ========= END OF CLASS DATA ========= -->
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a name="navbar_bottom">
<!--   -->
</a><a href="#skip-navbar_bottom" title="Skip navigation links"></a><a name="navbar_bottom_firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/Rmap.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../index-files/index-1.html">Index</a></li>
<li><a href="../../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../../../com/rbnb/api/RequestOptions.html" title="class in com.rbnb.api"><span class="strong">Prev Class</span></a></li>
<li><a href="../../../com/rbnb/api/RmapInterface.html" title="interface in com.rbnb.api"><span class="strong">Next Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../../../index.html?com/rbnb/api/Rmap.html" target="_top">Frames</a></li>
<li><a href="Rmap.html" target="_top">No Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="../../../allclasses-noframe.html">All Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li><a href="#field_summary">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor_summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li><a href="#field_detail">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor_detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_detail">Method</a></li>
</ul>
</div>
<a name="skip-navbar_bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</body>
</html>
