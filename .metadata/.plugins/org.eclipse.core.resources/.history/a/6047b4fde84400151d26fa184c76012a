<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- NewPage -->
<html lang="en">
<head>
<!-- Generated by javadoc (version 1.7.0_02) on Tue Feb 21 13:58:18 PST 2012 -->
<title>Source</title>
<meta name="date" content="2012-02-21">
<link rel="stylesheet" type="text/css" href="../../../stylesheet.css" title="Style">
</head>
<body>
<script type="text/javascript"><!--
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="Source";
    }
//-->
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a name="navbar_top">
<!--   -->
</a><a href="#skip-navbar_top" title="Skip navigation links"></a><a name="navbar_top_firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/Source.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../index-files/index-1.html">Index</a></li>
<li><a href="../../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../../../com/rbnb/sapi/Sink.html" title="class in com.rbnb.sapi"><span class="strong">Prev Class</span></a></li>
<li>Next Class</li>
</ul>
<ul class="navList">
<li><a href="../../../index.html?com/rbnb/sapi/Source.html" target="_top">Frames</a></li>
<li><a href="Source.html" target="_top">No Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../../../allclasses-noframe.html">All Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor_summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor_detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_detail">Method</a></li>
</ul>
</div>
<a name="skip-navbar_top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
<!-- ======== START OF CLASS DATA ======== -->
<div class="header">
<div class="subTitle">com.rbnb.sapi</div>
<h2 title="Class Source" class="title">Class Source</h2>
</div>
<div class="contentContainer">
<ul class="inheritance">
<li>java.lang.Object</li>
<li>
<ul class="inheritance">
<li><a href="../../../com/rbnb/sapi/Client.html" title="class in com.rbnb.sapi">com.rbnb.sapi.Client</a></li>
<li>
<ul class="inheritance">
<li>com.rbnb.sapi.Source</li>
</ul>
</li>
</ul>
</li>
</ul>
<div class="description">
<ul class="blockList">
<li class="blockList">
<dl>
<dt>All Implemented Interfaces:</dt>
<dd>java.io.Serializable</dd>
</dl>
<hr>
<br>
<pre>public class <span class="strong">Source</span>
extends <a href="../../../com/rbnb/sapi/Client.html" title="class in com.rbnb.sapi">Client</a></pre>
<div class="block">A simple data source for RBNB servers.
 This class is designed to present a simple interface for sourcing data
  to RBNB servers, via the RMap API.
 <p>
 A data source client has the following tasks:
 <ol>
 <li>Create a <a href="../../../com/rbnb/sapi/ChannelMap.html" title="class in com.rbnb.sapi"><code>ChannelMap</code></a> object.</li>
 <li>Define channels by name, via <a href="../../../com/rbnb/sapi/ChannelMap.html#Add(java.lang.String)"><code>ChannelMap.Add(java.lang.String)</code></a>.
        </li>
 <li>Set a TimeStamp, using <a href="../../../com/rbnb/sapi/ChannelMap.html#PutTime(double, double)"><code>ChannelMap.PutTime(double,double)</code></a> or 
        <a href="../../../com/rbnb/sapi/ChannelMap.html#PutTimeAuto(java.lang.String)"><code>ChannelMap.PutTimeAuto(java.lang.String)</code></a>.</li>
 <li>Add data for each channel, through the various PutChannel methods,
  such as <a href="../../../com/rbnb/sapi/ChannelMap.html#PutData(int, byte[], int)"><code>ChannelMap.PutData(int,byte[],int)</code></a>.</li>
 <li><a href="../../../com/rbnb/sapi/Source.html#Flush(com.rbnb.sapi.ChannelMap)"><code>Flush(ChannelMap)</code></a> data to RBNB server. </li>
 </ol>
 <p>Steps 2 - 4 may be repeated as desired.  Also note that the time
   may be set for the entire frame, that is only once per Flush() before 
   any calls to PutData(); for each channel, 
   that is once per PutData(); or for individual data blocks, where
   PutTime & PutData() are called multiple times per frame on the same 
   channel.
 <p>
   Use <a href="../../../com/rbnb/sapi/Source.html#Register(com.rbnb.sapi.ChannelMap)"><code>Register(ChannelMap)</code></a> to publicize channels in advance of
   sending them to the RBNB server. 
<p>
   <i>Note:</i>  Multi-channel ChannelMaps
   must remain consistent (same number and names) from one flush to another
   for the life of the data source.  This is because consistent sets of
   channels are written to unique ring-buffers in the server, which for
   efficiency are restricted to contain a consistent set of channels across
   all frames stored in each such ring-buffer.
<p></div>
<dl><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">Version:</span></dt>
  <dd>2004/01/08</dd>
<dt><span class="strong">Author:</span></dt>
  <dd>WHF</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../serialized-form.html#com.rbnb.sapi.Source">Serialized Form</a></dd></dl>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">
<!-- ======== CONSTRUCTOR SUMMARY ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor_summary">
<!--   -->
</a>
<h3>Constructor Summary</h3>
<table class="overviewSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colOne" scope="col">Constructor and Description</th>
</tr>
<tr class="altColor">
<td class="colOne"><code><strong><a href="../../../com/rbnb/sapi/Source.html#Source()">Source</a></strong>()</code>
<div class="block">Default constructor.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colOne"><code><strong><a href="../../../com/rbnb/sapi/Source.html#Source(int, java.lang.String, int)">Source</a></strong>(int&nbsp;cacheSize,
      java.lang.String&nbsp;archiveMode,
      int&nbsp;archiveSize)</code>
<div class="block">A convenience constructor which initializes values for the cache size,
  archive mode, and archive size.</div>
</td>
</tr>
</table>
</li>
</ul>
<!-- ========== METHOD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="method_summary">
<!--   -->
</a>
<h3>Method Summary</h3>
<table class="overviewSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
<caption><span>Methods</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Method and Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>long</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/sapi/Source.html#BytesTransferred()">BytesTransferred</a></strong>()</code>
<div class="block">Reports the total number of bytes read and written by this Client.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/sapi/Source.html#ClearCache()">ClearCache</a></strong>()</code>
<div class="block">Flushes any data currently in the Ring Buffer cache into the
  disk archive.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code><a href="../../../com/rbnb/sapi/ChannelMap.html" title="class in com.rbnb.sapi">ChannelMap</a></code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/sapi/Source.html#Delete(com.rbnb.sapi.ChannelMap)">Delete</a></strong>(<a href="../../../com/rbnb/sapi/ChannelMap.html" title="class in com.rbnb.sapi">ChannelMap</a>&nbsp;toDelete)</code>
<div class="block">Calls <a href="../../../com/rbnb/sapi/Source.html#Delete(com.rbnb.sapi.ChannelMap, com.rbnb.sapi.ChannelMap)"><code>Delete(ChannelMap, ChannelMap)</code></a> with <b>null</b>
  for the <i>result</i> parameter.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code><a href="../../../com/rbnb/sapi/ChannelMap.html" title="class in com.rbnb.sapi">ChannelMap</a></code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/sapi/Source.html#Delete(com.rbnb.sapi.ChannelMap, com.rbnb.sapi.ChannelMap)">Delete</a></strong>(<a href="../../../com/rbnb/sapi/ChannelMap.html" title="class in com.rbnb.sapi">ChannelMap</a>&nbsp;toDelete,
      <a href="../../../com/rbnb/sapi/ChannelMap.html" title="class in com.rbnb.sapi">ChannelMap</a>&nbsp;result)</code>
<div class="block">Deletes the maps specified in <i>toDelete</i>.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/sapi/Source.html#Detach()">Detach</a></strong>()</code>
<div class="block">Close the connection with the server, but retain the server-side
 handler and its ring buffer(s) such that sink clients can continue to
 access previously written data.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>int</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/sapi/Source.html#Flush(com.rbnb.sapi.ChannelMap)">Flush</a></strong>(<a href="../../../com/rbnb/sapi/ChannelMap.html" title="class in com.rbnb.sapi">ChannelMap</a>&nbsp;ch)</code>
<div class="block">Sends the pending channels to the server, unsynchronized.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>int</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/sapi/Source.html#Flush(com.rbnb.sapi.ChannelMap, boolean)">Flush</a></strong>(<a href="../../../com/rbnb/sapi/ChannelMap.html" title="class in com.rbnb.sapi">ChannelMap</a>&nbsp;ch,
     boolean&nbsp;doSynch)</code>
<div class="block">Sends the pending channels to the server, optionally waiting for
  confirmation before returning.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/sapi/Source.html#Register(com.rbnb.sapi.ChannelMap)">Register</a></strong>(<a href="../../../com/rbnb/sapi/ChannelMap.html" title="class in com.rbnb.sapi">ChannelMap</a>&nbsp;cm)</code>
<div class="block">Tells the server which channels this <code>Source</code> will
  generate.</div>
</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a name="methods_inherited_from_class_com.rbnb.sapi.Client">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;com.rbnb.sapi.<a href="../../../com/rbnb/sapi/Client.html" title="class in com.rbnb.sapi">Client</a></h3>
<code><a href="../../../com/rbnb/sapi/Client.html#CloseRBNBConnection()">CloseRBNBConnection</a>, <a href="../../../com/rbnb/sapi/Client.html#CloseRBNBConnection(boolean, boolean)">CloseRBNBConnection</a>, <a href="../../../com/rbnb/sapi/Client.html#GetArchiveMode()">GetArchiveMode</a>, <a href="../../../com/rbnb/sapi/Client.html#GetArchiveSize()">GetArchiveSize</a>, <a href="../../../com/rbnb/sapi/Client.html#GetCacheSize()">GetCacheSize</a>, <a href="../../../com/rbnb/sapi/Client.html#GetChannelList()">GetChannelList</a>, <a href="../../../com/rbnb/sapi/Client.html#GetChannelList(java.lang.String)">GetChannelList</a>, <a href="../../../com/rbnb/sapi/Client.html#GetClientName()">GetClientName</a>, <a href="../../../com/rbnb/sapi/Client.html#GetServerName()">GetServerName</a>, <a href="../../../com/rbnb/sapi/Client.html#OpenRBNBConnection()">OpenRBNBConnection</a>, <a href="../../../com/rbnb/sapi/Client.html#OpenRBNBConnection(java.lang.String, java.lang.String)">OpenRBNBConnection</a>, <a href="../../../com/rbnb/sapi/Client.html#OpenRBNBConnection(java.lang.String, java.lang.String, java.lang.String, java.lang.String)">OpenRBNBConnection</a>, <a href="../../../com/rbnb/sapi/Client.html#SetRingBuffer(int, java.lang.String, int)">SetRingBuffer</a>, <a href="../../../com/rbnb/sapi/Client.html#VerifyConnection()">VerifyConnection</a></code></li>
</ul>
<ul class="blockList">
<li class="blockList"><a name="methods_inherited_from_class_java.lang.Object">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
<code>equals, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">
<!-- ========= CONSTRUCTOR DETAIL ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor_detail">
<!--   -->
</a>
<h3>Constructor Detail</h3>
<a name="Source()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>Source</h4>
<pre>public&nbsp;Source()</pre>
<div class="block">Default constructor.  Initializes default values of the parameters:
 <ul><li><code>cacheSize</code> = 100 frames</li>
 <li><code>archiveSize</code> = 0 frames (off) </li>
 </ul>
 <p></div>
<dl><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd></dl>
</li>
</ul>
<a name="Source(int, java.lang.String, int)">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>Source</h4>
<pre>public&nbsp;Source(int&nbsp;cacheSize,
      java.lang.String&nbsp;archiveMode,
      int&nbsp;archiveSize)</pre>
<div class="block">A convenience constructor which initializes values for the cache size,
  archive mode, and archive size.  Calls 
  <a href="../../../com/rbnb/sapi/Client.html#SetRingBuffer(int, java.lang.String, int)"><code>Client.SetRingBuffer(int, String, int)</code></a> 
  with the specified options.
 <p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>cacheSize</code> - Size of the memory cache, in frames.</dd><dd><code>archiveMode</code> - The mode for the optional archive.  Should be one 
   of the following: <ul>
  <li> "none"  - no Archive is made. </li>
  <li> "load"  - load an archive, but do not allow any further writing 
   to it. </li>
  <li> "create" - create an archive. </li>
  <li> "append" - load an archive, but allow writing new data to it. </li>
 </ul></dd><dd><code>archiveSize</code> - The size of the desired archive, in frames.  Ignored 
   except for "create" and "append".</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/sapi/Client.html#CloseRBNBConnection()"><code>Client.CloseRBNBConnection()</code></a>, 
<a href="../../../com/rbnb/sapi/Client.html#SetRingBuffer(int, java.lang.String, int)"><code>Client.SetRingBuffer(int,String,int)</code></a></dd></dl>
</li>
</ul>
</li>
</ul>
<!-- ============ METHOD DETAIL ========== -->
<ul class="blockList">
<li class="blockList"><a name="method_detail">
<!--   -->
</a>
<h3>Method Detail</h3>
<a name="BytesTransferred()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>BytesTransferred</h4>
<pre>public&nbsp;long&nbsp;BytesTransferred()</pre>
<div class="block"><strong>Description copied from class:&nbsp;<code><a href="../../../com/rbnb/sapi/Client.html#BytesTransferred()">Client</a></code></strong></div>
<div class="block">Reports the total number of bytes read and written by this Client. <p>
 <p></div>
<dl>
<dt><strong>Specified by:</strong></dt>
<dd><code><a href="../../../com/rbnb/sapi/Client.html#BytesTransferred()">BytesTransferred</a></code>&nbsp;in class&nbsp;<code><a href="../../../com/rbnb/sapi/Client.html" title="class in com.rbnb.sapi">Client</a></code></dd>
<dt><span class="strong">Returns:</span></dt><dd>The total number of bytes read and written.</dd></dl>
</li>
</ul>
<a name="Flush(com.rbnb.sapi.ChannelMap)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>Flush</h4>
<pre>public&nbsp;int&nbsp;Flush(<a href="../../../com/rbnb/sapi/ChannelMap.html" title="class in com.rbnb.sapi">ChannelMap</a>&nbsp;ch)
          throws <a href="../../../com/rbnb/sapi/SAPIException.html" title="class in com.rbnb.sapi">SAPIException</a></pre>
<div class="block">Sends the pending channels to the server, unsynchronized.  Calls 
  <a href="../../../com/rbnb/sapi/Source.html#Flush(com.rbnb.sapi.ChannelMap, boolean)"><code>Flush(ChannelMap,boolean)</code></a>
  with a false value for the synchronization parameter.
 <p></div>
<dl><dt><span class="strong">Returns:</span></dt><dd>The number of channels flushed.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code><a href="../../../com/rbnb/sapi/SAPIException.html" title="class in com.rbnb.sapi">SAPIException</a></code> - If there is an error while sending data to 
  the server.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/sapi/Source.html#Flush(com.rbnb.sapi.ChannelMap, boolean)"><code>Flush(ChannelMap,boolean)</code></a></dd></dl>
</li>
</ul>
<a name="Flush(com.rbnb.sapi.ChannelMap, boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>Flush</h4>
<pre>public&nbsp;int&nbsp;Flush(<a href="../../../com/rbnb/sapi/ChannelMap.html" title="class in com.rbnb.sapi">ChannelMap</a>&nbsp;ch,
        boolean&nbsp;doSynch)
          throws <a href="../../../com/rbnb/sapi/SAPIException.html" title="class in com.rbnb.sapi">SAPIException</a></pre>
<div class="block">Sends the pending channels to the server, optionally waiting for
  confirmation before returning.  The data and times in the provided 
  <a href="../../../com/rbnb/sapi/ChannelMap.html" title="class in com.rbnb.sapi"><code>ChannelMap</code></a> are erased after they are sent, although the names
  are preserved.
 <p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>doSynch</code> - If true, this Source will communicate with the server
   to verify that the communication was successful.</dd>
<dt><span class="strong">Returns:</span></dt><dd>The number of channels flushed.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code><a href="../../../com/rbnb/sapi/SAPIException.html" title="class in com.rbnb.sapi">SAPIException</a></code> - If there is an error while sending data to
  the server.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd></dl>
</li>
</ul>
<a name="Register(com.rbnb.sapi.ChannelMap)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>Register</h4>
<pre>public&nbsp;void&nbsp;Register(<a href="../../../com/rbnb/sapi/ChannelMap.html" title="class in com.rbnb.sapi">ChannelMap</a>&nbsp;cm)
              throws <a href="../../../com/rbnb/sapi/SAPIException.html" title="class in com.rbnb.sapi">SAPIException</a></pre>
<div class="block">Tells the server which channels this <code>Source</code> will
  generate. It also sends any data present in the <code>
  ChannelMap</code> as time-independent meta-data.
 <p>
 <strong>NOTE:</strong> It is strongly recommended that the data placed
  into the ChannelMap used with Register be placed with 
 <a href="../../../com/rbnb/sapi/ChannelMap.html#PutUserInfo(int, java.lang.String)"><code>ChannelMap.PutUserInfo(int, String)</code></a>.  This allows the server
  to combine this data with its server generated meta-data.  Otherwise
  the server generated data is overridden.</div>
<dl><dt><span class="strong">Throws:</span></dt>
<dd><code><a href="../../../com/rbnb/sapi/SAPIException.html" title="class in com.rbnb.sapi">SAPIException</a></code> - If there is an error while sending the map to
  the server.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd></dl>
</li>
</ul>
<a name="Delete(com.rbnb.sapi.ChannelMap, com.rbnb.sapi.ChannelMap)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>Delete</h4>
<pre>public&nbsp;<a href="../../../com/rbnb/sapi/ChannelMap.html" title="class in com.rbnb.sapi">ChannelMap</a>&nbsp;Delete(<a href="../../../com/rbnb/sapi/ChannelMap.html" title="class in com.rbnb.sapi">ChannelMap</a>&nbsp;toDelete,
                <a href="../../../com/rbnb/sapi/ChannelMap.html" title="class in com.rbnb.sapi">ChannelMap</a>&nbsp;result)
                  throws <a href="../../../com/rbnb/sapi/SAPIException.html" title="class in com.rbnb.sapi">SAPIException</a></pre>
<div class="block">Deletes the maps specified in <i>toDelete</i>.  The results of the 
  deletion, as determined by the server, are placed in <i>result</i>,
  which is returned.
 <p>If result is null, a new channel map is created.</div>
<dl><dt><span class="strong">Throws:</span></dt>
<dd><code><a href="../../../com/rbnb/sapi/SAPIException.html" title="class in com.rbnb.sapi">SAPIException</a></code></dd></dl>
</li>
</ul>
<a name="Delete(com.rbnb.sapi.ChannelMap)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>Delete</h4>
<pre>public&nbsp;<a href="../../../com/rbnb/sapi/ChannelMap.html" title="class in com.rbnb.sapi">ChannelMap</a>&nbsp;Delete(<a href="../../../com/rbnb/sapi/ChannelMap.html" title="class in com.rbnb.sapi">ChannelMap</a>&nbsp;toDelete)
                  throws <a href="../../../com/rbnb/sapi/SAPIException.html" title="class in com.rbnb.sapi">SAPIException</a></pre>
<div class="block">Calls <a href="../../../com/rbnb/sapi/Source.html#Delete(com.rbnb.sapi.ChannelMap, com.rbnb.sapi.ChannelMap)"><code>Delete(ChannelMap, ChannelMap)</code></a> with <b>null</b>
  for the <i>result</i> parameter.</div>
<dl><dt><span class="strong">Throws:</span></dt>
<dd><code><a href="../../../com/rbnb/sapi/SAPIException.html" title="class in com.rbnb.sapi">SAPIException</a></code></dd></dl>
</li>
</ul>
<a name="ClearCache()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>ClearCache</h4>
<pre>public&nbsp;void&nbsp;ClearCache()
                throws <a href="../../../com/rbnb/sapi/SAPIException.html" title="class in com.rbnb.sapi">SAPIException</a></pre>
<div class="block">Flushes any data currently in the Ring Buffer cache into the
  disk archive.  If there is no archive, the data is discarded.</div>
<dl><dt><span class="strong">Throws:</span></dt>
<dd><code><a href="../../../com/rbnb/sapi/SAPIException.html" title="class in com.rbnb.sapi">SAPIException</a></code></dd></dl>
</li>
</ul>
<a name="Detach()">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>Detach</h4>
<pre>public final&nbsp;void&nbsp;Detach()</pre>
<div class="block">Close the connection with the server, but retain the server-side
 handler and its ring buffer(s) such that sink clients can continue to
 access previously written data.
 <p>If you wish to close the connection and prevent access to the data
  at the server, use <a href="../../../com/rbnb/sapi/Client.html#CloseRBNBConnection()"><code>Client.CloseRBNBConnection()</code></a>.
 <p>A new client can reattach to the detached server-side handler by
 using the following calls:
 <p><code>Source src = new Source(cacheSize,"append",archiveSize)</code>
 <br><code>src.OpenRBNBConnection(rbnbAddress,clientName)</code>
 <p>Note: while it is possible to <code>Detach</code> from a
 <code>Source</code> that does not have an archive, it is not possible
 at this time to reattach to it.
 <p></div>
<dl><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/sapi/Client.html#OpenRBNBConnection(java.lang.String, java.lang.String)"><code>Client.OpenRBNBConnection(String,String)</code></a>, 
<a href="../../../com/rbnb/sapi/Client.html#CloseRBNBConnection()"><code>Client.CloseRBNBConnection()</code></a></dd></dl>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
</div>
<!-- ========= END OF CLASS DATA ========= -->
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a name="navbar_bottom">
<!--   -->
</a><a href="#skip-navbar_bottom" title="Skip navigation links"></a><a name="navbar_bottom_firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/Source.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../index-files/index-1.html">Index</a></li>
<li><a href="../../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../../../com/rbnb/sapi/Sink.html" title="class in com.rbnb.sapi"><span class="strong">Prev Class</span></a></li>
<li>Next Class</li>
</ul>
<ul class="navList">
<li><a href="../../../index.html?com/rbnb/sapi/Source.html" target="_top">Frames</a></li>
<li><a href="Source.html" target="_top">No Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="../../../allclasses-noframe.html">All Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor_summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor_detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_detail">Method</a></li>
</ul>
</div>
<a name="skip-navbar_bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</body>
</html>
