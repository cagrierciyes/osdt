<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- NewPage -->
<html lang="en">
<head>
<!-- Generated by javadoc (version 1.7.0_02) on Tue Feb 21 13:58:31 PST 2012 -->
<title>DataBlock</title>
<meta name="date" content="2012-02-21">
<link rel="stylesheet" type="text/css" href="../../../stylesheet.css" title="Style">
</head>
<body>
<script type="text/javascript"><!--
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="DataBlock";
    }
//-->
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a name="navbar_top">
<!--   -->
</a><a href="#skip-navbar_top" title="Skip navigation links"></a><a name="navbar_top_firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/DataBlock.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../index-files/index-1.html">Index</a></li>
<li><a href="../../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../../../com/rbnb/api/DataArray.html" title="class in com.rbnb.api"><span class="strong">Prev Class</span></a></li>
<li><a href="../../../com/rbnb/api/DataRequest.html" title="class in com.rbnb.api"><span class="strong">Next Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../../../index.html?com/rbnb/api/DataBlock.html" target="_top">Frames</a></li>
<li><a href="DataBlock.html" target="_top">No Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../../../allclasses-noframe.html">All Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li><a href="#field_summary">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor_summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li><a href="#field_detail">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor_detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_detail">Method</a></li>
</ul>
</div>
<a name="skip-navbar_top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
<!-- ======== START OF CLASS DATA ======== -->
<div class="header">
<div class="subTitle">com.rbnb.api</div>
<h2 title="Class DataBlock" class="title">Class DataBlock</h2>
</div>
<div class="contentContainer">
<ul class="inheritance">
<li>java.lang.Object</li>
<li>
<ul class="inheritance">
<li>com.rbnb.api.DataBlock</li>
</ul>
</li>
</ul>
<div class="description">
<ul class="blockList">
<li class="blockList">
<dl>
<dt>All Implemented Interfaces:</dt>
<dd>java.io.Serializable, java.lang.Cloneable</dd>
</dl>
<hr>
<br>
<pre>public final class <span class="strong">DataBlock</span>
extends java.lang.Object</pre>
<div class="block">Describes and provides the data belonging to an <code>Rmap</code>.
 <p>
 A <code>DataBlock</code> consists of three basic parts:
 <p><ol>
 <li>The size of the data,</li>
 <li>The description of the data, and</li>
 <li>The data payload.</li>
 </ol><p>
 The size of the data in the <code>DataBlock</code> is required and consists
 of: 
 <p><ul>
 <li>The number of data points, and</li>
 <li>The size of each data point in bytes.</li>
 </ul><p>
 The description of the data (<code>DataReference</code>) is optional and
 consists of: 
 <p><ul>
 <li>The data primitive type (INT16, FLOAT32, etc.),</li>
 <li>The order of bytes for multi-byte values (MSB, LSB, UNKNOWN),</li>
 <li>A flag indicating the indivisibility of the data,</li>
 <li>The offset in bytes to the first point, and</li>
 <li>The stride in bytes from the start of one point to the start of the
     next.</li>
 </ul><p>
 The data payload is optional and consists of a <code>java.util.Vector</code>
 containing one or more arrays of data. The arrays can be one of two cases:
 <p><ol>
 <li>Arrays of primitive objects, or</li>
 <li>Arrays of arrays of bytes.</li>
 </ol>
 A special case: a byte[0] array of data is a placeholder indicating that
 a data payload exists, but has been omitted.
 <p></div>
<dl><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">Version:</span></dt>
  <dd>2005/03/23</dd>
<dt><span class="strong">Author:</span></dt>
  <dd>Ian Brown</dd>
<dt><span class="strong">See Also:</span></dt><dd><code>DataReference</code>, 
<a href="../../../com/rbnb/api/Rmap.html" title="class in com.rbnb.api"><code>Rmap</code></a>, 
<a href="../../../serialized-form.html#com.rbnb.api.DataBlock">Serialized Form</a></dd></dl>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">
<!-- =========== FIELD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="field_summary">
<!--   -->
</a>
<h3>Field Summary</h3>
<table class="overviewSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Field and Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static byte</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/DataBlock.html#ORDER_LSB">ORDER_LSB</a></strong></code>
<div class="block">Least-Significant-Byte first (big-endian, Intel) byte ordering.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static byte</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/DataBlock.html#ORDER_MSB">ORDER_MSB</a></strong></code>
<div class="block">Most-Significant-Byte first (little-endian, Java) byte order.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static byte</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/DataBlock.html#TYPE_BOOLEAN">TYPE_BOOLEAN</a></strong></code>
<div class="block">Boolean (8-bit, one byte) data type.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static byte</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/DataBlock.html#TYPE_BYTEARRAY">TYPE_BYTEARRAY</a></strong></code>
<div class="block">Byte array data type.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static byte</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/DataBlock.html#TYPE_FLOAT32">TYPE_FLOAT32</a></strong></code>
<div class="block">32-bit (four byte) floating point data type.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static byte</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/DataBlock.html#TYPE_FLOAT64">TYPE_FLOAT64</a></strong></code>
<div class="block">64-bit (eight byte) floating point data type.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static byte</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/DataBlock.html#TYPE_FROM_INPUT">TYPE_FROM_INPUT</a></strong></code>
<div class="block">Take the data type from the input data payload.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static byte</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/DataBlock.html#TYPE_INT16">TYPE_INT16</a></strong></code>
<div class="block">16-bit (two byte) signed integer data type.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static byte</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/DataBlock.html#TYPE_INT32">TYPE_INT32</a></strong></code>
<div class="block">32-bit (four byte) signed integer data type.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static byte</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/DataBlock.html#TYPE_INT64">TYPE_INT64</a></strong></code>
<div class="block">64-bit (eight byte) signed integer data type.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static byte</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/DataBlock.html#TYPE_INT8">TYPE_INT8</a></strong></code>
<div class="block">8-bit (one byte) signed integer data type.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static byte</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/DataBlock.html#TYPE_STRING">TYPE_STRING</a></strong></code>
<div class="block">Character string data type.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static byte</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/DataBlock.html#TYPE_USER">TYPE_USER</a></strong></code>
<div class="block">User registration type.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static byte</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/DataBlock.html#UNKNOWN">UNKNOWN</a></strong></code>
<div class="block">Unknown data type or byte ordering.</div>
</td>
</tr>
</table>
</li>
</ul>
<!-- ======== CONSTRUCTOR SUMMARY ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor_summary">
<!--   -->
</a>
<h3>Constructor Summary</h3>
<table class="overviewSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colOne" scope="col">Constructor and Description</th>
</tr>
<tr class="altColor">
<td class="colOne"><code><strong><a href="../../../com/rbnb/api/DataBlock.html#DataBlock()">DataBlock</a></strong>()</code>
<div class="block">Class constructor.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colOne"><code><strong><a href="../../../com/rbnb/api/DataBlock.html#DataBlock(java.lang.Object, int, int)">DataBlock</a></strong>(java.lang.Object&nbsp;dataI,
         int&nbsp;ndataI,
         int&nbsp;ptsizeI)</code>
<div class="block">Class constructor to build a <code>DataBlock</code> from the basic
 fields.</div>
</td>
</tr>
<tr class="altColor">
<td class="colOne"><code><strong><a href="../../../com/rbnb/api/DataBlock.html#DataBlock(java.lang.Object, int, int, byte, byte, boolean, int, int)">DataBlock</a></strong>(java.lang.Object&nbsp;dataI,
         int&nbsp;ndataI,
         int&nbsp;ptsizeI,
         byte&nbsp;dtypeI,
         byte&nbsp;worderI,
         boolean&nbsp;indivflgI,
         int&nbsp;offsetI,
         int&nbsp;strideI)</code>
<div class="block">Class constructor to build a <code>DataBlock</code> from the data
 payload and description from the input values.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colOne"><code><strong><a href="../../../com/rbnb/api/DataBlock.html#DataBlock(java.lang.Object, int, int, byte, java.lang.String, byte, boolean, int, int)">DataBlock</a></strong>(java.lang.Object&nbsp;dataI,
         int&nbsp;ndataI,
         int&nbsp;ptsizeI,
         byte&nbsp;dtypeI,
         java.lang.String&nbsp;mimeTypeI,
         byte&nbsp;worderI,
         boolean&nbsp;indivflgI,
         int&nbsp;offsetI,
         int&nbsp;strideI)</code>
<div class="block">Class constructor to build a <code>DataBlock</code> from the data
 payload and description from the input values.</div>
</td>
</tr>
</table>
</li>
</ul>
<!-- ========== METHOD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="method_summary">
<!--   -->
</a>
<h3>Method Summary</h3>
<table class="overviewSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
<caption><span>Methods</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Method and Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/DataBlock.html#addData(java.lang.Object, int)">addData</a></strong>(java.lang.Object&nbsp;dataI,
       int&nbsp;nPtsI)</code>
<div class="block">Adds more data.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>java.lang.Object</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/DataBlock.html#clone()">clone</a></strong>()</code>
<div class="block">Clones this <code>DataBlock</code>.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>java.lang.Object</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/DataBlock.html#extractData(com.rbnb.api.DataBlock)">extractData</a></strong>(<a href="../../../com/rbnb/api/DataBlock.html" title="class in com.rbnb.api">DataBlock</a>&nbsp;dRefI)</code>
<div class="block">Extracts data from this data pool for the input <code>DataBlock</code>.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>java.util.Vector</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/DataBlock.html#getData()">getData</a></strong>()</code>
<div class="block">Gets the data payload.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>byte</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/DataBlock.html#getDtype()">getDtype</a></strong>()</code>
<div class="block">Gets the type of data.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/DataBlock.html#getIndivFlg()">getIndivFlg</a></strong>()</code>
<div class="block">Gets the indivisible flag.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>java.lang.String</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/DataBlock.html#getMIMEType()">getMIMEType</a></strong>()</code>
<div class="block">Gets the MIME type.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>int</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/DataBlock.html#getNpts()">getNpts</a></strong>()</code>
<div class="block">Gets the number of points.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>int</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/DataBlock.html#getOffset()">getOffset</a></strong>()</code>
<div class="block">Gets the number of bytes to the first point.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>int</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/DataBlock.html#getPtsize()">getPtsize</a></strong>()</code>
<div class="block">Gets the size of a point in bytes.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>int</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/DataBlock.html#getStride()">getStride</a></strong>()</code>
<div class="block">Gets the number of bytes to the next point.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>byte</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/DataBlock.html#getWorder()">getWorder</a></strong>()</code>
<div class="block">Gets the order of bytes within a point.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/DataBlock.html#nullify()">nullify</a></strong>()</code>
<div class="block">Nullifies this <code>DataBlock</code>.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/DataBlock.html#set(java.lang.Object, int, int)">set</a></strong>(java.lang.Object&nbsp;dataI,
   int&nbsp;ndataI,
   int&nbsp;ptsizeI)</code>
<div class="block">Sets the data payload and description using basic values.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/DataBlock.html#set(java.lang.Object, int, int, byte, byte, boolean, int, int)">set</a></strong>(java.lang.Object&nbsp;dataI,
   int&nbsp;ndataI,
   int&nbsp;ptsizeI,
   byte&nbsp;dtypeI,
   byte&nbsp;worderI,
   boolean&nbsp;indivflgI,
   int&nbsp;offsetI,
   int&nbsp;strideI)</code>
<div class="block">Sets the data payload and description from the input values.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/DataBlock.html#set(java.lang.Object, int, int, byte, java.lang.String, byte, boolean, int, int)">set</a></strong>(java.lang.Object&nbsp;dataI,
   int&nbsp;ndataI,
   int&nbsp;ptsizeI,
   byte&nbsp;dtypeI,
   java.lang.String&nbsp;mimeTypeI,
   byte&nbsp;worderI,
   boolean&nbsp;indivflgI,
   int&nbsp;offsetI,
   int&nbsp;strideI)</code>
<div class="block">Sets the data payload and description from the input values.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/DataBlock.html#setData(java.lang.Object)">setData</a></strong>(java.lang.Object&nbsp;dataI)</code>
<div class="block">Sets the data payload.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/DataBlock.html#setDtype(byte)">setDtype</a></strong>(byte&nbsp;dtypeI)</code>
<div class="block">Sets the type of data.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/DataBlock.html#setIndivFlg(boolean)">setIndivFlg</a></strong>(boolean&nbsp;indivflgI)</code>
<div class="block">Sets the indivisible flag.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/DataBlock.html#setMIMEType(java.lang.String)">setMIMEType</a></strong>(java.lang.String&nbsp;mimeTypeI)</code>
<div class="block">Sets the MIME type.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/DataBlock.html#setNpts(int)">setNpts</a></strong>(int&nbsp;nptsI)</code>
<div class="block">Sets the number of points.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/DataBlock.html#setOffset(int)">setOffset</a></strong>(int&nbsp;offsetI)</code>
<div class="block">Sets the number of bytes to the first point.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/DataBlock.html#setOffsetStride(int, int)">setOffsetStride</a></strong>(int&nbsp;offsetI,
               int&nbsp;strideI)</code>
<div class="block">Sets the offset in bytes to the start of the first point and the
 stride in bytes between points.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/DataBlock.html#setPtsize(int)">setPtsize</a></strong>(int&nbsp;ptsizeI)</code>
<div class="block">Sets the size of a point in bytes.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/DataBlock.html#setStride(int)">setStride</a></strong>(int&nbsp;strideI)</code>
<div class="block">Sets the number of bytes to the next point.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/DataBlock.html#setWorder(byte)">setWorder</a></strong>(byte&nbsp;worderI)</code>
<div class="block">Sets the order of bytes within a point.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>java.lang.String</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/DataBlock.html#toString()">toString</a></strong>()</code>
<div class="block">Gets a displayable string representation of this <code>DataBlock</code>.</div>
</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a name="methods_inherited_from_class_java.lang.Object">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
<code>equals, getClass, hashCode, notify, notifyAll, wait, wait, wait</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">
<!-- ============ FIELD DETAIL =========== -->
<ul class="blockList">
<li class="blockList"><a name="field_detail">
<!--   -->
</a>
<h3>Field Detail</h3>
<a name="UNKNOWN">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>UNKNOWN</h4>
<pre>public static final&nbsp;byte UNKNOWN</pre>
<div class="block">Unknown data type or byte ordering.
 <p></div>
<dl><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../constant-values.html#com.rbnb.api.DataBlock.UNKNOWN">Constant Field Values</a></dd></dl>
</li>
</ul>
<a name="ORDER_LSB">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>ORDER_LSB</h4>
<pre>public static final&nbsp;byte ORDER_LSB</pre>
<div class="block">Least-Significant-Byte first (big-endian, Intel) byte ordering.
 <p></div>
<dl><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../constant-values.html#com.rbnb.api.DataBlock.ORDER_LSB">Constant Field Values</a></dd></dl>
</li>
</ul>
<a name="ORDER_MSB">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>ORDER_MSB</h4>
<pre>public static final&nbsp;byte ORDER_MSB</pre>
<div class="block">Most-Significant-Byte first (little-endian, Java) byte order.
 <p></div>
<dl><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../constant-values.html#com.rbnb.api.DataBlock.ORDER_MSB">Constant Field Values</a></dd></dl>
</li>
</ul>
<a name="TYPE_FROM_INPUT">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>TYPE_FROM_INPUT</h4>
<pre>public static final&nbsp;byte TYPE_FROM_INPUT</pre>
<div class="block">Take the data type from the input data payload.
 <p>
 The resulting data type value will be one of the other types.
 <p></div>
<dl><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../constant-values.html#com.rbnb.api.DataBlock.TYPE_FROM_INPUT">Constant Field Values</a></dd></dl>
</li>
</ul>
<a name="TYPE_BOOLEAN">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>TYPE_BOOLEAN</h4>
<pre>public static final&nbsp;byte TYPE_BOOLEAN</pre>
<div class="block">Boolean (8-bit, one byte) data type.
 <p></div>
<dl><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../constant-values.html#com.rbnb.api.DataBlock.TYPE_BOOLEAN">Constant Field Values</a></dd></dl>
</li>
</ul>
<a name="TYPE_INT8">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>TYPE_INT8</h4>
<pre>public static final&nbsp;byte TYPE_INT8</pre>
<div class="block">8-bit (one byte) signed integer data type.
 <p></div>
<dl><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../constant-values.html#com.rbnb.api.DataBlock.TYPE_INT8">Constant Field Values</a></dd></dl>
</li>
</ul>
<a name="TYPE_INT16">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>TYPE_INT16</h4>
<pre>public static final&nbsp;byte TYPE_INT16</pre>
<div class="block">16-bit (two byte) signed integer data type.
 <p></div>
<dl><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../constant-values.html#com.rbnb.api.DataBlock.TYPE_INT16">Constant Field Values</a></dd></dl>
</li>
</ul>
<a name="TYPE_INT32">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>TYPE_INT32</h4>
<pre>public static final&nbsp;byte TYPE_INT32</pre>
<div class="block">32-bit (four byte) signed integer data type.
 <p></div>
<dl><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../constant-values.html#com.rbnb.api.DataBlock.TYPE_INT32">Constant Field Values</a></dd></dl>
</li>
</ul>
<a name="TYPE_INT64">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>TYPE_INT64</h4>
<pre>public static final&nbsp;byte TYPE_INT64</pre>
<div class="block">64-bit (eight byte) signed integer data type.
 <p></div>
<dl><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../constant-values.html#com.rbnb.api.DataBlock.TYPE_INT64">Constant Field Values</a></dd></dl>
</li>
</ul>
<a name="TYPE_FLOAT32">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>TYPE_FLOAT32</h4>
<pre>public static final&nbsp;byte TYPE_FLOAT32</pre>
<div class="block">32-bit (four byte) floating point data type.
 <p></div>
<dl><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../constant-values.html#com.rbnb.api.DataBlock.TYPE_FLOAT32">Constant Field Values</a></dd></dl>
</li>
</ul>
<a name="TYPE_FLOAT64">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>TYPE_FLOAT64</h4>
<pre>public static final&nbsp;byte TYPE_FLOAT64</pre>
<div class="block">64-bit (eight byte) floating point data type.
 <p></div>
<dl><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../constant-values.html#com.rbnb.api.DataBlock.TYPE_FLOAT64">Constant Field Values</a></dd></dl>
</li>
</ul>
<a name="TYPE_STRING">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>TYPE_STRING</h4>
<pre>public static final&nbsp;byte TYPE_STRING</pre>
<div class="block">Character string data type.
 <p></div>
<dl><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../constant-values.html#com.rbnb.api.DataBlock.TYPE_STRING">Constant Field Values</a></dd></dl>
</li>
</ul>
<a name="TYPE_BYTEARRAY">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>TYPE_BYTEARRAY</h4>
<pre>public static final&nbsp;byte TYPE_BYTEARRAY</pre>
<div class="block">Byte array data type.
 <p></div>
<dl><dt><span class="strong">Since:</span></dt>
  <dd>V2.1</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../constant-values.html#com.rbnb.api.DataBlock.TYPE_BYTEARRAY">Constant Field Values</a></dd></dl>
</li>
</ul>
<a name="TYPE_USER">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>TYPE_USER</h4>
<pre>public static final&nbsp;byte TYPE_USER</pre>
<div class="block">User registration type.
 <p></div>
<dl><dt><span class="strong">Since:</span></dt>
  <dd>V2.5B4</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../constant-values.html#com.rbnb.api.DataBlock.TYPE_USER">Constant Field Values</a></dd></dl>
</li>
</ul>
</li>
</ul>
<!-- ========= CONSTRUCTOR DETAIL ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor_detail">
<!--   -->
</a>
<h3>Constructor Detail</h3>
<a name="DataBlock()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>DataBlock</h4>
<pre>public&nbsp;DataBlock()</pre>
<div class="block">Class constructor.
 <p></div>
<dl><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd></dl>
</li>
</ul>
<a name="DataBlock(java.lang.Object, int, int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>DataBlock</h4>
<pre>public&nbsp;DataBlock(java.lang.Object&nbsp;dataI,
         int&nbsp;ndataI,
         int&nbsp;ptsizeI)</pre>
<div class="block">Class constructor to build a <code>DataBlock</code> from the basic
 fields. 
 <p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>dataI</code> - the data payload.</dd><dd><code>ndataI</code> - the number of points.</dd><dd><code>ptsizeI</code> - the number of bytes in a single point.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code>java.lang.IllegalArgumentException</code> - thrown if the number of points or point size is not positive
                  or if they do not match the size of the data payload.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd></dl>
</li>
</ul>
<a name="DataBlock(java.lang.Object, int, int, byte, byte, boolean, int, int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>DataBlock</h4>
<pre>public&nbsp;DataBlock(java.lang.Object&nbsp;dataI,
         int&nbsp;ndataI,
         int&nbsp;ptsizeI,
         byte&nbsp;dtypeI,
         byte&nbsp;worderI,
         boolean&nbsp;indivflgI,
         int&nbsp;offsetI,
         int&nbsp;strideI)</pre>
<div class="block">Class constructor to build a <code>DataBlock</code> from the data
 payload and description from the input values.
 <p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>dataI</code> - the data payload.</dd><dd><code>ndataI</code> - the number of points.</dd><dd><code>ptsizeI</code> - the number of bytes in a single point.</dd><dd><code>dtypeI</code> - the type of data.</dd><dd><code>worderI</code> - the word order of the data.</dd><dd><code>indivflgI</code> - are points are individually accessible?</dd><dd><code>offsetI</code> - the offset in bytes to the first point.</dd><dd><code>strideI</code> - the stride in bytes to the next point.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code>java.lang.IllegalArgumentException</code> - thrown if:
                  <p><ul>
                  <li>the number of points is not positive,</li>
                  <li>the point size is not positive,</li>
                  <li>the offset is not 0 or positive,</li>
                  <li>the stride is not 0 or positive,</li>
                  <li>the number of points or point size does not match the
                      size of the data payload,</li>
                  <li>the offset is non-zero and the data payload is not
                      null,</li>
                  <li>the stride is non-zero and not equal to the point size
                      and the data payload is not null, or</li>
                  <li>the data type does not match the point size or data
                      payload type.</li>
                  </ul></dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/api/DataBlock.html#getData()"><code>getData()</code></a>, 
<a href="../../../com/rbnb/api/DataBlock.html#getDtype()"><code>getDtype()</code></a>, 
<a href="../../../com/rbnb/api/DataBlock.html#getIndivFlg()"><code>getIndivFlg()</code></a>, 
<a href="../../../com/rbnb/api/DataBlock.html#getNpts()"><code>getNpts()</code></a>, 
<a href="../../../com/rbnb/api/DataBlock.html#getOffset()"><code>getOffset()</code></a>, 
<a href="../../../com/rbnb/api/DataBlock.html#getPtsize()"><code>getPtsize()</code></a>, 
<a href="../../../com/rbnb/api/DataBlock.html#getStride()"><code>getStride()</code></a></dd></dl>
</li>
</ul>
<a name="DataBlock(java.lang.Object, int, int, byte, java.lang.String, byte, boolean, int, int)">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>DataBlock</h4>
<pre>public&nbsp;DataBlock(java.lang.Object&nbsp;dataI,
         int&nbsp;ndataI,
         int&nbsp;ptsizeI,
         byte&nbsp;dtypeI,
         java.lang.String&nbsp;mimeTypeI,
         byte&nbsp;worderI,
         boolean&nbsp;indivflgI,
         int&nbsp;offsetI,
         int&nbsp;strideI)</pre>
<div class="block">Class constructor to build a <code>DataBlock</code> from the data
 payload and description from the input values.
 <p>
 This version handles MIME data.
 <p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>dataI</code> - the data payload.</dd><dd><code>ndataI</code> - the number of points.</dd><dd><code>ptsizeI</code> - the number of bytes in a single point.</dd><dd><code>dtypeI</code> - the type of data.</dd><dd><code>mimeTypeI</code> - the MIME type.</dd><dd><code>worderI</code> - the word order of the data.</dd><dd><code>indivflgI</code> - are points are individually accessible?</dd><dd><code>offsetI</code> - the offset in bytes to the first point.</dd><dd><code>strideI</code> - the stride in bytes to the next point.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code>java.lang.IllegalArgumentException</code> - thrown if:
                  <p><ul>
                  <li>the number of points is not positive,</li>
                  <li>the offset is not 0 or positive,</li>
                  <li>the stride is not 0 or positive,</li>
                  <li>the number of points does not match the size of the data
                      payload,</li>
                  <li>the offset is non-zero and the data payload is not
                      null,</li>
                  <li>the stride is non-zero and not equal to the point size
                      and the data payload is not null, or</li>
                  <li>the data type does not match the point size or data
                      payload type.</li>
                  </ul></dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/api/DataBlock.html#getData()"><code>getData()</code></a>, 
<a href="../../../com/rbnb/api/DataBlock.html#getDtype()"><code>getDtype()</code></a>, 
<a href="../../../com/rbnb/api/DataBlock.html#getIndivFlg()"><code>getIndivFlg()</code></a>, 
<a href="../../../com/rbnb/api/DataBlock.html#getMIMEType()"><code>getMIMEType()</code></a>, 
<a href="../../../com/rbnb/api/DataBlock.html#getNpts()"><code>getNpts()</code></a>, 
<a href="../../../com/rbnb/api/DataBlock.html#getOffset()"><code>getOffset()</code></a>, 
<a href="../../../com/rbnb/api/DataBlock.html#getStride()"><code>getStride()</code></a></dd></dl>
</li>
</ul>
</li>
</ul>
<!-- ============ METHOD DETAIL ========== -->
<ul class="blockList">
<li class="blockList"><a name="method_detail">
<!--   -->
</a>
<h3>Method Detail</h3>
<a name="addData(java.lang.Object, int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>addData</h4>
<pre>public final&nbsp;void&nbsp;addData(java.lang.Object&nbsp;dataI,
           int&nbsp;nPtsI)</pre>
<div class="block">Adds more data.
 <p>
 This method adds the additional data as a new element of the data
 vector. There must already be data in the vector.
 <p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>dataI</code> - the data to add.</dd><dd><code>nPtsI</code> - the number of additional points.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd></dl>
</li>
</ul>
<a name="clone()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>clone</h4>
<pre>public final&nbsp;java.lang.Object&nbsp;clone()</pre>
<div class="block">Clones this <code>DataBlock</code>.
 <p>
 This method clones the data reference and payload.
 <p></div>
<dl><dt><span class="strong">Returns:</span></dt><dd>the clone.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd></dl>
</li>
</ul>
<a name="extractData(com.rbnb.api.DataBlock)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>extractData</h4>
<pre>public final&nbsp;java.lang.Object&nbsp;extractData(<a href="../../../com/rbnb/api/DataBlock.html" title="class in com.rbnb.api">DataBlock</a>&nbsp;dRefI)</pre>
<div class="block">Extracts data from this data pool for the input <code>DataBlock</code>.
 <p>
 This method supports extracting from byte arrays in all cases and from
 other primitive types so long as the extraction doesn't change the type.
 <p>
 When extracting from an array of bytes or from an vector of arrays of
 bytes, the method creates an output byte array and fills it in using
 <code>System.arraycopy</code>.
 <p>
 When extracting from an array of some other primitive type, the method
 creates an output array of that data type and fills it in using <code>
 System.arraycopy</code>.
 <p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>dRefI</code> - the <code>DataReference</code> (<code>DataBlock</code>).</dd>
<dt><span class="strong">Returns:</span></dt><dd>the extracted data.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code>java.lang.IllegalStateException</code> - thrown if there is a mismatch between this data pool and the
                  the <code>DataReference</code>.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd></dl>
</li>
</ul>
<a name="getData()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getData</h4>
<pre>public final&nbsp;java.util.Vector&nbsp;getData()</pre>
<div class="block">Gets the data payload.
 <p>
 The data payload is a <code>java.util.Vector</code> containing either:
 <p><ul>
 <li>A single array of primitives (shorts or floats, etc.), or</li>
 <li>One byte array per data point.</li>
 </ul><p></div>
<dl><dt><span class="strong">Returns:</span></dt><dd>the data payload.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/api/DataBlock.html#setData(java.lang.Object)"><code>setData(Object)</code></a></dd></dl>
</li>
</ul>
<a name="getDtype()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getDtype</h4>
<pre>public final&nbsp;byte&nbsp;getDtype()</pre>
<div class="block">Gets the type of data.
 <p></div>
<dl><dt><span class="strong">Returns:</span></dt><dd>the type of data.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/api/DataBlock.html#setDtype(byte)"><code>setDtype(byte)</code></a></dd></dl>
</li>
</ul>
<a name="getIndivFlg()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getIndivFlg</h4>
<pre>public final&nbsp;boolean&nbsp;getIndivFlg()</pre>
<div class="block">Gets the indivisible flag.
 <p></div>
<dl><dt><span class="strong">Returns:</span></dt><dd>individual points are not accessible?</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/api/DataBlock.html#setIndivFlg(boolean)"><code>setIndivFlg(boolean)</code></a></dd></dl>
</li>
</ul>
<a name="getMIMEType()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getMIMEType</h4>
<pre>public final&nbsp;java.lang.String&nbsp;getMIMEType()</pre>
<div class="block">Gets the MIME type.
 <p></div>
<dl><dt><span class="strong">Returns:</span></dt><dd>the MIME type.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/api/DataBlock.html#setMIMEType(java.lang.String)"><code>setMIMEType(String)</code></a></dd></dl>
</li>
</ul>
<a name="getNpts()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getNpts</h4>
<pre>public final&nbsp;int&nbsp;getNpts()</pre>
<div class="block">Gets the number of points.
 <p></div>
<dl><dt><span class="strong">Returns:</span></dt><dd>the number of points.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/api/DataBlock.html#setNpts(int)"><code>setNpts(int)</code></a></dd></dl>
</li>
</ul>
<a name="getOffset()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getOffset</h4>
<pre>public final&nbsp;int&nbsp;getOffset()</pre>
<div class="block">Gets the number of bytes to the first point.
 <p></div>
<dl><dt><span class="strong">Returns:</span></dt><dd>the number of bytes to the first point.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/api/DataBlock.html#setOffset(int)"><code>setOffset(int)</code></a>, 
<a href="../../../com/rbnb/api/DataBlock.html#setOffsetStride(int, int)"><code>setOffsetStride(int,int)</code></a></dd></dl>
</li>
</ul>
<a name="getPtsize()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getPtsize</h4>
<pre>public final&nbsp;int&nbsp;getPtsize()</pre>
<div class="block">Gets the size of a point in bytes.
 <p></div>
<dl><dt><span class="strong">Returns:</span></dt><dd>the point size in bytes.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/api/DataBlock.html#setPtsize(int)"><code>setPtsize(int)</code></a></dd></dl>
</li>
</ul>
<a name="getStride()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getStride</h4>
<pre>public final&nbsp;int&nbsp;getStride()</pre>
<div class="block">Gets the number of bytes to the next point.
 <p></div>
<dl><dt><span class="strong">Returns:</span></dt><dd>the number of bytes to the next point.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/api/DataBlock.html#setStride(int)"><code>setStride(int)</code></a></dd></dl>
</li>
</ul>
<a name="getWorder()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getWorder</h4>
<pre>public final&nbsp;byte&nbsp;getWorder()</pre>
<div class="block">Gets the order of bytes within a point.
 <p></div>
<dl><dt><span class="strong">Returns:</span></dt><dd>the word order.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/api/DataBlock.html#setWorder(byte)"><code>setWorder(byte)</code></a></dd></dl>
</li>
</ul>
<a name="nullify()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>nullify</h4>
<pre>public final&nbsp;void&nbsp;nullify()</pre>
<div class="block">Nullifies this <code>DataBlock</code>.
 <p>
 This method ensures that all pointers in this <code>DataBlock</code>
 are cleared, reducing the effort needed by the garbage collector to
 clean it up.
 <p></div>
<dl><dt><span class="strong">Since:</span></dt>
  <dd>V2.2</dd></dl>
</li>
</ul>
<a name="set(java.lang.Object, int, int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>set</h4>
<pre>public final&nbsp;void&nbsp;set(java.lang.Object&nbsp;dataI,
       int&nbsp;ndataI,
       int&nbsp;ptsizeI)</pre>
<div class="block">Sets the data payload and description using basic values.
 <p>
 The extended <code>DataReference</code> values are defaulted as follows:
 <p>
 <ul>
 <li><code>dtype</code> is set to <code>DataBlock.UNKNOWN</code>,</li>
 <li><code>worder</code> is set to <code>DataBlock.UNKNOWN</code>,
 </li>
 <li><code>indivflg</code> is set to false,</li>
 <li><code>offset</code> is set to 0, and</li>
 <li><code>stride</code> is set to <code>ptsizeI</code>.</li></ul>
 <p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>dataI</code> - the data payload.</dd><dd><code>ndataI</code> - the number of points.</dd><dd><code>ptsizeI</code> - the number of bytes in a single point.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code>java.lang.IllegalArgumentException</code> - thrown if the number of points or point size are not
                  positive or if they do not match the size of the data
                  payload.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/api/DataBlock.html#getData()"><code>getData()</code></a>, 
<a href="../../../com/rbnb/api/DataBlock.html#getNpts()"><code>getNpts()</code></a>, 
<a href="../../../com/rbnb/api/DataBlock.html#getPtsize()"><code>getPtsize()</code></a></dd></dl>
</li>
</ul>
<a name="set(java.lang.Object, int, int, byte, byte, boolean, int, int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>set</h4>
<pre>public final&nbsp;void&nbsp;set(java.lang.Object&nbsp;dataI,
       int&nbsp;ndataI,
       int&nbsp;ptsizeI,
       byte&nbsp;dtypeI,
       byte&nbsp;worderI,
       boolean&nbsp;indivflgI,
       int&nbsp;offsetI,
       int&nbsp;strideI)</pre>
<div class="block">Sets the data payload and description from the input values.
 <p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>dataI</code> - the data payload.</dd><dd><code>ndataI</code> - the number of points.</dd><dd><code>ptsizeI</code> - the number of bytes in a single point.</dd><dd><code>dtypeI</code> - the type of data.</dd><dd><code>worderI</code> - the word order of the data.</dd><dd><code>indivflgI</code> - are points are individually accessible?</dd><dd><code>offsetI</code> - the offset in bytes to the first point.</dd><dd><code>strideI</code> - the stride in bytes to the next point.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code>java.lang.IllegalArgumentException</code> - thrown if:
                  <p><ul>
                  <li> the number of points is not positive,</li>
                  <li> the point size is not positive,</li>
                  <li> the offset is not 0 or positive,</li>
                  <li> the stride is not 0 or positive,</li>
                  <li> the number of points or point size does not match the
                       size of the data payload,</li>
                  <li> the offset is non-zero and the data payload is not
                       null,</li>
                  <li> the stride is non-zero and not equal to the point size
                       and the data payload is not null,</li>
                  <li> the data type does not match the point size or data
                       payload type.</li>
                  </ul></dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/api/DataBlock.html#getData()"><code>getData()</code></a>, 
<a href="../../../com/rbnb/api/DataBlock.html#getDtype()"><code>getDtype()</code></a>, 
<a href="../../../com/rbnb/api/DataBlock.html#getIndivFlg()"><code>getIndivFlg()</code></a>, 
<a href="../../../com/rbnb/api/DataBlock.html#getNpts()"><code>getNpts()</code></a>, 
<a href="../../../com/rbnb/api/DataBlock.html#getOffset()"><code>getOffset()</code></a>, 
<a href="../../../com/rbnb/api/DataBlock.html#getPtsize()"><code>getPtsize()</code></a>, 
<a href="../../../com/rbnb/api/DataBlock.html#getStride()"><code>getStride()</code></a></dd></dl>
</li>
</ul>
<a name="set(java.lang.Object, int, int, byte, java.lang.String, byte, boolean, int, int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>set</h4>
<pre>public final&nbsp;void&nbsp;set(java.lang.Object&nbsp;dataI,
       int&nbsp;ndataI,
       int&nbsp;ptsizeI,
       byte&nbsp;dtypeI,
       java.lang.String&nbsp;mimeTypeI,
       byte&nbsp;worderI,
       boolean&nbsp;indivflgI,
       int&nbsp;offsetI,
       int&nbsp;strideI)</pre>
<div class="block">Sets the data payload and description from the input values.
 <p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>dataI</code> - the data payload.</dd><dd><code>ndataI</code> - the number of points.</dd><dd><code>ptsizeI</code> - the number of bytes in a single point.</dd><dd><code>dtypeI</code> - the type of data.</dd><dd><code>mimeTypeI</code> - the MIME type.</dd><dd><code>worderI</code> - the word order of the data.</dd><dd><code>indivflgI</code> - are points are individually accessible?</dd><dd><code>offsetI</code> - the offset in bytes to the first point.</dd><dd><code>strideI</code> - the stride in bytes to the next point.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code>java.lang.IllegalArgumentException</code> - thrown if:
                  <p><ul>
                  <li> the number of points is not positive,</li>
                  <li> the point size is not positive,</li>
                  <li> the offset is not 0 or positive,</li>
                  <li> the stride is not 0 or positive,</li>
                  <li> the number of points or point size does not match the
                       size of the data payload,</li>
                  <li> the offset is non-zero and the data payload is not
                       null,</li>
                  <li> the stride is non-zero and not equal to the point size
                       and the data payload is not null,</li>
                  <li> the data type does not match the point size or data
                       payload type.</li>
                  </ul></dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/api/DataBlock.html#getData()"><code>getData()</code></a>, 
<a href="../../../com/rbnb/api/DataBlock.html#getDtype()"><code>getDtype()</code></a>, 
<a href="../../../com/rbnb/api/DataBlock.html#getIndivFlg()"><code>getIndivFlg()</code></a>, 
<a href="../../../com/rbnb/api/DataBlock.html#getNpts()"><code>getNpts()</code></a>, 
<a href="../../../com/rbnb/api/DataBlock.html#getOffset()"><code>getOffset()</code></a>, 
<a href="../../../com/rbnb/api/DataBlock.html#getPtsize()"><code>getPtsize()</code></a>, 
<a href="../../../com/rbnb/api/DataBlock.html#getStride()"><code>getStride()</code></a></dd></dl>
</li>
</ul>
<a name="setData(java.lang.Object)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setData</h4>
<pre>public final&nbsp;void&nbsp;setData(java.lang.Object&nbsp;dataI)</pre>
<div class="block">Sets the data payload.
 <p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>dataI</code> - the data payload.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/api/DataBlock.html#getData()"><code>getData()</code></a></dd></dl>
</li>
</ul>
<a name="setDtype(byte)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setDtype</h4>
<pre>public final&nbsp;void&nbsp;setDtype(byte&nbsp;dtypeI)</pre>
<div class="block">Sets the type of data.
 <p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>dtypeI</code> - the type of data.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code>java.lang.IllegalArgumentException</code> - thrown if the data type doesn't match the point size or the
                  type of the data payload.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/api/DataBlock.html#getDtype()"><code>getDtype()</code></a></dd></dl>
</li>
</ul>
<a name="setIndivFlg(boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setIndivFlg</h4>
<pre>public final&nbsp;void&nbsp;setIndivFlg(boolean&nbsp;indivflgI)</pre>
<div class="block">Sets the indivisible flag.
 <p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>indivflgI</code> - individual points are not accessible?</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/api/DataBlock.html#getIndivFlg()"><code>getIndivFlg()</code></a></dd></dl>
</li>
</ul>
<a name="setMIMEType(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setMIMEType</h4>
<pre>public final&nbsp;void&nbsp;setMIMEType(java.lang.String&nbsp;mimeTypeI)</pre>
<div class="block">Sets the MIME type.
 <p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>mimeTypeI</code> - the MIME type.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/api/DataBlock.html#getMIMEType()"><code>getMIMEType()</code></a></dd></dl>
</li>
</ul>
<a name="setNpts(int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setNpts</h4>
<pre>public final&nbsp;void&nbsp;setNpts(int&nbsp;nptsI)</pre>
<div class="block">Sets the number of points.
 <p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>nptsI</code> - the number of points.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/api/DataBlock.html#getNpts()"><code>getNpts()</code></a></dd></dl>
</li>
</ul>
<a name="setOffset(int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setOffset</h4>
<pre>public final&nbsp;void&nbsp;setOffset(int&nbsp;offsetI)</pre>
<div class="block">Sets the number of bytes to the first point.
 <p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>offsetI</code> - the number of bytes to the first point.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code>java.lang.IllegalArgumentException</code> - thrown if the offset is negative or if there is a data
                  payload.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/api/DataBlock.html#getOffset()"><code>getOffset()</code></a>, 
<a href="../../../com/rbnb/api/DataBlock.html#setOffsetStride(int, int)"><code>setOffsetStride(int,int)</code></a></dd></dl>
</li>
</ul>
<a name="setOffsetStride(int, int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setOffsetStride</h4>
<pre>public final&nbsp;void&nbsp;setOffsetStride(int&nbsp;offsetI,
                   int&nbsp;strideI)</pre>
<div class="block">Sets the offset in bytes to the start of the first point and the
 stride in bytes between points.
 <p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>offsetI</code> - The number of bytes to the first point.</dd><dd><code>strideI</code> - The number of bytes between points.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code>java.lang.IllegalArgumentException</code> - thrown if the offset is negative, the stride is nnegative,
                  or if there is a data payload.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/api/DataBlock.html#getOffset()"><code>getOffset()</code></a>, 
<a href="../../../com/rbnb/api/DataBlock.html#getStride()"><code>getStride()</code></a>, 
<a href="../../../com/rbnb/api/DataBlock.html#setOffset(int)"><code>setOffset(int)</code></a>, 
<a href="../../../com/rbnb/api/DataBlock.html#setStride(int)"><code>setStride(int)</code></a></dd></dl>
</li>
</ul>
<a name="setPtsize(int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setPtsize</h4>
<pre>public final&nbsp;void&nbsp;setPtsize(int&nbsp;ptsizeI)</pre>
<div class="block">Sets the size of a point in bytes.
 <p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>ptsizeI</code> - the point size in bytes.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/api/DataBlock.html#getPtsize()"><code>getPtsize()</code></a></dd></dl>
</li>
</ul>
<a name="setStride(int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setStride</h4>
<pre>public final&nbsp;void&nbsp;setStride(int&nbsp;strideI)</pre>
<div class="block">Sets the number of bytes to the next point.
 <p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>strideI</code> - the number of bytes to the next point.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code>java.lang.IllegalArgumentException</code> - thrown if the stride is negative or if there is a data
                  payload and the stride is non-zero and not equal to the point
                  size.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/api/DataBlock.html#getStride()"><code>getStride()</code></a>, 
<a href="../../../com/rbnb/api/DataBlock.html#setOffsetStride(int, int)"><code>setOffsetStride(int,int)</code></a></dd></dl>
</li>
</ul>
<a name="setWorder(byte)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setWorder</h4>
<pre>public final&nbsp;void&nbsp;setWorder(byte&nbsp;worderI)</pre>
<div class="block">Sets the order of bytes within a point.
 <p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>worderI</code> - the word order.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code>java.lang.IllegalArgumentException</code> - thrown if the word order is not a legal value.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/api/DataBlock.html#getWorder()"><code>getWorder()</code></a></dd></dl>
</li>
</ul>
<a name="toString()">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>toString</h4>
<pre>public final&nbsp;java.lang.String&nbsp;toString()</pre>
<div class="block">Gets a displayable string representation of this <code>DataBlock</code>.
 <p></div>
<dl>
<dt><strong>Overrides:</strong></dt>
<dd><code>toString</code>&nbsp;in class&nbsp;<code>java.lang.Object</code></dd>
<dt><span class="strong">Returns:</span></dt><dd>the string representation.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd></dl>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
</div>
<!-- ========= END OF CLASS DATA ========= -->
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a name="navbar_bottom">
<!--   -->
</a><a href="#skip-navbar_bottom" title="Skip navigation links"></a><a name="navbar_bottom_firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/DataBlock.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../index-files/index-1.html">Index</a></li>
<li><a href="../../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../../../com/rbnb/api/DataArray.html" title="class in com.rbnb.api"><span class="strong">Prev Class</span></a></li>
<li><a href="../../../com/rbnb/api/DataRequest.html" title="class in com.rbnb.api"><span class="strong">Next Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../../../index.html?com/rbnb/api/DataBlock.html" target="_top">Frames</a></li>
<li><a href="DataBlock.html" target="_top">No Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="../../../allclasses-noframe.html">All Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li><a href="#field_summary">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor_summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li><a href="#field_detail">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor_detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_detail">Method</a></li>
</ul>
</div>
<a name="skip-navbar_bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</body>
</html>
