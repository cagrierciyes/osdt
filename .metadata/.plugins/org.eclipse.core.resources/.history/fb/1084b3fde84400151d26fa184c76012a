<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- NewPage -->
<html lang="en">
<head>
<!-- Generated by javadoc (version 1.7.0_02) on Tue Feb 21 13:58:18 PST 2012 -->
<title>Sink</title>
<meta name="date" content="2012-02-21">
<link rel="stylesheet" type="text/css" href="../../../stylesheet.css" title="Style">
</head>
<body>
<script type="text/javascript"><!--
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="Sink";
    }
//-->
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a name="navbar_top">
<!--   -->
</a><a href="#skip-navbar_top" title="Skip navigation links"></a><a name="navbar_top_firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/Sink.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../index-files/index-1.html">Index</a></li>
<li><a href="../../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../../../com/rbnb/sapi/SAPIException.html" title="class in com.rbnb.sapi"><span class="strong">Prev Class</span></a></li>
<li><a href="../../../com/rbnb/sapi/Source.html" title="class in com.rbnb.sapi"><span class="strong">Next Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../../../index.html?com/rbnb/sapi/Sink.html" target="_top">Frames</a></li>
<li><a href="Sink.html" target="_top">No Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../../../allclasses-noframe.html">All Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor_summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor_detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_detail">Method</a></li>
</ul>
</div>
<a name="skip-navbar_top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
<!-- ======== START OF CLASS DATA ======== -->
<div class="header">
<div class="subTitle">com.rbnb.sapi</div>
<h2 title="Class Sink" class="title">Class Sink</h2>
</div>
<div class="contentContainer">
<ul class="inheritance">
<li>java.lang.Object</li>
<li>
<ul class="inheritance">
<li><a href="../../../com/rbnb/sapi/Client.html" title="class in com.rbnb.sapi">com.rbnb.sapi.Client</a></li>
<li>
<ul class="inheritance">
<li>com.rbnb.sapi.Sink</li>
</ul>
</li>
</ul>
</li>
</ul>
<div class="description">
<ul class="blockList">
<li class="blockList">
<dl>
<dt>All Implemented Interfaces:</dt>
<dd>java.io.Serializable</dd>
</dl>
<hr>
<br>
<pre>public class <span class="strong">Sink</span>
extends <a href="../../../com/rbnb/sapi/Client.html" title="class in com.rbnb.sapi">Client</a></pre>
<div class="block">A simple data sink for RBNB servers.
 This class is designed to present a simple interface for pulling data
  from RBNB servers, via the RMap API.
 <p>
 A data sink client has the following tasks: 
 <ol>
 <li>Build a channel request with <a href="../../../com/rbnb/sapi/ChannelMap.html#Add(java.lang.String)"><code>ChannelMap.Add(String)</code></a>. </li>
 <li>Select a sink mode, using <a href="../../../com/rbnb/sapi/Sink.html#Subscribe(com.rbnb.sapi.ChannelMap)"><code>Subscribe(ChannelMap)</code></a>, 
    <a href="../../../com/rbnb/sapi/Sink.html#Monitor(com.rbnb.sapi.ChannelMap, int)"><code>Monitor(ChannelMap,int)</code></a>,
    or <a href="../../../com/rbnb/sapi/Sink.html#Request(com.rbnb.sapi.ChannelMap, double, double, java.lang.String)"><code>Request(ChannelMap,double,double,String timeRef)</code></a>.</li>
 <li><a href="../../../com/rbnb/sapi/Sink.html#Fetch(long, com.rbnb.sapi.ChannelMap)"><code>Fetch(long,ChannelMap)</code></a> data from RBNB server. </li>
 <li>Extract data and time from API buffers, using the various
    GetData functions, such as <a href="../../../com/rbnb/sapi/ChannelMap.html#GetData(int)"><code>ChannelMap.GetData(int)</code></a>. </li>
 <li>Repeat step 3 as desired for Subscribe and Monitor, or 2 and 3 for
    Request mode. </li>
 </ol>
 <p></div>
<dl><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">Version:</span></dt>
  <dd>08/19/2004</dd>
<dt><span class="strong">Author:</span></dt>
  <dd>WHF</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../serialized-form.html#com.rbnb.sapi.Sink">Serialized Form</a></dd></dl>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">
<!-- ======== CONSTRUCTOR SUMMARY ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor_summary">
<!--   -->
</a>
<h3>Constructor Summary</h3>
<table class="overviewSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colOne" scope="col">Constructor and Description</th>
</tr>
<tr class="altColor">
<td class="colOne"><code><strong><a href="../../../com/rbnb/sapi/Sink.html#Sink()">Sink</a></strong>()</code>
<div class="block">Default constructor.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colOne"><code><strong><a href="../../../com/rbnb/sapi/Sink.html#Sink(int, java.lang.String, int)">Sink</a></strong>(int&nbsp;cacheSize,
    java.lang.String&nbsp;archiveMode,
    int&nbsp;archiveSize)</code>
<div class="block"><strong>Deprecated.</strong>&nbsp;
<div class="block"><i>This constructor calls <a href="../../../com/rbnb/sapi/Sink.html#Sink()"><code>Sink()</code></a> instead, since caching
   and archiving of requests is not supported by the server.</i></div>
</div>
</td>
</tr>
</table>
</li>
</ul>
<!-- ========== METHOD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="method_summary">
<!--   -->
</a>
<h3>Method Summary</h3>
<table class="overviewSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
<caption><span>Methods</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Method and Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>long</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/sapi/Sink.html#BytesTransferred()">BytesTransferred</a></strong>()</code>
<div class="block">Reports the total number of bytes read and written by this Client.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code><a href="../../../com/rbnb/sapi/ChannelMap.html" title="class in com.rbnb.sapi">ChannelMap</a></code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/sapi/Sink.html#Fetch(long)">Fetch</a></strong>(long&nbsp;blockTimeout)</code>
<div class="block">Obtains the data and time values for the set of channels
  added via <a href="../../../com/rbnb/sapi/ChannelMap.html#Add(java.lang.String)"><code>ChannelMap.Add(java.lang.String)</code></a></code> and stores them in 
  a newly created <code>ChannelMap</code>.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code><a href="../../../com/rbnb/sapi/ChannelMap.html" title="class in com.rbnb.sapi">ChannelMap</a></code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/sapi/Sink.html#Fetch(long, com.rbnb.sapi.ChannelMap)">Fetch</a></strong>(long&nbsp;blockTimeout,
     <a href="../../../com/rbnb/sapi/ChannelMap.html" title="class in com.rbnb.sapi">ChannelMap</a>&nbsp;cm)</code>
<div class="block">Obtains the data and time values for the set of channels
  added via <a href="../../../com/rbnb/sapi/ChannelMap.html#Add(java.lang.String)"><code>ChannelMap.Add(java.lang.String)</code></a></code> and stores them in 
  the <code>ChannelMap</code> you provide.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/sapi/Sink.html#Monitor(com.rbnb.sapi.ChannelMap, int)">Monitor</a></strong>(<a href="../../../com/rbnb/sapi/ChannelMap.html" title="class in com.rbnb.sapi">ChannelMap</a>&nbsp;cm,
       int&nbsp;gapControl)</code>
<div class="block">Similar to Subscribe, but allows for continuous frames of data
  without gaps.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/sapi/Sink.html#Request(com.rbnb.sapi.ChannelMap, double, double, java.lang.String)">Request</a></strong>(<a href="../../../com/rbnb/sapi/ChannelMap.html" title="class in com.rbnb.sapi">ChannelMap</a>&nbsp;cm,
       double&nbsp;start,
       double&nbsp;duration,
       java.lang.String&nbsp;reference)</code>
<div class="block">Initiates a request for a specific time slice of data; the data may 
  then be extracted with <code>Fetch()</code>.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/sapi/Sink.html#Request(com.rbnb.sapi.ChannelMap, double, double, java.lang.String, boolean)">Request</a></strong>(<a href="../../../com/rbnb/sapi/ChannelMap.html" title="class in com.rbnb.sapi">ChannelMap</a>&nbsp;cm,
       double&nbsp;start,
       double&nbsp;duration,
       java.lang.String&nbsp;timeRef,
       boolean&nbsp;fetchByFrame)</code>
<div class="block"><strong>Deprecated.</strong>&nbsp;
<div class="block"><i>Support for 
   requests by frame has been removed from the API.  Please use
         <a href="../../../com/rbnb/sapi/Sink.html#Request(com.rbnb.sapi.ChannelMap, double, double, java.lang.String)"><code>Request(ChannelMap,double,double,String)</code></a>.
  This method is only here for binary compatibility; calling it throws
  a SAPIException.</i></div>
</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/sapi/Sink.html#Request(com.rbnb.sapi.ChannelMap, double, double, java.lang.String, int, double, boolean)">Request</a></strong>(<a href="../../../com/rbnb/sapi/ChannelMap.html" title="class in com.rbnb.sapi">ChannelMap</a>&nbsp;cm,
       double&nbsp;start,
       double&nbsp;duration,
       java.lang.String&nbsp;timeRef,
       int&nbsp;repeatCount,
       double&nbsp;repeatInterval,
       boolean&nbsp;fetchByFrame)</code>
<div class="block"><strong>Deprecated.</strong>&nbsp;
<div class="block"><i>Please use <a href="../../../com/rbnb/sapi/Sink.html#Request(com.rbnb.sapi.ChannelMap, double, double, java.lang.String)"><code>Request(ChannelMap,double,double,
	String)</code></a> instead.</i></div>
</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/sapi/Sink.html#Request(com.rbnb.sapi.ChannelMap, double, double, java.lang.String, com.rbnb.sapi.RequestOptions)">Request</a></strong>(<a href="../../../com/rbnb/sapi/ChannelMap.html" title="class in com.rbnb.sapi">ChannelMap</a>&nbsp;cm,
       double&nbsp;start,
       double&nbsp;duration,
       java.lang.String&nbsp;reference,
       <a href="../../../com/rbnb/sapi/RequestOptions.html" title="class in com.rbnb.sapi">RequestOptions</a>&nbsp;ro)</code>
<div class="block">Sends the specified <a href="../../../com/rbnb/sapi/RequestOptions.html" title="class in com.rbnb.sapi"><code>RequestOptions</code></a> object to the server
  before making the request.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/sapi/Sink.html#RequestFrame(com.rbnb.sapi.ChannelMap)">RequestFrame</a></strong>(<a href="../../../com/rbnb/sapi/ChannelMap.html" title="class in com.rbnb.sapi">ChannelMap</a>&nbsp;cm)</code>
<div class="block">Makes a request for the next new frame.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/sapi/Sink.html#RequestRegistration()">RequestRegistration</a></strong>()</code>
<div class="block">Sends a request for the current registration
  map of all channels on the server.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/sapi/Sink.html#RequestRegistration(com.rbnb.sapi.ChannelMap)">RequestRegistration</a></strong>(<a href="../../../com/rbnb/sapi/ChannelMap.html" title="class in com.rbnb.sapi">ChannelMap</a>&nbsp;requestMap)</code>
<div class="block">Sends a request to the server for the current registration
  map for the channels in the provided <code>ChannelMap</code>.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/sapi/Sink.html#Subscribe(com.rbnb.sapi.ChannelMap)">Subscribe</a></strong>(<a href="../../../com/rbnb/sapi/ChannelMap.html" title="class in com.rbnb.sapi">ChannelMap</a>&nbsp;cm)</code>
<div class="block">Makes a subscription for newest data with the server.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/sapi/Sink.html#Subscribe(com.rbnb.sapi.ChannelMap, double, double, java.lang.String)">Subscribe</a></strong>(<a href="../../../com/rbnb/sapi/ChannelMap.html" title="class in com.rbnb.sapi">ChannelMap</a>&nbsp;channelMap,
         double&nbsp;startTime,
         double&nbsp;duration,
         java.lang.String&nbsp;timeReference)</code>
<div class="block">Starts a continuous feed of data on the specified channels to this
 sink, for retrieval with <code>Fetch()</code>.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/sapi/Sink.html#Subscribe(com.rbnb.sapi.ChannelMap, java.lang.String)">Subscribe</a></strong>(<a href="../../../com/rbnb/sapi/ChannelMap.html" title="class in com.rbnb.sapi">ChannelMap</a>&nbsp;cm,
         java.lang.String&nbsp;timeReference)</code>
<div class="block"><strong>Deprecated.</strong>&nbsp;
<div class="block"><i>Please use <a href="../../../com/rbnb/sapi/Sink.html#Subscribe(com.rbnb.sapi.ChannelMap, double, double, java.lang.String)"><code>Subscribe(ChannelMap,double,double,String)</code></a> instead. 
 Subscription from oldest by frames can have problems reading from compressed archives.</i></div>
</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/sapi/Sink.html#Subscribe(com.rbnb.sapi.ChannelMap, java.lang.String, double)">Subscribe</a></strong>(<a href="../../../com/rbnb/sapi/ChannelMap.html" title="class in com.rbnb.sapi">ChannelMap</a>&nbsp;channelMap,
         java.lang.String&nbsp;timeReference,
         double&nbsp;duration)</code>
<div class="block"><strong>Deprecated.</strong>&nbsp;
<div class="block"><i>Please use <a href="../../../com/rbnb/sapi/Sink.html#Subscribe(com.rbnb.sapi.ChannelMap, double, double, java.lang.String)"><code>Subscribe(ChannelMap,double,double,String)</code></a> instead.  A start time
  of zero provides the functionality of this method for "newest" and 
  "oldest" start times.</i></div>
</div>
</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a name="methods_inherited_from_class_com.rbnb.sapi.Client">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;com.rbnb.sapi.<a href="../../../com/rbnb/sapi/Client.html" title="class in com.rbnb.sapi">Client</a></h3>
<code><a href="../../../com/rbnb/sapi/Client.html#CloseRBNBConnection()">CloseRBNBConnection</a>, <a href="../../../com/rbnb/sapi/Client.html#CloseRBNBConnection(boolean, boolean)">CloseRBNBConnection</a>, <a href="../../../com/rbnb/sapi/Client.html#GetArchiveMode()">GetArchiveMode</a>, <a href="../../../com/rbnb/sapi/Client.html#GetArchiveSize()">GetArchiveSize</a>, <a href="../../../com/rbnb/sapi/Client.html#GetCacheSize()">GetCacheSize</a>, <a href="../../../com/rbnb/sapi/Client.html#GetChannelList()">GetChannelList</a>, <a href="../../../com/rbnb/sapi/Client.html#GetChannelList(java.lang.String)">GetChannelList</a>, <a href="../../../com/rbnb/sapi/Client.html#GetClientName()">GetClientName</a>, <a href="../../../com/rbnb/sapi/Client.html#GetServerName()">GetServerName</a>, <a href="../../../com/rbnb/sapi/Client.html#OpenRBNBConnection()">OpenRBNBConnection</a>, <a href="../../../com/rbnb/sapi/Client.html#OpenRBNBConnection(java.lang.String, java.lang.String)">OpenRBNBConnection</a>, <a href="../../../com/rbnb/sapi/Client.html#OpenRBNBConnection(java.lang.String, java.lang.String, java.lang.String, java.lang.String)">OpenRBNBConnection</a>, <a href="../../../com/rbnb/sapi/Client.html#SetRingBuffer(int, java.lang.String, int)">SetRingBuffer</a>, <a href="../../../com/rbnb/sapi/Client.html#VerifyConnection()">VerifyConnection</a></code></li>
</ul>
<ul class="blockList">
<li class="blockList"><a name="methods_inherited_from_class_java.lang.Object">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
<code>equals, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">
<!-- ========= CONSTRUCTOR DETAIL ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor_detail">
<!--   -->
</a>
<h3>Constructor Detail</h3>
<a name="Sink()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>Sink</h4>
<pre>public&nbsp;Sink()</pre>
<div class="block">Default constructor.  Initializes default values of the parameters:
 <ul><li><code>cacheSize</code> = 1 frame</li>
 <li><code>archiveSize</code> = 0 frames (off) </li>
 </ul>
 <p></div>
<dl><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd></dl>
</li>
</ul>
<a name="Sink(int, java.lang.String, int)">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>Sink</h4>
<pre>public&nbsp;Sink(int&nbsp;cacheSize,
    java.lang.String&nbsp;archiveMode,
    int&nbsp;archiveSize)</pre>
<div class="block"><span class="strong">Deprecated.</span>&nbsp;<i>This constructor calls <a href="../../../com/rbnb/sapi/Sink.html#Sink()"><code>Sink()</code></a> instead, since caching
   and archiving of requests is not supported by the server.</i></div>
<div class="block">A convenience constructor which initializes values for the cache size,
  archive mode, and archive size.  Calls <a href="../../../com/rbnb/sapi/Client.html#SetRingBuffer(int, java.lang.String, int)"><code>(int, String, int) </code></a> with the specified options.
 <p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>cacheSize</code> - Size of the memory cache, in frames.</dd><dd><code>archiveMode</code> - The mode for the optional archive.  Should be one of the
   following: <ul>
  <li> "none"  - no Archive is made. </li>
  <li> "load"  - load an archive, but do not allow any further writing to it. </li>
  <li> "create" - create an archive. </li>
  <li> "append" - load an archive, but allow writing new data to it. </li>
 </ul></dd><dd><code>archiveSize</code> - The size of the desired archive, in frames.  Ignored except for
   "create" and "append".</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/sapi/Client.html#CloseRBNBConnection()"><code>Client.CloseRBNBConnection()</code></a>, 
<a href="../../../com/rbnb/sapi/Client.html#SetRingBuffer(int, java.lang.String, int)"><code>Client.SetRingBuffer(int,String,int)</code></a></dd></dl>
</li>
</ul>
</li>
</ul>
<!-- ============ METHOD DETAIL ========== -->
<ul class="blockList">
<li class="blockList"><a name="method_detail">
<!--   -->
</a>
<h3>Method Detail</h3>
<a name="BytesTransferred()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>BytesTransferred</h4>
<pre>public&nbsp;long&nbsp;BytesTransferred()</pre>
<div class="block"><strong>Description copied from class:&nbsp;<code><a href="../../../com/rbnb/sapi/Client.html#BytesTransferred()">Client</a></code></strong></div>
<div class="block">Reports the total number of bytes read and written by this Client. <p>
 <p></div>
<dl>
<dt><strong>Specified by:</strong></dt>
<dd><code><a href="../../../com/rbnb/sapi/Client.html#BytesTransferred()">BytesTransferred</a></code>&nbsp;in class&nbsp;<code><a href="../../../com/rbnb/sapi/Client.html" title="class in com.rbnb.sapi">Client</a></code></dd>
<dt><span class="strong">Returns:</span></dt><dd>The total number of bytes read and written.</dd></dl>
</li>
</ul>
<a name="Request(com.rbnb.sapi.ChannelMap, double, double, java.lang.String, int, double, boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>Request</h4>
<pre>public final&nbsp;void&nbsp;Request(<a href="../../../com/rbnb/sapi/ChannelMap.html" title="class in com.rbnb.sapi">ChannelMap</a>&nbsp;cm,
           double&nbsp;start,
           double&nbsp;duration,
           java.lang.String&nbsp;timeRef,
           int&nbsp;repeatCount,
           double&nbsp;repeatInterval,
           boolean&nbsp;fetchByFrame)
                   throws <a href="../../../com/rbnb/sapi/SAPIException.html" title="class in com.rbnb.sapi">SAPIException</a></pre>
<div class="block"><span class="strong">Deprecated.</span>&nbsp;<i>Please use <a href="../../../com/rbnb/sapi/Sink.html#Request(com.rbnb.sapi.ChannelMap, double, double, java.lang.String)"><code>Request(ChannelMap,double,double,
	String)</code></a> instead.</i></div>
<div class="block">Initiates a request for a specific time slice of data.
  The data may then be extracted with
  <code>Fetch()</code>.
 <p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>start</code> - The start time for the request.  If <code>fetchByFrame</code> is
  set, this is calculated in frames; otherwise, it is in seconds.</dd><dd><code>duration</code> - The duration of the request.  Again, its unit is seconds unless
  <code>fetchByFrame</code> is set.</dd><dd><code>timeRef</code> - One of "absolute", "newest", or "oldest".  Determines how
   the start parameter is interpreted.</dd><dd><code>repeatCount</code> - The number of times the request will be repeated automatically.</dd><dd><code>repeatInterval</code> - The multiple of duration which is used to advance each repeated
   request from the start time.</dd><dd><code>fetchByFrame</code> - If true, the time range is interpreted as frame
   indices.  All frames that match are returned in a consolidated 
   response.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code>java.lang.IllegalStateException</code> - If not connected.</dd>
<dd><code>java.lang.IllegalArgumentException</code> - If any parameters are illegal.</dd>
<dd><code><a href="../../../com/rbnb/sapi/SAPIException.html" title="class in com.rbnb.sapi">SAPIException</a></code></dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/sapi/Sink.html#Fetch(long, com.rbnb.sapi.ChannelMap)"><code>Fetch(long,ChannelMap)</code></a></dd></dl>
</li>
</ul>
<a name="Request(com.rbnb.sapi.ChannelMap, double, double, java.lang.String, boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>Request</h4>
<pre>public final&nbsp;void&nbsp;Request(<a href="../../../com/rbnb/sapi/ChannelMap.html" title="class in com.rbnb.sapi">ChannelMap</a>&nbsp;cm,
           double&nbsp;start,
           double&nbsp;duration,
           java.lang.String&nbsp;timeRef,
           boolean&nbsp;fetchByFrame)
                   throws <a href="../../../com/rbnb/sapi/SAPIException.html" title="class in com.rbnb.sapi">SAPIException</a></pre>
<div class="block"><span class="strong">Deprecated.</span>&nbsp;<i>Support for 
   requests by frame has been removed from the API.  Please use
         <a href="../../../com/rbnb/sapi/Sink.html#Request(com.rbnb.sapi.ChannelMap, double, double, java.lang.String)"><code>Request(ChannelMap,double,double,String)</code></a>.
  This method is only here for binary compatibility; calling it throws
  a SAPIException.</i></div>
<dl><dt><span class="strong">Throws:</span></dt>
<dd><code><a href="../../../com/rbnb/sapi/SAPIException.html" title="class in com.rbnb.sapi">SAPIException</a></code></dd></dl>
</li>
</ul>
<a name="Request(com.rbnb.sapi.ChannelMap, double, double, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>Request</h4>
<pre>public final&nbsp;void&nbsp;Request(<a href="../../../com/rbnb/sapi/ChannelMap.html" title="class in com.rbnb.sapi">ChannelMap</a>&nbsp;cm,
           double&nbsp;start,
           double&nbsp;duration,
           java.lang.String&nbsp;reference)
                   throws <a href="../../../com/rbnb/sapi/SAPIException.html" title="class in com.rbnb.sapi">SAPIException</a></pre>
<div class="block">Initiates a request for a specific time slice of data; the data may 
  then be extracted with <code>Fetch()</code>.  
 <p>The <code>reference</code> parameter determines the
  origin of the <code>start</code> parameter, and must be one of the
   following:
 <ul>
        <li>"absolute" -- The start parameter is absolute time from
        midnight, Jan 1st, 1970 UTC.</li>
        <li>"newest" -- The start parameter is measured from the 
        most recent data available in the server at the time this
        request is received.  Note that for this case, the start parameter
 actually represents the <strong>end</strong> of the duration, and 
 positive times proceed toward oldest data.  Thus if there is data
  at times 1, 2, and 3, Request(map, 1, 0, "newest") will return
  the data at time 2, while Request(map, -1, 2.5, "newest") will return
  the data at times 2 and 3.</li>
        <li>"oldest" -- As "newest", but relative to the oldest data.
        </li>
 <li>"aligned" -- As "newest", but rather than per channel, this
 is relative to the newest for all of the channels.
        </li>
        <li>"after" -- A combination between "absolute" and "newest",
                this flag causes the server to return the newest
                data available after the specified start time.  Unlike
                "newest", you do not have to request the data to 
                find out that you already have it.  Unlike "absolute",
                a gap may be inserted in the data to provide you with 
                the freshest data.</li>
        <li>"modified" -- Similar to "after", but attempts to return
        a <i>duration's</i> worth of data in a contiguous block.
        If the data is not available after the <code>start</code>
        time, it will be taken from before the start time.</li>
        <li>"next" - gets the data that immediately follows the time
        range specified.  This will skip over gaps.</li>
     <li>"previous" - get the data that immediately preceeds the
        time range specified.  This will skip over gaps.</li>
 </ul></p>
 <p>If registration and/or meta-data are desired, please use
        <a href="../../../com/rbnb/sapi/Sink.html#RequestRegistration(com.rbnb.sapi.ChannelMap)"><code>RequestRegistration(ChannelMap)</code></a>.  (As a convenience
        to PlugIn developers, this method will also accept
        "registration" as a reference, and will pass it through to
        the RequestRegistration method.</p>
 <p>The amount of data
  returned is determined by the <code>duration</code> parameter.
  A duration of zero represents a special case, where one single point
  is returned.  For the "newest", "oldest", and "absolute" time
  references, if an exact time match does not occur the point closest
  to the desired time <strong>in the direction of the origin</strong>
  is returned.
 <p>
 The way channel names are matched can be somewhat confusing.  There
 are two primary ways of specifying names:
 <p><ol>
    <li>Absolute names start with a leading slash, while</li>
    <li>Relative names do not have a leading slash.</li>
 </ol><p>
 There are two wildcards:
 <p><ol>
    <li>* means match anything within the current server at the
           current point in the request, and</li>
    <li>... means match anything within the current server from the
           current point in the request down.</li>
 </ol><p>
 Additionally, it is possible to move up using a relative request by
 specifying the name '../'.
 <p>
 Absolute names are matched by starting at the local server's
 representation of the root of the server hierarchy (termed a
 "RoutingMap", indicated by the leading slash).  Relative names are
 matched by starting with the children of the local server.
 <p>
 Consider the following hierarchy of servers:
 <p><dl>
    <dd>/<dl>
           <dd>AAA/<dl>
               <dd>[client handlers for AAA]
               <dd>BBB/<dl>
                   <dd>[client handlers for BBB]
                   <dd>CCC/<dl>
                       <dd>[client handlers for CCC]
                   </dl>
               </dl>
            </dl>
    </dl>
 </dl><p>
 This hierarchy has three servers.  The top level server AAA has a
 child named BBB and a grandchild named CCC.  At each level, there
 may be additional client handlers (for source, sink, and plugin
 connections).
 <p>
 Each server has its own routing map hierarchy that contains the
 part of the above hierarchy known to that server.  The hierarchy
 known to the AAA server, for example, is:
 <p><dl>
    <dd>/ - the routing map hierarchy root<dl>
           <dd>AAA/ - the local server<dl>
               <dd>[client handlers for AAA]
               <dd>BBB/ - representation of the child BBB server
           </dl>
    </dl>
 </dl><p>
 Note that this only goes down to the child BBB server.  AAA has no
 knowledge of any children of BBB.  The BBB server's known hierarchy
 is:
 <p><dl>
    <dd>/ - the routing map hierarchy root<dl>
           <dd>AAA/ - representation of the parent AAA server<dl>
               <dd>BBB/ - the local server<dl>
                   <dd>[client handlers for BBB]
                   <dd>CCC/ - representation of the child CCC server
               </dl>
           </dl>
    </dl>
 </dl><p>
 The BBB server knows about its parent AAA and its child CCC
 servers, but not their other children.
 <p>
 Some example requests and an explanation of how they are matched
 follows.  These examples use the preceeding hierarchy.
 <p>
 Absolute requests are the simplest to understand because they
 always produce the same answer, regardless of which server the
 request is sent to.  The difference is in the specifics of how the
 request is matched.  Consider the following three requests:
 <p><ol>
    <li>/AAA/...,</li>
    <li>/AAA/BBB/..., and</li>
    <li>/AAA/BBB/CCC/...</li>
 </ol><p>
 Each of these requests asks for the hierarchy known to and starting
 at a specific server.  For example, the request '/AAA/BBB/...'
 would return the following:
 <p><dl>
    <dd>/<dl>
           <dd>AAA/<dl>
               <dd>BBB/<dl>
                   <dd>[client handlers, except for plugins, for BBB
                        and their children
                   <dd>[plugins for BBB]
                   <dd>CCC/
               </dl>
           </dl>
    </dl>
 </dl><p>
 Neither plugins nor child servers of BBB are expanded because this
 information is not known to the BBB server.
 <p>
 If this request is sent to the BBB server, it answers the request
 directly out of its routing map hierarchy.  If the request is sent
 to either the AAA or CCC servers, they will match /AAA/BBB locally
 and then send the remainder ('...') as a relative request to the
 BBB server.
 <p>
 Relative requests depend on which server the request is sent to.
 They are matched starting with the children of the local server
 rather than at the top of the routing map.  For example, consider
 the request 'CCC/...'.  If this request is sent to the BBB server,
 it will find the child CCC server as a local child and then send
 the remainder ('...') to the CCC server as a relative request.
 <p>
 If, on the other hand, this request is sent to the AAA server, it
 will fail to match anything because the AAA server does not have a
 child named CCC.
 <p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>start</code> - The start time for the request in seconds.</dd><dd><code>duration</code> - The duration of the request, in seconds.</dd><dd><code>reference</code> - One of the options listed above.  Determines how the 
   start parameter is interpreted.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code><a href="../../../com/rbnb/sapi/SAPIException.html" title="class in com.rbnb.sapi">SAPIException</a></code> - If not connected.</dd>
<dd><code>java.lang.IllegalArgumentException</code> - If any parameters are illegal.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/sapi/Sink.html#Fetch(long, com.rbnb.sapi.ChannelMap)"><code>Fetch(long,ChannelMap)</code></a>, 
<a href="../../../com/rbnb/sapi/Sink.html#RequestRegistration(com.rbnb.sapi.ChannelMap)"><code>RequestRegistration(ChannelMap)</code></a></dd></dl>
</li>
</ul>
<a name="Request(com.rbnb.sapi.ChannelMap, double, double, java.lang.String, com.rbnb.sapi.RequestOptions)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>Request</h4>
<pre>public final&nbsp;void&nbsp;Request(<a href="../../../com/rbnb/sapi/ChannelMap.html" title="class in com.rbnb.sapi">ChannelMap</a>&nbsp;cm,
           double&nbsp;start,
           double&nbsp;duration,
           java.lang.String&nbsp;reference,
           <a href="../../../com/rbnb/sapi/RequestOptions.html" title="class in com.rbnb.sapi">RequestOptions</a>&nbsp;ro)
                   throws <a href="../../../com/rbnb/sapi/SAPIException.html" title="class in com.rbnb.sapi">SAPIException</a></pre>
<div class="block">Sends the specified <a href="../../../com/rbnb/sapi/RequestOptions.html" title="class in com.rbnb.sapi"><code>RequestOptions</code></a> object to the server
  before making the request.
 <p></div>
<dl><dt><span class="strong">Throws:</span></dt>
<dd><code><a href="../../../com/rbnb/sapi/SAPIException.html" title="class in com.rbnb.sapi">SAPIException</a></code></dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.1B4</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/sapi/Sink.html#Request(com.rbnb.sapi.ChannelMap, double, double, java.lang.String)"><code>Request(ChannelMap,double,double,String)</code></a></dd></dl>
</li>
</ul>
<a name="RequestRegistration()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>RequestRegistration</h4>
<pre>public final&nbsp;void&nbsp;RequestRegistration()
                               throws <a href="../../../com/rbnb/sapi/SAPIException.html" title="class in com.rbnb.sapi">SAPIException</a></pre>
<div class="block">Sends a request for the current registration
  map of all channels on the server.
 <p>Delegates to <a href="../../../com/rbnb/sapi/Sink.html#RequestRegistration(com.rbnb.sapi.ChannelMap)"><code>RequestRegistration(ChannelMap)</code></a> with 
  a null parameter.</div>
<dl><dt><span class="strong">Throws:</span></dt>
<dd><code><a href="../../../com/rbnb/sapi/SAPIException.html" title="class in com.rbnb.sapi">SAPIException</a></code></dd></dl>
</li>
</ul>
<a name="RequestRegistration(com.rbnb.sapi.ChannelMap)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>RequestRegistration</h4>
<pre>public final&nbsp;void&nbsp;RequestRegistration(<a href="../../../com/rbnb/sapi/ChannelMap.html" title="class in com.rbnb.sapi">ChannelMap</a>&nbsp;requestMap)
                               throws <a href="../../../com/rbnb/sapi/SAPIException.html" title="class in com.rbnb.sapi">SAPIException</a></pre>
<div class="block">Sends a request to the server for the current registration
  map for the channels in the provided <code>ChannelMap</code>.
  The registration map contains information such as channel names, 
  and the size, time range, and MIME type of channel data.
  If the input <code>ChannelMap</code> is empty or null, it 
 will be treated as if it were a request for "..." (all local channels).
 <p>The result of the request can be obtained using <a href="../../../com/rbnb/sapi/Sink.html#Fetch(long, com.rbnb.sapi.ChannelMap)"><code>Fetch(long, ChannelMap)</code></a>.  The result will also contain the 
  meta-data and time ranges for each requested channel.

 <p>You can use wildcards to match channels. Available wildcards and their meanings are:
 <ul><li>"*"  match all objects at this level</li>
 <li>"..."  match from here down recursively (but not across routing links or PlugIns)</li>
 <li>".."  up a level</li>
 </ul><p> To request registration maps from local and routed servers, use a <code>requestMap</code> 
 with one channel named as follows:
 <ul><li> Local channels:            "..."</li>
 <li>Parent channels:           "../..."</li>
 <li>Parent and local channels: "../&#42/..."</li>
 <li>Local and child channels:  "&#42/..."</li>
 </ul><p>Similarly, targeted requests could also be made using absolute paths, such as:
 <ul><li>Uncle&#39s children:       "/myparent/myuncle/..."</li>
 </ul>
 <p>Note that it is impossible to explicity request the registration of 
  all child servers and plugins with one request. This is by design, as
  such a request might be infinite. Instead of making large wildcard 
  requests, consider breaking them into one request per branch.
 <p>For example, consider a channel viewer application.  To present the
  initial view, the application might request first "/*", and get:</p>
  <ul><li>Child (Server)</li><li>FFT (PlugIn)</li><li>Data (Source)</li>
  </ul>
 <p>If the user is interested in the channels under the Child server,
  the application might then request "Child/*". This would reveal the
  first level of nodes under the child server. This minimal on-demand
  style of requests minimizes bandwidth and server load and ensures that
  if an error occurs, it is with the level in question and not some
  peer.</p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>requestMap</code> - The channels to obtain from the registration map,
  or a null or empty ChannelMap to obtain all.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code><a href="../../../com/rbnb/sapi/SAPIException.html" title="class in com.rbnb.sapi">SAPIException</a></code> - If not connected to a server or there
  is a problem with the connection.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/sapi/Sink.html#Fetch(long, com.rbnb.sapi.ChannelMap)"><code>Fetch(long,ChannelMap)</code></a></dd></dl>
</li>
</ul>
<a name="Monitor(com.rbnb.sapi.ChannelMap, int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>Monitor</h4>
<pre>public final&nbsp;void&nbsp;Monitor(<a href="../../../com/rbnb/sapi/ChannelMap.html" title="class in com.rbnb.sapi">ChannelMap</a>&nbsp;cm,
           int&nbsp;gapControl)
                   throws <a href="../../../com/rbnb/sapi/SAPIException.html" title="class in com.rbnb.sapi">SAPIException</a></pre>
<div class="block">Similar to Subscribe, but allows for continuous frames of data
  without gaps.
 <p>
 In this mode, the server will attempt to send the most recent
  data available.  If the client cannot maintain synchronicity,
  the server will omit some frames in an effort to keep the 
  client up to date.
 <p>
 <b>Note:</b> The gap control feature is currently not implemented.</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>gapControl</code> - Identifies the number of frames sent without gaps
        before a gap may be inserted to resynchronize this sink's output
        with the source.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code>java.lang.IllegalArgumentException</code> - If gapControl &#60; 0.</dd>
<dd><code><a href="../../../com/rbnb/sapi/SAPIException.html" title="class in com.rbnb.sapi">SAPIException</a></code> - If not connected or no channels have been 
                specified.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/sapi/Sink.html#Fetch(long, com.rbnb.sapi.ChannelMap)"><code>Fetch(long,ChannelMap)</code></a>, 
<a href="../../../com/rbnb/sapi/Sink.html#Subscribe(com.rbnb.sapi.ChannelMap)"><code>Subscribe(ChannelMap)</code></a></dd></dl>
</li>
</ul>
<a name="Subscribe(com.rbnb.sapi.ChannelMap)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>Subscribe</h4>
<pre>public final&nbsp;void&nbsp;Subscribe(<a href="../../../com/rbnb/sapi/ChannelMap.html" title="class in com.rbnb.sapi">ChannelMap</a>&nbsp;cm)
                     throws <a href="../../../com/rbnb/sapi/SAPIException.html" title="class in com.rbnb.sapi">SAPIException</a></pre>
<div class="block">Makes a subscription for newest data with the server.
  Effectively calls <a href="../../../com/rbnb/sapi/Sink.html#Subscribe(com.rbnb.sapi.ChannelMap, java.lang.String)"><code>Subscribe(ChannelMap, String)</code></a> with 
  "newest" as the time reference.
 <p></div>
<dl><dt><span class="strong">Throws:</span></dt>
<dd><code><a href="../../../com/rbnb/sapi/SAPIException.html" title="class in com.rbnb.sapi">SAPIException</a></code> - If not connected or no channels have 
  been specified.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/sapi/Sink.html#Fetch(long, com.rbnb.sapi.ChannelMap)"><code>Fetch(long,ChannelMap)</code></a></dd></dl>
</li>
</ul>
<a name="Subscribe(com.rbnb.sapi.ChannelMap, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>Subscribe</h4>
<pre>public final&nbsp;void&nbsp;Subscribe(<a href="../../../com/rbnb/sapi/ChannelMap.html" title="class in com.rbnb.sapi">ChannelMap</a>&nbsp;cm,
             java.lang.String&nbsp;timeReference)
                     throws <a href="../../../com/rbnb/sapi/SAPIException.html" title="class in com.rbnb.sapi">SAPIException</a></pre>
<div class="block"><span class="strong">Deprecated.</span>&nbsp;<i>Please use <a href="../../../com/rbnb/sapi/Sink.html#Subscribe(com.rbnb.sapi.ChannelMap, double, double, java.lang.String)"><code>Subscribe(ChannelMap,double,double,String)</code></a> instead. 
 Subscription from oldest by frames can have problems reading from compressed archives.</i></div>
<div class="block">Starts a continuous feed of data on the specified channels to this
  sink, for retrieval with <code>Fetch()</code>.
 <p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>timeReference</code> - One of "newest" or "oldest".</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code><a href="../../../com/rbnb/sapi/SAPIException.html" title="class in com.rbnb.sapi">SAPIException</a></code> - If not connected or no channels have been 
                specified.</dd>
<dd><code>java.lang.NullPointerException</code> - If timeReference is null.</dd>
<dd><code>java.lang.IllegalArgumentException</code> - If timeReference is illegal.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.1B4</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/sapi/Sink.html#Fetch(long, com.rbnb.sapi.ChannelMap)"><code>Fetch(long,ChannelMap)</code></a></dd></dl>
</li>
</ul>
<a name="Subscribe(com.rbnb.sapi.ChannelMap, java.lang.String, double)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>Subscribe</h4>
<pre>public final&nbsp;void&nbsp;Subscribe(<a href="../../../com/rbnb/sapi/ChannelMap.html" title="class in com.rbnb.sapi">ChannelMap</a>&nbsp;channelMap,
             java.lang.String&nbsp;timeReference,
             double&nbsp;duration)
                     throws <a href="../../../com/rbnb/sapi/SAPIException.html" title="class in com.rbnb.sapi">SAPIException</a></pre>
<div class="block"><span class="strong">Deprecated.</span>&nbsp;<i>Please use <a href="../../../com/rbnb/sapi/Sink.html#Subscribe(com.rbnb.sapi.ChannelMap, double, double, java.lang.String)"><code>Subscribe(ChannelMap,double,double,String)</code></a> instead.  A start time
  of zero provides the functionality of this method for "newest" and 
  "oldest" start times.</i></div>
<div class="block">Starts a continuous feed of data on the specified channels to this
  sink, for retrieval with <code>Fetch()</code>.  Each block retrieved
  by Fetch will be <code>duration</code> time units in length.
 <p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>channelMap</code> - ChannelMap of desired channels.</dd><dd><code>timeReference</code> - One of "newest" or "oldest".</dd><dd><code>duration</code> - The number of time units of data for each Fetch().</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code><a href="../../../com/rbnb/sapi/SAPIException.html" title="class in com.rbnb.sapi">SAPIException</a></code> - If not connected or no channels have been 
                specified.</dd>
<dd><code>java.lang.NullPointerException</code> - If timeReference is null.</dd>
<dd><code>java.lang.IllegalArgumentException</code> - If timeReference is illegal.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.2B5</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/sapi/Sink.html#Fetch(long, com.rbnb.sapi.ChannelMap)"><code>Fetch(long,ChannelMap)</code></a></dd></dl>
</li>
</ul>
<a name="Subscribe(com.rbnb.sapi.ChannelMap, double, double, java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>Subscribe</h4>
<pre>public final&nbsp;void&nbsp;Subscribe(<a href="../../../com/rbnb/sapi/ChannelMap.html" title="class in com.rbnb.sapi">ChannelMap</a>&nbsp;channelMap,
             double&nbsp;startTime,
             double&nbsp;duration,
             java.lang.String&nbsp;timeReference)
                     throws <a href="../../../com/rbnb/sapi/SAPIException.html" title="class in com.rbnb.sapi">SAPIException</a></pre>
<div class="block">Starts a continuous feed of data on the specified channels to this
 sink, for retrieval with <code>Fetch()</code>.  Each block
 retrieved by Fetch will be <code>duration</code> time units in
 length.

 <p>The <code>Subscribe</code> method is essentially the same as an 
  infinite series of <code>Request</code>s, except that performance and
  latency are improved.  After the first Fetch(), the start time is 
  adjusted automatically as appropriate for the time reference provided.

 <p>Please see <a href="../../../com/rbnb/sapi/Sink.html#Request(com.rbnb.sapi.ChannelMap, double, double, java.lang.String)"><code>Request(ChannelMap, double, double, String)</code></a>
  for the definition of the time references, and the meaning of the 
  start parameter for each case.</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>channelMap</code> - ChannelMap of desired channels.</dd><dd><code>startTime</code> - the start time of the request.</dd><dd><code>duration</code> - The number of time units of data for each Fetch().</dd><dd><code>timeReference</code> - Any of "newest", "oldest", "absolute",
                         "next", or "previous".</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code><a href="../../../com/rbnb/sapi/SAPIException.html" title="class in com.rbnb.sapi">SAPIException</a></code> - If not connected or no channels have been 
                specified.</dd>
<dd><code>java.lang.NullPointerException</code> - If timeReference is null.</dd>
<dd><code>java.lang.IllegalArgumentException</code> - If timeReference is illegal.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.2B5</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/sapi/Sink.html#Fetch(long, com.rbnb.sapi.ChannelMap)"><code>Fetch(long,ChannelMap)</code></a>, 
<a href="../../../com/rbnb/sapi/Sink.html#Request(com.rbnb.sapi.ChannelMap, double, double, java.lang.String)"><code>Request(ChannelMap,double,double,String)</code></a></dd></dl>
</li>
</ul>
<a name="Fetch(long, com.rbnb.sapi.ChannelMap)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>Fetch</h4>
<pre>public final&nbsp;<a href="../../../com/rbnb/sapi/ChannelMap.html" title="class in com.rbnb.sapi">ChannelMap</a>&nbsp;Fetch(long&nbsp;blockTimeout,
               <a href="../../../com/rbnb/sapi/ChannelMap.html" title="class in com.rbnb.sapi">ChannelMap</a>&nbsp;cm)
                       throws <a href="../../../com/rbnb/sapi/SAPIException.html" title="class in com.rbnb.sapi">SAPIException</a></pre>
<div class="block">Obtains the data and time values for the set of channels
  added via <a href="../../../com/rbnb/sapi/ChannelMap.html#Add(java.lang.String)"><code>ChannelMap.Add(java.lang.String)</code></a></code> and stores them in 
  the <code>ChannelMap</code> you provide.  This function returns
  a ChannelMap filled with the channels which matched the
  request; if none, an empty map is returned.  This may
    be less than the number of calls to Add(), if some channels
    lack data, or it may be greater, if wildcards were used.
 <p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>cm</code> - The ChannelMap object which is filled with the data received
    from the server.  If this parameter is null, a new ChannelMap is
    created.</dd><dd><code>blockTimeout</code> - The amount of time (ms) to wait for data to become
  available.  Use 0 for no delay or any negative number for an 
  infinite delay.</dd>
<dt><span class="strong">Returns:</span></dt><dd>The ChannelMap object provided, or a newly created one.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code><a href="../../../com/rbnb/sapi/SAPIException.html" title="class in com.rbnb.sapi">SAPIException</a></code> - If there are problems obtaining data from
  the server.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/sapi/Sink.html#Request(com.rbnb.sapi.ChannelMap, double, double, java.lang.String)"><code>Request(ChannelMap,double,double,String)</code></a>, 
<a href="../../../com/rbnb/sapi/Sink.html#Subscribe(com.rbnb.sapi.ChannelMap)"><code>Subscribe(ChannelMap)</code></a>, 
<a href="../../../com/rbnb/sapi/Sink.html#Monitor(com.rbnb.sapi.ChannelMap, int)"><code>Monitor(ChannelMap,int)</code></a>, 
<a href="../../../com/rbnb/sapi/ChannelMap.html#GetData(int)"><code>ChannelMap.GetData(int)</code></a></dd></dl>
</li>
</ul>
<a name="Fetch(long)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>Fetch</h4>
<pre>public final&nbsp;<a href="../../../com/rbnb/sapi/ChannelMap.html" title="class in com.rbnb.sapi">ChannelMap</a>&nbsp;Fetch(long&nbsp;blockTimeout)
                       throws <a href="../../../com/rbnb/sapi/SAPIException.html" title="class in com.rbnb.sapi">SAPIException</a></pre>
<div class="block">Obtains the data and time values for the set of channels
  added via <a href="../../../com/rbnb/sapi/ChannelMap.html#Add(java.lang.String)"><code>ChannelMap.Add(java.lang.String)</code></a></code> and stores them in 
  a newly created <code>ChannelMap</code>.
 <p>Calls <code>Fetch(null,long)</code>.
 <p></div>
<dl><dt><span class="strong">Throws:</span></dt>
<dd><code><a href="../../../com/rbnb/sapi/SAPIException.html" title="class in com.rbnb.sapi">SAPIException</a></code></dd><dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/sapi/Sink.html#Fetch(long, com.rbnb.sapi.ChannelMap)"><code>Fetch(long, ChannelMap)</code></a></dd></dl>
</li>
</ul>
<a name="RequestFrame(com.rbnb.sapi.ChannelMap)">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>RequestFrame</h4>
<pre>public final&nbsp;void&nbsp;RequestFrame(<a href="../../../com/rbnb/sapi/ChannelMap.html" title="class in com.rbnb.sapi">ChannelMap</a>&nbsp;cm)
                        throws <a href="../../../com/rbnb/sapi/SAPIException.html" title="class in com.rbnb.sapi">SAPIException</a></pre>
<div class="block">Makes a request for the next new frame.  This is similar to 
   <a href="../../../com/rbnb/sapi/Sink.html#Monitor(com.rbnb.sapi.ChannelMap, int)"><code>Monitor(ChannelMap, int)</code></a>,
  except only one response is given.

 <p>Note: this is only applicable to new data,
   as archived data never has new frames.</div>
<dl><dt><span class="strong">Throws:</span></dt>
<dd><code><a href="../../../com/rbnb/sapi/SAPIException.html" title="class in com.rbnb.sapi">SAPIException</a></code></dd></dl>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
</div>
<!-- ========= END OF CLASS DATA ========= -->
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a name="navbar_bottom">
<!--   -->
</a><a href="#skip-navbar_bottom" title="Skip navigation links"></a><a name="navbar_bottom_firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/Sink.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../index-files/index-1.html">Index</a></li>
<li><a href="../../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../../../com/rbnb/sapi/SAPIException.html" title="class in com.rbnb.sapi"><span class="strong">Prev Class</span></a></li>
<li><a href="../../../com/rbnb/sapi/Source.html" title="class in com.rbnb.sapi"><span class="strong">Next Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../../../index.html?com/rbnb/sapi/Sink.html" target="_top">Frames</a></li>
<li><a href="Sink.html" target="_top">No Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="../../../allclasses-noframe.html">All Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor_summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor_detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_detail">Method</a></li>
</ul>
</div>
<a name="skip-navbar_bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</body>
</html>
