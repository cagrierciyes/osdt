<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- NewPage -->
<html lang="en">
<head>
<!-- Generated by javadoc (version 1.7.0_02) on Tue Feb 21 13:58:31 PST 2012 -->
<title>DataRequest</title>
<meta name="date" content="2012-02-21">
<link rel="stylesheet" type="text/css" href="../../../stylesheet.css" title="Style">
</head>
<body>
<script type="text/javascript"><!--
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="DataRequest";
    }
//-->
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a name="navbar_top">
<!--   -->
</a><a href="#skip-navbar_top" title="Skip navigation links"></a><a name="navbar_top_firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/DataRequest.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../index-files/index-1.html">Index</a></li>
<li><a href="../../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../../../com/rbnb/api/DataBlock.html" title="class in com.rbnb.api"><span class="strong">Prev Class</span></a></li>
<li><a href="../../../com/rbnb/api/Directory.html" title="class in com.rbnb.api"><span class="strong">Next Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../../../index.html?com/rbnb/api/DataRequest.html" target="_top">Frames</a></li>
<li><a href="DataRequest.html" target="_top">No Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../../../allclasses-noframe.html">All Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li><a href="#field_summary">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor_summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li><a href="#field_detail">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor_detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_detail">Method</a></li>
</ul>
</div>
<a name="skip-navbar_top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
<!-- ======== START OF CLASS DATA ======== -->
<div class="header">
<div class="subTitle">com.rbnb.api</div>
<h2 title="Class DataRequest" class="title">Class DataRequest</h2>
</div>
<div class="contentContainer">
<ul class="inheritance">
<li>java.lang.Object</li>
<li>
<ul class="inheritance">
<li><a href="../../../com/rbnb/api/Rmap.html" title="class in com.rbnb.api">com.rbnb.api.Rmap</a></li>
<li>
<ul class="inheritance">
<li>com.rbnb.api.DataRequest</li>
</ul>
</li>
</ul>
</li>
</ul>
<div class="description">
<ul class="blockList">
<li class="blockList">
<dl>
<dt>All Implemented Interfaces:</dt>
<dd><a href="../../../com/rbnb/utility/SortCompareInterface.html" title="interface in com.rbnb.utility">SortCompareInterface</a>, <a href="../../../com/rbnb/utility/SortInterface.html" title="interface in com.rbnb.utility">SortInterface</a>, java.io.Serializable, java.lang.Cloneable</dd>
</dl>
<hr>
<br>
<pre>public final class <span class="strong">DataRequest</span>
extends <a href="../../../com/rbnb/api/Rmap.html" title="class in com.rbnb.api">Rmap</a></pre>
<div class="block">Request for data from the DataTurbine.
 <p>
 The <code>DataRequest</code> class extends <code>Rmap</code> to provide
 additional fields and flags to support requests for data out of the
 DataTurbine.
 <p></div>
<dl><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">Version:</span></dt>
  <dd>11/06/2003</dd>
<dt><span class="strong">Author:</span></dt>
  <dd>Ian Brown</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../serialized-form.html#com.rbnb.api.DataRequest">Serialized Form</a></dd></dl>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">
<!-- =========== FIELD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="field_summary">
<!--   -->
</a>
<h3>Field Summary</h3>
<table class="overviewSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Field and Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static byte</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/DataRequest.html#ABSOLUTE">ABSOLUTE</a></strong></code>
<div class="block">absolute time reference.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static byte</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/DataRequest.html#AFTER">AFTER</a></strong></code>
<div class="block">newest data starting after the specified time.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static byte</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/DataRequest.html#ALIGNED">ALIGNED</a></strong></code>
<div class="block">aligned time reference.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static byte</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/DataRequest.html#ALL">ALL</a></strong></code>
<div class="block">get data from both <code>EXISTING</code> and <code>FUTURE</code>
 domains.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static byte</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/DataRequest.html#CONSOLIDATED">CONSOLIDATED</a></strong></code>
<div class="block">respond using a single consolidated <code>Rmap</code> hierarchy.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static byte</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/DataRequest.html#EQUAL">EQUAL</a></strong></code>
<div class="block">data at the time reference.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static byte</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/DataRequest.html#EXISTING">EXISTING</a></strong></code>
<div class="block">get data already in the ring buffers.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static byte</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/DataRequest.html#FRAMES">FRAMES</a></strong></code>
<div class="block">respond a single source frame <code>Rmap</code> hierarchy at a time.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static byte</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/DataRequest.html#FUTURE">FUTURE</a></strong></code>
<div class="block">get data that appears after the request is issued.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static byte</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/DataRequest.html#GREATER">GREATER</a></strong></code>
<div class="block">data starting after the specified time reference.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static byte</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/DataRequest.html#GREATER_EQUAL">GREATER_EQUAL</a></strong></code>
<div class="block">data starting at or after the specified time reference.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static long</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/DataRequest.html#INFINITE">INFINITE</a></strong></code>
<div class="block">infinite repetitions.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static byte</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/DataRequest.html#LESS">LESS</a></strong></code>
<div class="block">data starting before the specified time reference.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static byte</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/DataRequest.html#LESS_EQUAL">LESS_EQUAL</a></strong></code>
<div class="block">data starting at or before the specified time reference.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static byte</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/DataRequest.html#MODIFIED">MODIFIED</a></strong></code>
<div class="block">newest data including at least some data after the specified time.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static byte</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/DataRequest.html#NEWEST">NEWEST</a></strong></code>
<div class="block">times are relative to that of the newest available data.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static byte</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/DataRequest.html#OLDEST">OLDEST</a></strong></code>
<div class="block">times are relative to that of the oldest available data.</div>
</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a name="fields_inherited_from_class_com.rbnb.api.Rmap">
<!--   -->
</a>
<h3>Fields inherited from class&nbsp;com.rbnb.api.<a href="../../../com/rbnb/api/Rmap.html" title="class in com.rbnb.api">Rmap</a></h3>
<code><a href="../../../com/rbnb/api/Rmap.html#PATHDELIMITER">PATHDELIMITER</a></code></li>
</ul>
</li>
</ul>
<!-- ======== CONSTRUCTOR SUMMARY ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor_summary">
<!--   -->
</a>
<h3>Constructor Summary</h3>
<table class="overviewSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colOne" scope="col">Constructor and Description</th>
</tr>
<tr class="altColor">
<td class="colOne"><code><strong><a href="../../../com/rbnb/api/DataRequest.html#DataRequest()">DataRequest</a></strong>()</code>
<div class="block">Class constructor.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colOne"><code><strong><a href="../../../com/rbnb/api/DataRequest.html#DataRequest(com.rbnb.api.InputStream, com.rbnb.api.DataInputStream)">DataRequest</a></strong>(com.rbnb.api.InputStream&nbsp;isI,
           com.rbnb.api.DataInputStream&nbsp;disI)</code>
<div class="block">Class constructor to build an <code>DataRequest</code> by reading it
 from an input stream.</div>
</td>
</tr>
<tr class="altColor">
<td class="colOne"><code><strong><a href="../../../com/rbnb/api/DataRequest.html#DataRequest(com.rbnb.api.Rmap, com.rbnb.api.InputStream, com.rbnb.api.DataInputStream)">DataRequest</a></strong>(<a href="../../../com/rbnb/api/Rmap.html" title="class in com.rbnb.api">Rmap</a>&nbsp;otherI,
           com.rbnb.api.InputStream&nbsp;isI,
           com.rbnb.api.DataInputStream&nbsp;disI)</code>
<div class="block">Class constructor to build an <code>DataRequest</code> by reading it
 from an input stream.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colOne"><code><strong><a href="../../../com/rbnb/api/DataRequest.html#DataRequest(java.lang.String)">DataRequest</a></strong>(java.lang.String&nbsp;nameI)</code>
<div class="block">Class constructor to build a <code>DataRequest</code> for the specified
 name.</div>
</td>
</tr>
<tr class="altColor">
<td class="colOne"><code><strong><a href="../../../com/rbnb/api/DataRequest.html#DataRequest(java.lang.String, com.rbnb.api.TimeRange, com.rbnb.api.TimeRange)">DataRequest</a></strong>(java.lang.String&nbsp;nameI,
           <a href="../../../com/rbnb/api/TimeRange.html" title="class in com.rbnb.api">TimeRange</a>&nbsp;trangeI,
           <a href="../../../com/rbnb/api/TimeRange.html" title="class in com.rbnb.api">TimeRange</a>&nbsp;frangeI)</code>
<div class="block">Class constructor to build a <code>DataRequest</code> from the specified
 values.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colOne"><code><strong><a href="../../../com/rbnb/api/DataRequest.html#DataRequest(java.lang.String, com.rbnb.api.TimeRange, com.rbnb.api.TimeRange, byte, byte, byte, long, double, boolean, byte, boolean)">DataRequest</a></strong>(java.lang.String&nbsp;nameI,
           <a href="../../../com/rbnb/api/TimeRange.html" title="class in com.rbnb.api">TimeRange</a>&nbsp;trangeI,
           <a href="../../../com/rbnb/api/TimeRange.html" title="class in com.rbnb.api">TimeRange</a>&nbsp;frangeI,
           byte&nbsp;referenceI,
           byte&nbsp;relationshipI,
           byte&nbsp;domainI,
           long&nbsp;repetitionsI,
           double&nbsp;incrementI,
           boolean&nbsp;synchronizedI,
           byte&nbsp;modeI,
           boolean&nbsp;gapControlI)</code>
<div class="block">Class constructor to build a <code>DataRequest</code> from the specified
 values.</div>
</td>
</tr>
<tr class="altColor">
<td class="colOne"><code><strong><a href="../../../com/rbnb/api/DataRequest.html#DataRequest(java.lang.String, com.rbnb.api.TimeRange, com.rbnb.api.TimeRange, byte, byte, long, double, boolean, byte)">DataRequest</a></strong>(java.lang.String&nbsp;nameI,
           <a href="../../../com/rbnb/api/TimeRange.html" title="class in com.rbnb.api">TimeRange</a>&nbsp;trangeI,
           <a href="../../../com/rbnb/api/TimeRange.html" title="class in com.rbnb.api">TimeRange</a>&nbsp;frangeI,
           byte&nbsp;referenceI,
           byte&nbsp;domainI,
           long&nbsp;repetitionsI,
           double&nbsp;incrementI,
           boolean&nbsp;synchronizedI,
           byte&nbsp;modeI)</code>
<div class="block">Class constructor to build a <code>DataRequest</code> from the specified
 values.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colOne"><code><strong><a href="../../../com/rbnb/api/DataRequest.html#DataRequest(java.lang.String, com.rbnb.api.TimeRange, com.rbnb.api.TimeRange, byte, byte, long, double, boolean, byte, boolean)">DataRequest</a></strong>(java.lang.String&nbsp;nameI,
           <a href="../../../com/rbnb/api/TimeRange.html" title="class in com.rbnb.api">TimeRange</a>&nbsp;trangeI,
           <a href="../../../com/rbnb/api/TimeRange.html" title="class in com.rbnb.api">TimeRange</a>&nbsp;frangeI,
           byte&nbsp;referenceI,
           byte&nbsp;domainI,
           long&nbsp;repetitionsI,
           double&nbsp;incrementI,
           boolean&nbsp;synchronizedI,
           byte&nbsp;modeI,
           boolean&nbsp;gapControlI)</code>
<div class="block">Class constructor to build a <code>DataRequest</code> from the specified
 values.</div>
</td>
</tr>
</table>
</li>
</ul>
<!-- ========== METHOD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="method_summary">
<!--   -->
</a>
<h3>Method Summary</h3>
<table class="overviewSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
<caption><span>Methods</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Method and Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/DataRequest.html#combineWith(com.rbnb.api.DataRequest)">combineWith</a></strong>(<a href="../../../com/rbnb/api/DataRequest.html" title="class in com.rbnb.api">DataRequest</a>&nbsp;otherI)</code>
<div class="block">Combines this <code>DataRequest</code> with the input one to produce a
 coherent set of flags.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>byte</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/DataRequest.html#getDomain()">getDomain</a></strong>()</code>
<div class="block">Gets the time domain.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/DataRequest.html#getGapControl()">getGapControl</a></strong>()</code>
<div class="block">Gets the gap control flag.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>double</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/DataRequest.html#getIncrement()">getIncrement</a></strong>()</code>
<div class="block">Gets the repitition increment.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>byte</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/DataRequest.html#getMode()">getMode</a></strong>()</code>
<div class="block">Gets the response mode.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>long</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/DataRequest.html#getNrepetitions()">getNrepetitions</a></strong>()</code>
<div class="block">Gets the number of repetitions.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>byte</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/DataRequest.html#getReference()">getReference</a></strong>()</code>
<div class="block">Gets the time reference.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>byte</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/DataRequest.html#getRelationship()">getRelationship</a></strong>()</code>
<div class="block">Gets the time relationship.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/DataRequest.html#getSynchronized()">getSynchronized</a></strong>()</code>
<div class="block">Gets the synchronized channels flag.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/DataRequest.html#setDomain(byte)">setDomain</a></strong>(byte&nbsp;domainI)</code>
<div class="block">Sets the time domain.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/DataRequest.html#setGapControl(boolean)">setGapControl</a></strong>(boolean&nbsp;gapControlI)</code>
<div class="block">Sets the gap control flag.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/DataRequest.html#setMode(byte)">setMode</a></strong>(byte&nbsp;modeI)</code>
<div class="block">Sets the response mode.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/DataRequest.html#setReference(byte)">setReference</a></strong>(byte&nbsp;referenceI)</code>
<div class="block">Sets the time reference.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/DataRequest.html#setRelationship(byte)">setRelationship</a></strong>(byte&nbsp;relationshipI)</code>
<div class="block">Sets the time relationship.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/DataRequest.html#setRepetitions(long, double)">setRepetitions</a></strong>(long&nbsp;numberI,
              double&nbsp;incrementI)</code>
<div class="block">Sets the number of repetitions and the increment for repetitions after
 the first.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../com/rbnb/api/DataRequest.html#setSynchronized(boolean)">setSynchronized</a></strong>(boolean&nbsp;synchronizedI)</code>
<div class="block">Sets the synchronized channels flag.</div>
</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a name="methods_inherited_from_class_com.rbnb.api.Rmap">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;com.rbnb.api.<a href="../../../com/rbnb/api/Rmap.html" title="class in com.rbnb.api">Rmap</a></h3>
<code><a href="../../../com/rbnb/api/Rmap.html#addChannel(java.lang.String)">addChannel</a>, <a href="../../../com/rbnb/api/Rmap.html#addChild(com.rbnb.api.Rmap)">addChild</a>, <a href="../../../com/rbnb/api/Rmap.html#addChildAt(com.rbnb.api.Rmap, int)">addChildAt</a>, <a href="../../../com/rbnb/api/Rmap.html#addDataWithTimeReference(java.lang.Object, int, int, byte, byte, com.rbnb.api.DataArray)">addDataWithTimeReference</a>, <a href="../../../com/rbnb/api/Rmap.html#addMember(com.rbnb.api.Rmap)">addMember</a>, <a href="../../../com/rbnb/api/Rmap.html#clone()">clone</a>, <a href="../../../com/rbnb/api/Rmap.html#collapse()">collapse</a>, <a href="../../../com/rbnb/api/Rmap.html#compareNames(com.rbnb.api.Rmap)">compareNames</a>, <a href="../../../com/rbnb/api/Rmap.html#compareNames(java.lang.String)">compareNames</a>, <a href="../../../com/rbnb/api/Rmap.html#compareNames(java.lang.String, java.lang.String)">compareNames</a>, <a href="../../../com/rbnb/api/Rmap.html#compareTo(java.lang.Object, java.lang.Object)">compareTo</a>, <a href="../../../com/rbnb/api/Rmap.html#compareTo(com.rbnb.api.Rmap)">compareTo</a>, <a href="../../../com/rbnb/api/Rmap.html#createFromName(java.lang.String)">createFromName</a>, <a href="../../../com/rbnb/api/Rmap.html#extract(java.lang.String)">extract</a>, <a href="../../../com/rbnb/api/Rmap.html#extract(java.lang.String, boolean, boolean, boolean)">extract</a>, <a href="../../../com/rbnb/api/Rmap.html#extractFolders()">extractFolders</a>, <a href="../../../com/rbnb/api/Rmap.html#extractFoldersAndChannels()">extractFoldersAndChannels</a>, <a href="../../../com/rbnb/api/Rmap.html#extractNames()">extractNames</a>, <a href="../../../com/rbnb/api/Rmap.html#extractRmap(com.rbnb.api.Rmap, boolean)">extractRmap</a>, <a href="../../../com/rbnb/api/Rmap.html#findChild(com.rbnb.api.Rmap)">findChild</a>, <a href="../../../com/rbnb/api/Rmap.html#findDescendant(java.lang.String, boolean)">findDescendant</a>, <a href="../../../com/rbnb/api/Rmap.html#findMember(com.rbnb.api.Rmap)">findMember</a>, <a href="../../../com/rbnb/api/Rmap.html#getChildAt(int)">getChildAt</a>, <a href="../../../com/rbnb/api/Rmap.html#getChildren()">getChildren</a>, <a href="../../../com/rbnb/api/Rmap.html#getDblock()">getDblock</a>, <a href="../../../com/rbnb/api/Rmap.html#getFrange()">getFrange</a>, <a href="../../../com/rbnb/api/Rmap.html#getFullName()">getFullName</a>, <a href="../../../com/rbnb/api/Rmap.html#getMemberAt(int)">getMemberAt</a>, <a href="../../../com/rbnb/api/Rmap.html#getMembers()">getMembers</a>, <a href="../../../com/rbnb/api/Rmap.html#getName()">getName</a>, <a href="../../../com/rbnb/api/Rmap.html#getNchildren()">getNchildren</a>, <a href="../../../com/rbnb/api/Rmap.html#getNmembers()">getNmembers</a>, <a href="../../../com/rbnb/api/Rmap.html#getParent()">getParent</a>, <a href="../../../com/rbnb/api/Rmap.html#getTrange()">getTrange</a>, <a href="../../../com/rbnb/api/Rmap.html#isImplemented(byte)">isImplemented</a>, <a href="../../../com/rbnb/api/Rmap.html#markLeaf()">markLeaf</a>, <a href="../../../com/rbnb/api/Rmap.html#mergeWith(com.rbnb.api.Rmap)">mergeWith</a>, <a href="../../../com/rbnb/api/Rmap.html#moveToBottom()">moveToBottom</a>, <a href="../../../com/rbnb/api/Rmap.html#moveToTop()">moveToTop</a>, <a href="../../../com/rbnb/api/Rmap.html#nullify()">nullify</a>, <a href="../../../com/rbnb/api/Rmap.html#removeChild(com.rbnb.api.Rmap)">removeChild</a>, <a href="../../../com/rbnb/api/Rmap.html#removeChildAt(int)">removeChildAt</a>, <a href="../../../com/rbnb/api/Rmap.html#removeMember(com.rbnb.api.Rmap)">removeMember</a>, <a href="../../../com/rbnb/api/Rmap.html#removeMemberAt(int)">removeMemberAt</a>, <a href="../../../com/rbnb/api/Rmap.html#setDblock(com.rbnb.api.DataBlock)">setDblock</a>, <a href="../../../com/rbnb/api/Rmap.html#setFrange(com.rbnb.api.TimeRange)">setFrange</a>, <a href="../../../com/rbnb/api/Rmap.html#setName(java.lang.String)">setName</a>, <a href="../../../com/rbnb/api/Rmap.html#setTrange(com.rbnb.api.TimeRange)">setTrange</a>, <a href="../../../com/rbnb/api/Rmap.html#sortField(java.lang.Object)">sortField</a>, <a href="../../../com/rbnb/api/Rmap.html#toNameHierarchy()">toNameHierarchy</a>, <a href="../../../com/rbnb/api/Rmap.html#toString()">toString</a>, <a href="../../../com/rbnb/api/Rmap.html#toString(boolean, java.lang.String)">toString</a>, <a href="../../../com/rbnb/api/Rmap.html#xmlRegistration(long, java.lang.String)">xmlRegistration</a>, <a href="../../../com/rbnb/api/Rmap.html#xmlRegistration(long, java.lang.String, java.lang.String)">xmlRegistration</a></code></li>
</ul>
<ul class="blockList">
<li class="blockList"><a name="methods_inherited_from_class_java.lang.Object">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
<code>equals, getClass, hashCode, notify, notifyAll, wait, wait, wait</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">
<!-- ============ FIELD DETAIL =========== -->
<ul class="blockList">
<li class="blockList"><a name="field_detail">
<!--   -->
</a>
<h3>Field Detail</h3>
<a name="ABSOLUTE">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>ABSOLUTE</h4>
<pre>public static final&nbsp;byte ABSOLUTE</pre>
<div class="block">absolute time reference.
 <p>
 The request time values are used as is.
 <p></div>
<dl><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/api/DataRequest.html#AFTER"><code>AFTER</code></a>, 
<a href="../../../com/rbnb/api/DataRequest.html#ALIGNED"><code>ALIGNED</code></a>, 
<a href="../../../com/rbnb/api/DataRequest.html#MODIFIED"><code>MODIFIED</code></a>, 
<a href="../../../com/rbnb/api/DataRequest.html#NEWEST"><code>NEWEST</code></a>, 
<a href="../../../com/rbnb/api/DataRequest.html#OLDEST"><code>OLDEST</code></a>, 
<a href="../../../constant-values.html#com.rbnb.api.DataRequest.ABSOLUTE">Constant Field Values</a></dd></dl>
</li>
</ul>
<a name="ALIGNED">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>ALIGNED</h4>
<pre>public static final&nbsp;byte ALIGNED</pre>
<div class="block">aligned time reference.
 <p></div>
<dl><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/api/DataRequest.html#ABSOLUTE"><code>ABSOLUTE</code></a>, 
<a href="../../../com/rbnb/api/DataRequest.html#AFTER"><code>AFTER</code></a>, 
<a href="../../../com/rbnb/api/DataRequest.html#MODIFIED"><code>MODIFIED</code></a>, 
<a href="../../../com/rbnb/api/DataRequest.html#NEWEST"><code>NEWEST</code></a>, 
<a href="../../../com/rbnb/api/DataRequest.html#OLDEST"><code>OLDEST</code></a>, 
<a href="../../../constant-values.html#com.rbnb.api.DataRequest.ALIGNED">Constant Field Values</a></dd></dl>
</li>
</ul>
<a name="AFTER">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>AFTER</h4>
<pre>public static final&nbsp;byte AFTER</pre>
<div class="block">newest data starting after the specified time.
 <p></div>
<dl><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/api/DataRequest.html#ABSOLUTE"><code>ABSOLUTE</code></a>, 
<a href="../../../com/rbnb/api/DataRequest.html#ALIGNED"><code>ALIGNED</code></a>, 
<a href="../../../com/rbnb/api/DataRequest.html#MODIFIED"><code>MODIFIED</code></a>, 
<a href="../../../com/rbnb/api/DataRequest.html#NEWEST"><code>NEWEST</code></a>, 
<a href="../../../com/rbnb/api/DataRequest.html#OLDEST"><code>OLDEST</code></a>, 
<a href="../../../constant-values.html#com.rbnb.api.DataRequest.AFTER">Constant Field Values</a></dd></dl>
</li>
</ul>
<a name="ALL">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>ALL</h4>
<pre>public static final&nbsp;byte ALL</pre>
<div class="block">get data from both <code>EXISTING</code> and <code>FUTURE</code>
 domains.
 <p></div>
<dl><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/api/DataRequest.html#EXISTING"><code>EXISTING</code></a>, 
<a href="../../../com/rbnb/api/DataRequest.html#FUTURE"><code>FUTURE</code></a>, 
<a href="../../../constant-values.html#com.rbnb.api.DataRequest.ALL">Constant Field Values</a></dd></dl>
</li>
</ul>
<a name="CONSOLIDATED">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>CONSOLIDATED</h4>
<pre>public static final&nbsp;byte CONSOLIDATED</pre>
<div class="block">respond using a single consolidated <code>Rmap</code> hierarchy.
 <p></div>
<dl><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/api/DataRequest.html#FRAMES"><code>FRAMES</code></a>, 
<a href="../../../constant-values.html#com.rbnb.api.DataRequest.CONSOLIDATED">Constant Field Values</a></dd></dl>
</li>
</ul>
<a name="EQUAL">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>EQUAL</h4>
<pre>public static final&nbsp;byte EQUAL</pre>
<div class="block">data at the time reference.
 <p></div>
<dl><dt><span class="strong">Since:</span></dt>
  <dd>V2.2</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/api/DataRequest.html#GREATER"><code>GREATER</code></a>, 
<a href="../../../com/rbnb/api/DataRequest.html#GREATER_EQUAL"><code>GREATER_EQUAL</code></a>, 
<a href="../../../com/rbnb/api/DataRequest.html#LESS"><code>LESS</code></a>, 
<a href="../../../com/rbnb/api/DataRequest.html#LESS_EQUAL"><code>LESS_EQUAL</code></a>, 
<a href="../../../constant-values.html#com.rbnb.api.DataRequest.EQUAL">Constant Field Values</a></dd></dl>
</li>
</ul>
<a name="EXISTING">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>EXISTING</h4>
<pre>public static final&nbsp;byte EXISTING</pre>
<div class="block">get data already in the ring buffers.
 <p></div>
<dl><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/api/DataRequest.html#ALL"><code>ALL</code></a>, 
<a href="../../../com/rbnb/api/DataRequest.html#FUTURE"><code>FUTURE</code></a>, 
<a href="../../../constant-values.html#com.rbnb.api.DataRequest.EXISTING">Constant Field Values</a></dd></dl>
</li>
</ul>
<a name="FRAMES">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>FRAMES</h4>
<pre>public static final&nbsp;byte FRAMES</pre>
<div class="block">respond a single source frame <code>Rmap</code> hierarchy at a time.
 <p></div>
<dl><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/api/DataRequest.html#CONSOLIDATED"><code>CONSOLIDATED</code></a>, 
<a href="../../../constant-values.html#com.rbnb.api.DataRequest.FRAMES">Constant Field Values</a></dd></dl>
</li>
</ul>
<a name="FUTURE">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>FUTURE</h4>
<pre>public static final&nbsp;byte FUTURE</pre>
<div class="block">get data that appears after the request is issued.
 <p></div>
<dl><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../constant-values.html#com.rbnb.api.DataRequest.FUTURE">Constant Field Values</a></dd></dl>
</li>
</ul>
<a name="GREATER">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>GREATER</h4>
<pre>public static final&nbsp;byte GREATER</pre>
<div class="block">data starting after the specified time reference.
 <p></div>
<dl><dt><span class="strong">Since:</span></dt>
  <dd>V2.2</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/api/DataRequest.html#EQUAL"><code>EQUAL</code></a>, 
<a href="../../../com/rbnb/api/DataRequest.html#GREATER_EQUAL"><code>GREATER_EQUAL</code></a>, 
<a href="../../../com/rbnb/api/DataRequest.html#LESS"><code>LESS</code></a>, 
<a href="../../../com/rbnb/api/DataRequest.html#LESS_EQUAL"><code>LESS_EQUAL</code></a>, 
<a href="../../../constant-values.html#com.rbnb.api.DataRequest.GREATER">Constant Field Values</a></dd></dl>
</li>
</ul>
<a name="GREATER_EQUAL">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>GREATER_EQUAL</h4>
<pre>public static final&nbsp;byte GREATER_EQUAL</pre>
<div class="block">data starting at or after the specified time reference.
 <p></div>
<dl><dt><span class="strong">Since:</span></dt>
  <dd>V2.2</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/api/DataRequest.html#EQUAL"><code>EQUAL</code></a>, 
<a href="../../../com/rbnb/api/DataRequest.html#GREATER"><code>GREATER</code></a>, 
<a href="../../../com/rbnb/api/DataRequest.html#LESS"><code>LESS</code></a>, 
<a href="../../../com/rbnb/api/DataRequest.html#LESS_EQUAL"><code>LESS_EQUAL</code></a>, 
<a href="../../../constant-values.html#com.rbnb.api.DataRequest.GREATER_EQUAL">Constant Field Values</a></dd></dl>
</li>
</ul>
<a name="LESS">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>LESS</h4>
<pre>public static final&nbsp;byte LESS</pre>
<div class="block">data starting before the specified time reference.
 <p></div>
<dl><dt><span class="strong">Since:</span></dt>
  <dd>V2.2</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/api/DataRequest.html#EQUAL"><code>EQUAL</code></a>, 
<a href="../../../com/rbnb/api/DataRequest.html#GREATER"><code>GREATER</code></a>, 
<a href="../../../com/rbnb/api/DataRequest.html#GREATER_EQUAL"><code>GREATER_EQUAL</code></a>, 
<a href="../../../com/rbnb/api/DataRequest.html#LESS_EQUAL"><code>LESS_EQUAL</code></a>, 
<a href="../../../constant-values.html#com.rbnb.api.DataRequest.LESS">Constant Field Values</a></dd></dl>
</li>
</ul>
<a name="LESS_EQUAL">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>LESS_EQUAL</h4>
<pre>public static final&nbsp;byte LESS_EQUAL</pre>
<div class="block">data starting at or before the specified time reference.
 <p></div>
<dl><dt><span class="strong">Since:</span></dt>
  <dd>V2.2</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/api/DataRequest.html#EQUAL"><code>EQUAL</code></a>, 
<a href="../../../com/rbnb/api/DataRequest.html#GREATER"><code>GREATER</code></a>, 
<a href="../../../com/rbnb/api/DataRequest.html#GREATER_EQUAL"><code>GREATER_EQUAL</code></a>, 
<a href="../../../com/rbnb/api/DataRequest.html#LESS"><code>LESS</code></a>, 
<a href="../../../constant-values.html#com.rbnb.api.DataRequest.LESS_EQUAL">Constant Field Values</a></dd></dl>
</li>
</ul>
<a name="MODIFIED">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>MODIFIED</h4>
<pre>public static final&nbsp;byte MODIFIED</pre>
<div class="block">newest data including at least some data after the specified time.
 <p></div>
<dl><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/api/DataRequest.html#ABSOLUTE"><code>ABSOLUTE</code></a>, 
<a href="../../../com/rbnb/api/DataRequest.html#AFTER"><code>AFTER</code></a>, 
<a href="../../../com/rbnb/api/DataRequest.html#ALIGNED"><code>ALIGNED</code></a>, 
<a href="../../../com/rbnb/api/DataRequest.html#GREATER"><code>GREATER</code></a>, 
<a href="../../../com/rbnb/api/DataRequest.html#GREATER_EQUAL"><code>GREATER_EQUAL</code></a>, 
<a href="../../../com/rbnb/api/DataRequest.html#LESS"><code>LESS</code></a>, 
<a href="../../../com/rbnb/api/DataRequest.html#LESS_EQUAL"><code>LESS_EQUAL</code></a>, 
<a href="../../../com/rbnb/api/DataRequest.html#NEWEST"><code>NEWEST</code></a>, 
<a href="../../../com/rbnb/api/DataRequest.html#OLDEST"><code>OLDEST</code></a>, 
<a href="../../../constant-values.html#com.rbnb.api.DataRequest.MODIFIED">Constant Field Values</a></dd></dl>
</li>
</ul>
<a name="NEWEST">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>NEWEST</h4>
<pre>public static final&nbsp;byte NEWEST</pre>
<div class="block">times are relative to that of the newest available data.
 <p></div>
<dl><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/api/DataRequest.html#ABSOLUTE"><code>ABSOLUTE</code></a>, 
<a href="../../../com/rbnb/api/DataRequest.html#AFTER"><code>AFTER</code></a>, 
<a href="../../../com/rbnb/api/DataRequest.html#ALIGNED"><code>ALIGNED</code></a>, 
<a href="../../../com/rbnb/api/DataRequest.html#GREATER"><code>GREATER</code></a>, 
<a href="../../../com/rbnb/api/DataRequest.html#GREATER_EQUAL"><code>GREATER_EQUAL</code></a>, 
<a href="../../../com/rbnb/api/DataRequest.html#LESS"><code>LESS</code></a>, 
<a href="../../../com/rbnb/api/DataRequest.html#LESS_EQUAL"><code>LESS_EQUAL</code></a>, 
<a href="../../../com/rbnb/api/DataRequest.html#MODIFIED"><code>MODIFIED</code></a>, 
<a href="../../../com/rbnb/api/DataRequest.html#OLDEST"><code>OLDEST</code></a>, 
<a href="../../../constant-values.html#com.rbnb.api.DataRequest.NEWEST">Constant Field Values</a></dd></dl>
</li>
</ul>
<a name="OLDEST">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>OLDEST</h4>
<pre>public static final&nbsp;byte OLDEST</pre>
<div class="block">times are relative to that of the oldest available data.
 <p></div>
<dl><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/api/DataRequest.html#ABSOLUTE"><code>ABSOLUTE</code></a>, 
<a href="../../../com/rbnb/api/DataRequest.html#AFTER"><code>AFTER</code></a>, 
<a href="../../../com/rbnb/api/DataRequest.html#ALIGNED"><code>ALIGNED</code></a>, 
<a href="../../../com/rbnb/api/DataRequest.html#GREATER"><code>GREATER</code></a>, 
<a href="../../../com/rbnb/api/DataRequest.html#GREATER_EQUAL"><code>GREATER_EQUAL</code></a>, 
<a href="../../../com/rbnb/api/DataRequest.html#LESS"><code>LESS</code></a>, 
<a href="../../../com/rbnb/api/DataRequest.html#LESS_EQUAL"><code>LESS_EQUAL</code></a>, 
<a href="../../../com/rbnb/api/DataRequest.html#MODIFIED"><code>MODIFIED</code></a>, 
<a href="../../../com/rbnb/api/DataRequest.html#NEWEST"><code>NEWEST</code></a>, 
<a href="../../../constant-values.html#com.rbnb.api.DataRequest.OLDEST">Constant Field Values</a></dd></dl>
</li>
</ul>
<a name="INFINITE">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>INFINITE</h4>
<pre>public static final&nbsp;long INFINITE</pre>
<div class="block">infinite repetitions.
 <p></div>
<dl><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../constant-values.html#com.rbnb.api.DataRequest.INFINITE">Constant Field Values</a></dd></dl>
</li>
</ul>
</li>
</ul>
<!-- ========= CONSTRUCTOR DETAIL ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor_detail">
<!--   -->
</a>
<h3>Constructor Detail</h3>
<a name="DataRequest()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>DataRequest</h4>
<pre>public&nbsp;DataRequest()</pre>
<div class="block">Class constructor.
 <p></div>
<dl><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd></dl>
</li>
</ul>
<a name="DataRequest(com.rbnb.api.InputStream, com.rbnb.api.DataInputStream)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>DataRequest</h4>
<pre>public&nbsp;DataRequest(com.rbnb.api.InputStream&nbsp;isI,
           com.rbnb.api.DataInputStream&nbsp;disI)
            throws <a href="../../../com/rbnb/api/AddressException.html" title="class in com.rbnb.api">AddressException</a>,
                   <a href="../../../com/rbnb/api/SerializeException.html" title="class in com.rbnb.api">SerializeException</a>,
                   java.io.EOFException,
                   java.io.IOException,
                   java.lang.InterruptedException</pre>
<div class="block">Class constructor to build an <code>DataRequest</code> by reading it
 from an input stream.
 <p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>isI</code> - the input stream.</dd><dd><code>disI</code> - the data input stream.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code><a href="../../../com/rbnb/api/AddressException.html" title="class in com.rbnb.api">AddressException</a></code> - thrown if there is a problem with an address.</dd>
<dd><code><a href="../../../com/rbnb/api/SerializeException.html" title="class in com.rbnb.api">SerializeException</a></code> - thrown if there is a problem with the serialization. For
                  example, a missing bracket.</dd>
<dd><code>java.io.EOFException</code> - thrown if the end of the input stream is reached.</dd>
<dd><code>java.io.InterruptedIOException</code> - thrown if this operation is interrupted during I/O.</dd>
<dd><code>java.io.IOException</code> - thrown if there is an error reading the input stream.</dd>
<dd><code>java.lang.InterruptedException</code> - thrown if the read is interrupted.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd></dl>
</li>
</ul>
<a name="DataRequest(com.rbnb.api.Rmap, com.rbnb.api.InputStream, com.rbnb.api.DataInputStream)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>DataRequest</h4>
<pre>public&nbsp;DataRequest(<a href="../../../com/rbnb/api/Rmap.html" title="class in com.rbnb.api">Rmap</a>&nbsp;otherI,
           com.rbnb.api.InputStream&nbsp;isI,
           com.rbnb.api.DataInputStream&nbsp;disI)
            throws <a href="../../../com/rbnb/api/AddressException.html" title="class in com.rbnb.api">AddressException</a>,
                   <a href="../../../com/rbnb/api/SerializeException.html" title="class in com.rbnb.api">SerializeException</a>,
                   java.io.EOFException,
                   java.io.IOException,
                   java.lang.InterruptedException</pre>
<div class="block">Class constructor to build an <code>DataRequest</code> by reading it
 from an input stream.
 <p>
 This constructor fills in unread fields from the input
 <code>Rmap</code>.
 <p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>otherI</code> - the other <code>DataRequest</code> as an
                     <code>Rmap</code>.</dd><dd><code>isI</code> - the input stream.</dd><dd><code>disI</code> - the data input stream.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code><a href="../../../com/rbnb/api/AddressException.html" title="class in com.rbnb.api">AddressException</a></code> - thrown if there is a problem with an address.</dd>
<dd><code><a href="../../../com/rbnb/api/SerializeException.html" title="class in com.rbnb.api">SerializeException</a></code> - thrown if there is a problem with the serialization. For
                  example, a missing bracket.</dd>
<dd><code>java.io.EOFException</code> - thrown if the end of the input stream is reached.</dd>
<dd><code>java.io.InterruptedIOException</code> - thrown if this operation is interrupted during I/O.</dd>
<dd><code>java.io.IOException</code> - thrown if there is an error reading the input stream.</dd>
<dd><code>java.lang.InterruptedException</code> - thrown if the read is interrupted.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd></dl>
</li>
</ul>
<a name="DataRequest(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>DataRequest</h4>
<pre>public&nbsp;DataRequest(java.lang.String&nbsp;nameI)
            throws <a href="../../../com/rbnb/api/AddressException.html" title="class in com.rbnb.api">AddressException</a>,
                   <a href="../../../com/rbnb/api/SerializeException.html" title="class in com.rbnb.api">SerializeException</a>,
                   java.io.EOFException,
                   java.io.InterruptedIOException,
                   java.io.IOException,
                   java.lang.InterruptedException</pre>
<div class="block">Class constructor to build a <code>DataRequest</code> for the specified
 name.
 <p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>nameI</code> - the name of the <code>Rmap</code>.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code><a href="../../../com/rbnb/api/AddressException.html" title="class in com.rbnb.api">AddressException</a></code> - thrown if there is a problem with an address.</dd>
<dd><code><a href="../../../com/rbnb/api/SerializeException.html" title="class in com.rbnb.api">SerializeException</a></code> - thrown if there is a problem with the serialization. For
                  example, a missing bracket.</dd>
<dd><code>java.io.EOFException</code> - thrown if the end of the input stream is reached.</dd>
<dd><code>java.io.InterruptedIOException</code> - thrown if this operation is interrupted during I/O.</dd>
<dd><code>java.io.IOException</code> - thrown if there is an error reading the input stream.</dd>
<dd><code>java.lang.InterruptedException</code> - thrown if the read is interrupted.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd></dl>
</li>
</ul>
<a name="DataRequest(java.lang.String, com.rbnb.api.TimeRange, com.rbnb.api.TimeRange)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>DataRequest</h4>
<pre>public&nbsp;DataRequest(java.lang.String&nbsp;nameI,
           <a href="../../../com/rbnb/api/TimeRange.html" title="class in com.rbnb.api">TimeRange</a>&nbsp;trangeI,
           <a href="../../../com/rbnb/api/TimeRange.html" title="class in com.rbnb.api">TimeRange</a>&nbsp;frangeI)
            throws <a href="../../../com/rbnb/api/AddressException.html" title="class in com.rbnb.api">AddressException</a>,
                   <a href="../../../com/rbnb/api/SerializeException.html" title="class in com.rbnb.api">SerializeException</a>,
                   java.io.EOFException,
                   java.io.InterruptedIOException,
                   java.io.IOException,
                   java.lang.InterruptedException</pre>
<div class="block">Class constructor to build a <code>DataRequest</code> from the specified
 values.
 <p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>nameI</code> - the name of the <code>Rmap</code>.</dd><dd><code>trangeI</code> - the <code>TimeRange</code>.</dd><dd><code>frangeI</code> - the frame index <code>TimeRange</code>.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code>java.lang.IllegalArgumentException</code> - thrown if <code>repetitionsI</code> is negative or zero.</dd>
<dd><code><a href="../../../com/rbnb/api/AddressException.html" title="class in com.rbnb.api">AddressException</a></code> - thrown if there is a problem with an address.</dd>
<dd><code><a href="../../../com/rbnb/api/SerializeException.html" title="class in com.rbnb.api">SerializeException</a></code> - thrown if there is a problem with the serialization.</dd>
<dd><code>java.io.EOFException</code> - thrown if the end of the input stream is reached.</dd>
<dd><code>java.io.InterruptedIOException</code> - thrown if this operation is interrupted during I/O.</dd>
<dd><code>java.io.IOException</code> - thrown if there is an error during I/O.</dd>
<dd><code>java.lang.IllegalArgumentException</code> - thrown if <code>repetitionsI</code> is negative or zero.</dd>
<dd><code>java.lang.InterruptedException</code> - thrown if the operation is interrupted.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/api/DataRequest.html#DataRequest()"><code>DataRequest()</code></a></dd></dl>
</li>
</ul>
<a name="DataRequest(java.lang.String, com.rbnb.api.TimeRange, com.rbnb.api.TimeRange, byte, byte, long, double, boolean, byte)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>DataRequest</h4>
<pre>public&nbsp;DataRequest(java.lang.String&nbsp;nameI,
           <a href="../../../com/rbnb/api/TimeRange.html" title="class in com.rbnb.api">TimeRange</a>&nbsp;trangeI,
           <a href="../../../com/rbnb/api/TimeRange.html" title="class in com.rbnb.api">TimeRange</a>&nbsp;frangeI,
           byte&nbsp;referenceI,
           byte&nbsp;domainI,
           long&nbsp;repetitionsI,
           double&nbsp;incrementI,
           boolean&nbsp;synchronizedI,
           byte&nbsp;modeI)
            throws <a href="../../../com/rbnb/api/AddressException.html" title="class in com.rbnb.api">AddressException</a>,
                   <a href="../../../com/rbnb/api/SerializeException.html" title="class in com.rbnb.api">SerializeException</a>,
                   java.io.EOFException,
                   java.io.InterruptedIOException,
                   java.io.IOException,
                   java.lang.InterruptedException</pre>
<div class="block">Class constructor to build a <code>DataRequest</code> from the specified
 values.
 <p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>nameI</code> - the name of the <code>Rmap</code>.</dd><dd><code>trangeI</code> - the <code>TimeRange</code>.</dd><dd><code>frangeI</code> - the frame index <code>TimeRange</code>.</dd><dd><code>referenceI</code> - the time reference.</dd><dd><code>domainI</code> - the time domain.</dd><dd><code>repetitionsI</code> - the number of repetitions.</dd><dd><code>incrementI</code> - the repitition increment.</dd><dd><code>synchronizedI</code> - synchronize channels?</dd><dd><code>modeI</code> - the response mode.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code><a href="../../../com/rbnb/api/AddressException.html" title="class in com.rbnb.api">AddressException</a></code> - thrown if there is a problem with an address.</dd>
<dd><code><a href="../../../com/rbnb/api/SerializeException.html" title="class in com.rbnb.api">SerializeException</a></code> - thrown if there is a problem with the serialization.</dd>
<dd><code>java.io.EOFException</code> - thrown if the end of the input stream is reached.</dd>
<dd><code>java.io.InterruptedIOException</code> - thrown if this operation is interrupted during I/O.</dd>
<dd><code>java.io.IOException</code> - thrown if there is an error during I/O.</dd>
<dd><code>java.lang.IllegalArgumentException</code> - thrown if <code>repetitionsI</code> is negative or zero.</dd>
<dd><code>java.lang.InterruptedException</code> - thrown if the operation is interrupted.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd></dl>
</li>
</ul>
<a name="DataRequest(java.lang.String, com.rbnb.api.TimeRange, com.rbnb.api.TimeRange, byte, byte, long, double, boolean, byte, boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>DataRequest</h4>
<pre>public&nbsp;DataRequest(java.lang.String&nbsp;nameI,
           <a href="../../../com/rbnb/api/TimeRange.html" title="class in com.rbnb.api">TimeRange</a>&nbsp;trangeI,
           <a href="../../../com/rbnb/api/TimeRange.html" title="class in com.rbnb.api">TimeRange</a>&nbsp;frangeI,
           byte&nbsp;referenceI,
           byte&nbsp;domainI,
           long&nbsp;repetitionsI,
           double&nbsp;incrementI,
           boolean&nbsp;synchronizedI,
           byte&nbsp;modeI,
           boolean&nbsp;gapControlI)
            throws <a href="../../../com/rbnb/api/AddressException.html" title="class in com.rbnb.api">AddressException</a>,
                   <a href="../../../com/rbnb/api/SerializeException.html" title="class in com.rbnb.api">SerializeException</a>,
                   java.io.EOFException,
                   java.io.InterruptedIOException,
                   java.io.IOException,
                   java.lang.InterruptedException</pre>
<div class="block">Class constructor to build a <code>DataRequest</code> from the specified
 values.
 <p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>nameI</code> - the name of the <code>Rmap</code>.</dd><dd><code>trangeI</code> - the <code>TimeRange</code>.</dd><dd><code>frangeI</code> - the frame index <code>TimeRange</code>.</dd><dd><code>referenceI</code> - the time reference.</dd><dd><code>domainI</code> - the time domain.</dd><dd><code>repetitionsI</code> - the number of repetitions.</dd><dd><code>incrementI</code> - the repitition increment.</dd><dd><code>synchronizedI</code> - synchronize channels?</dd><dd><code>modeI</code> - the response mode.</dd><dd><code>gapControlI</code> - control when gaps can occur?</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code><a href="../../../com/rbnb/api/AddressException.html" title="class in com.rbnb.api">AddressException</a></code> - thrown if there is a problem with an address.</dd>
<dd><code><a href="../../../com/rbnb/api/SerializeException.html" title="class in com.rbnb.api">SerializeException</a></code> - thrown if there is a problem with the serialization.</dd>
<dd><code>java.io.EOFException</code> - thrown if the end of the input stream is reached.</dd>
<dd><code>java.io.InterruptedIOException</code> - thrown if this operation is interrupted during I/O.</dd>
<dd><code>java.io.IOException</code> - thrown if there is an error during I/O.</dd>
<dd><code>java.lang.IllegalArgumentException</code> - thrown if <code>repetitionsI</code> is negative or zero.</dd>
<dd><code>java.lang.InterruptedException</code> - thrown if the operation is interrupted.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd></dl>
</li>
</ul>
<a name="DataRequest(java.lang.String, com.rbnb.api.TimeRange, com.rbnb.api.TimeRange, byte, byte, byte, long, double, boolean, byte, boolean)">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>DataRequest</h4>
<pre>public&nbsp;DataRequest(java.lang.String&nbsp;nameI,
           <a href="../../../com/rbnb/api/TimeRange.html" title="class in com.rbnb.api">TimeRange</a>&nbsp;trangeI,
           <a href="../../../com/rbnb/api/TimeRange.html" title="class in com.rbnb.api">TimeRange</a>&nbsp;frangeI,
           byte&nbsp;referenceI,
           byte&nbsp;relationshipI,
           byte&nbsp;domainI,
           long&nbsp;repetitionsI,
           double&nbsp;incrementI,
           boolean&nbsp;synchronizedI,
           byte&nbsp;modeI,
           boolean&nbsp;gapControlI)
            throws <a href="../../../com/rbnb/api/AddressException.html" title="class in com.rbnb.api">AddressException</a>,
                   <a href="../../../com/rbnb/api/SerializeException.html" title="class in com.rbnb.api">SerializeException</a>,
                   java.io.EOFException,
                   java.io.InterruptedIOException,
                   java.io.IOException,
                   java.lang.InterruptedException</pre>
<div class="block">Class constructor to build a <code>DataRequest</code> from the specified
 values.
 <p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>nameI</code> - the name of the <code>Rmap</code>.</dd><dd><code>trangeI</code> - the <code>TimeRange</code>.</dd><dd><code>frangeI</code> - the frame index <code>TimeRange</code>.</dd><dd><code>referenceI</code> - the time reference.</dd><dd><code>relationshipI</code> - the time relationship.</dd><dd><code>domainI</code> - the time domain.</dd><dd><code>repetitionsI</code> - the number of repetitions.</dd><dd><code>incrementI</code> - the repitition increment.</dd><dd><code>synchronizedI</code> - synchronize channels?</dd><dd><code>modeI</code> - the response mode.</dd><dd><code>gapControlI</code> - control when gaps can occur?</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code><a href="../../../com/rbnb/api/AddressException.html" title="class in com.rbnb.api">AddressException</a></code> - thrown if there is a problem with an address.</dd>
<dd><code><a href="../../../com/rbnb/api/SerializeException.html" title="class in com.rbnb.api">SerializeException</a></code> - thrown if there is a problem with the serialization.</dd>
<dd><code>java.io.EOFException</code> - thrown if the end of the input stream is reached.</dd>
<dd><code>java.io.InterruptedIOException</code> - thrown if this operation is interrupted during I/O.</dd>
<dd><code>java.io.IOException</code> - thrown if there is an error during I/O.</dd>
<dd><code>java.lang.IllegalArgumentException</code> - thrown if <code>repetitionsI</code> is negative or zero.</dd>
<dd><code>java.lang.InterruptedException</code> - thrown if the operation is interrupted.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.2</dd></dl>
</li>
</ul>
</li>
</ul>
<!-- ============ METHOD DETAIL ========== -->
<ul class="blockList">
<li class="blockList"><a name="method_detail">
<!--   -->
</a>
<h3>Method Detail</h3>
<a name="getDomain()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getDomain</h4>
<pre>public final&nbsp;byte&nbsp;getDomain()</pre>
<div class="block">Gets the time domain.
 <p></div>
<dl><dt><span class="strong">Returns:</span></dt><dd>the time domain.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/api/DataRequest.html#ALL"><code>ALL</code></a>, 
<a href="../../../com/rbnb/api/DataRequest.html#EXISTING"><code>EXISTING</code></a>, 
<a href="../../../com/rbnb/api/DataRequest.html#FUTURE"><code>FUTURE</code></a>, 
<a href="../../../com/rbnb/api/DataRequest.html#setDomain(byte)"><code>setDomain(byte)</code></a></dd></dl>
</li>
</ul>
<a name="combineWith(com.rbnb.api.DataRequest)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>combineWith</h4>
<pre>public final&nbsp;void&nbsp;combineWith(<a href="../../../com/rbnb/api/DataRequest.html" title="class in com.rbnb.api">DataRequest</a>&nbsp;otherI)</pre>
<div class="block">Combines this <code>DataRequest</code> with the input one to produce a
 coherent set of flags.
 <p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>otherI</code> - the other <code>DataRequest</code>.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd></dl>
</li>
</ul>
<a name="getGapControl()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getGapControl</h4>
<pre>public final&nbsp;boolean&nbsp;getGapControl()</pre>
<div class="block">Gets the gap control flag.
 <p></div>
<dl><dt><span class="strong">Returns:</span></dt><dd>control gaps?</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/api/DataRequest.html#setGapControl(boolean)"><code>setGapControl(boolean)</code></a></dd></dl>
</li>
</ul>
<a name="getIncrement()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getIncrement</h4>
<pre>public final&nbsp;double&nbsp;getIncrement()</pre>
<div class="block">Gets the repitition increment.
 <p></div>
<dl><dt><span class="strong">Returns:</span></dt><dd>the repitition increment.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/api/DataRequest.html#getNrepetitions()"><code>getNrepetitions()</code></a>, 
<a href="../../../com/rbnb/api/DataRequest.html#setRepetitions(long, double)"><code>setRepetitions(long,double)</code></a></dd></dl>
</li>
</ul>
<a name="getMode()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getMode</h4>
<pre>public final&nbsp;byte&nbsp;getMode()</pre>
<div class="block">Gets the response mode.
 <p></div>
<dl><dt><span class="strong">Returns:</span></dt><dd>the response mode.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/api/DataRequest.html#CONSOLIDATED"><code>CONSOLIDATED</code></a>, 
<a href="../../../com/rbnb/api/DataRequest.html#FRAMES"><code>FRAMES</code></a>, 
<a href="../../../com/rbnb/api/DataRequest.html#setMode(byte)"><code>setMode(byte)</code></a></dd></dl>
</li>
</ul>
<a name="getNrepetitions()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getNrepetitions</h4>
<pre>public final&nbsp;long&nbsp;getNrepetitions()</pre>
<div class="block">Gets the number of repetitions.
 <p></div>
<dl><dt><span class="strong">Returns:</span></dt><dd>the number of repetitions.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/api/DataRequest.html#getIncrement()"><code>getIncrement()</code></a>, 
<a href="../../../com/rbnb/api/DataRequest.html#setRepetitions(long, double)"><code>setRepetitions(long,double)</code></a></dd></dl>
</li>
</ul>
<a name="getReference()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getReference</h4>
<pre>public final&nbsp;byte&nbsp;getReference()</pre>
<div class="block">Gets the time reference.
 <p></div>
<dl><dt><span class="strong">Returns:</span></dt><dd>the time reference.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/api/DataRequest.html#ABSOLUTE"><code>ABSOLUTE</code></a>, 
<a href="../../../com/rbnb/api/DataRequest.html#AFTER"><code>AFTER</code></a>, 
<a href="../../../com/rbnb/api/DataRequest.html#ALIGNED"><code>ALIGNED</code></a>, 
<a href="../../../com/rbnb/api/DataRequest.html#MODIFIED"><code>MODIFIED</code></a>, 
<a href="../../../com/rbnb/api/DataRequest.html#NEWEST"><code>NEWEST</code></a>, 
<a href="../../../com/rbnb/api/DataRequest.html#OLDEST"><code>OLDEST</code></a>, 
<a href="../../../com/rbnb/api/DataRequest.html#setReference(byte)"><code>setReference(byte)</code></a></dd></dl>
</li>
</ul>
<a name="getRelationship()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getRelationship</h4>
<pre>public final&nbsp;byte&nbsp;getRelationship()</pre>
<div class="block">Gets the time relationship.
 <p></div>
<dl><dt><span class="strong">Returns:</span></dt><dd>the relationship to the time reference.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.2</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/api/DataRequest.html#EQUAL"><code>EQUAL</code></a>, 
<a href="../../../com/rbnb/api/DataRequest.html#GREATER"><code>GREATER</code></a>, 
<a href="../../../com/rbnb/api/DataRequest.html#GREATER_EQUAL"><code>GREATER_EQUAL</code></a>, 
<a href="../../../com/rbnb/api/DataRequest.html#LESS"><code>LESS</code></a>, 
<a href="../../../com/rbnb/api/DataRequest.html#LESS_EQUAL"><code>LESS_EQUAL</code></a>, 
<a href="../../../com/rbnb/api/DataRequest.html#setRelationship(byte)"><code>setRelationship(byte)</code></a></dd></dl>
</li>
</ul>
<a name="getSynchronized()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getSynchronized</h4>
<pre>public final&nbsp;boolean&nbsp;getSynchronized()</pre>
<div class="block">Gets the synchronized channels flag.
 <p></div>
<dl><dt><span class="strong">Returns:</span></dt><dd>the synchronized channels flag.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/api/DataRequest.html#setSynchronized(boolean)"><code>setSynchronized(boolean)</code></a></dd></dl>
</li>
</ul>
<a name="setDomain(byte)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setDomain</h4>
<pre>public final&nbsp;void&nbsp;setDomain(byte&nbsp;domainI)</pre>
<div class="block">Sets the time domain.
 <p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>domainI</code> - the time domain.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/api/DataRequest.html#ALL"><code>ALL</code></a>, 
<a href="../../../com/rbnb/api/DataRequest.html#EXISTING"><code>EXISTING</code></a>, 
<a href="../../../com/rbnb/api/DataRequest.html#FUTURE"><code>FUTURE</code></a>, 
<a href="../../../com/rbnb/api/DataRequest.html#getDomain()"><code>getDomain()</code></a></dd></dl>
</li>
</ul>
<a name="setGapControl(boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setGapControl</h4>
<pre>public final&nbsp;void&nbsp;setGapControl(boolean&nbsp;gapControlI)</pre>
<div class="block">Sets the gap control flag.
 <p>
 When gap control is on, the server waits for acknowledgement of each
 repetition of each source's data to be received by the sink before
 starting the next repetition. When used in conjunction with
 <code>reference=OLDEST</code> or <code>NEWEST</code> and
 <code>domain=FUTURE</code> or <code>ALL</code>, this allows the client
 to control when gaps occur in the data it receives.
 <p>
 When gap control is off, the server runs as fast as it can. Gaps occur
 between repetitions, but their timing is determined entirely by when
 buffers (such as TCP socket buffers) fill up.
 <p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>gapControlI</code> - turn on gap control?</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/api/DataRequest.html#getGapControl()"><code>getGapControl()</code></a></dd></dl>
</li>
</ul>
<a name="setMode(byte)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setMode</h4>
<pre>public final&nbsp;void&nbsp;setMode(byte&nbsp;modeI)</pre>
<div class="block">Sets the response mode.
 <p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>modeI</code> - the response mode.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/api/DataRequest.html#CONSOLIDATED"><code>CONSOLIDATED</code></a>, 
<a href="../../../com/rbnb/api/DataRequest.html#FRAMES"><code>FRAMES</code></a>, 
<a href="../../../com/rbnb/api/DataRequest.html#getMode()"><code>getMode()</code></a></dd></dl>
</li>
</ul>
<a name="setRepetitions(long, double)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setRepetitions</h4>
<pre>public final&nbsp;void&nbsp;setRepetitions(long&nbsp;numberI,
                  double&nbsp;incrementI)</pre>
<div class="block">Sets the number of repetitions and the increment for repetitions after
 the first.
 <p>
 When the increment is 0, the request is repeated unchanged.
 <p>
 When the increment is non-zero, repetitions after the first are
 essentially requests for <code>ABSOLUTE</code> times.
 <p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>numberI</code> - the number of repetitions.</dd><dd><code>incrementI</code> - the increment between repetitions.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code>java.lang.IllegalArgumentException</code> - thrown if <code>repetitionsI</code> is negative or zero.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/api/DataRequest.html#ABSOLUTE"><code>ABSOLUTE</code></a>, 
<a href="../../../com/rbnb/api/DataRequest.html#getIncrement()"><code>getIncrement()</code></a>, 
<a href="../../../com/rbnb/api/DataRequest.html#getNrepetitions()"><code>getNrepetitions()</code></a></dd></dl>
</li>
</ul>
<a name="setReference(byte)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setReference</h4>
<pre>public final&nbsp;void&nbsp;setReference(byte&nbsp;referenceI)</pre>
<div class="block">Sets the time reference.
 <p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>referenceI</code> - the time reference.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/api/DataRequest.html#ABSOLUTE"><code>ABSOLUTE</code></a>, 
<a href="../../../com/rbnb/api/DataRequest.html#AFTER"><code>AFTER</code></a>, 
<a href="../../../com/rbnb/api/DataRequest.html#ALIGNED"><code>ALIGNED</code></a>, 
<a href="../../../com/rbnb/api/DataRequest.html#MODIFIED"><code>MODIFIED</code></a>, 
<a href="../../../com/rbnb/api/DataRequest.html#NEWEST"><code>NEWEST</code></a>, 
<a href="../../../com/rbnb/api/DataRequest.html#OLDEST"><code>OLDEST</code></a>, 
<a href="../../../com/rbnb/api/DataRequest.html#setReference(byte)"><code>setReference(byte)</code></a></dd></dl>
</li>
</ul>
<a name="setRelationship(byte)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setRelationship</h4>
<pre>public final&nbsp;void&nbsp;setRelationship(byte&nbsp;relationshipI)</pre>
<div class="block">Sets the time relationship.
 <p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>relationshipI</code> - the relationship to the time reference.</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.2</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/api/DataRequest.html#EQUAL"><code>EQUAL</code></a>, 
<a href="../../../com/rbnb/api/DataRequest.html#getRelationship()"><code>getRelationship()</code></a>, 
<a href="../../../com/rbnb/api/DataRequest.html#GREATER"><code>GREATER</code></a>, 
<a href="../../../com/rbnb/api/DataRequest.html#GREATER_EQUAL"><code>GREATER_EQUAL</code></a>, 
<a href="../../../com/rbnb/api/DataRequest.html#LESS"><code>LESS</code></a>, 
<a href="../../../com/rbnb/api/DataRequest.html#LESS_EQUAL"><code>LESS_EQUAL</code></a></dd></dl>
</li>
</ul>
<a name="setSynchronized(boolean)">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>setSynchronized</h4>
<pre>public final&nbsp;void&nbsp;setSynchronized(boolean&nbsp;synchronizedI)</pre>
<div class="block">Sets the synchronized channels flag.
 <p></div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>synchronizedI</code> - synchronize the channels?</dd><dt><span class="strong">Since:</span></dt>
  <dd>V2.0</dd>
<dt><span class="strong">See Also:</span></dt><dd><a href="../../../com/rbnb/api/DataRequest.html#getSynchronized()"><code>getSynchronized()</code></a></dd></dl>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
</div>
<!-- ========= END OF CLASS DATA ========= -->
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a name="navbar_bottom">
<!--   -->
</a><a href="#skip-navbar_bottom" title="Skip navigation links"></a><a name="navbar_bottom_firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/DataRequest.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../index-files/index-1.html">Index</a></li>
<li><a href="../../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../../../com/rbnb/api/DataBlock.html" title="class in com.rbnb.api"><span class="strong">Prev Class</span></a></li>
<li><a href="../../../com/rbnb/api/Directory.html" title="class in com.rbnb.api"><span class="strong">Next Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../../../index.html?com/rbnb/api/DataRequest.html" target="_top">Frames</a></li>
<li><a href="DataRequest.html" target="_top">No Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="../../../allclasses-noframe.html">All Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li><a href="#field_summary">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor_summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li><a href="#field_detail">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor_detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_detail">Method</a></li>
</ul>
</div>
<a name="skip-navbar_bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</body>
</html>
