package network;


import java.io.*;
import java.net.*;
 
public class client
{
	public static byte[] toBytes(int... ints) { // helper function
	    byte[] result = new byte[ints.length];
	    for (int i = 0; i < ints.length; i++) {
	        result[i] = (byte) ints[i];
	    }
	    return result;
	}
	
    public static void main(String args[]) throws InterruptedException, FileNotFoundException
    {
        DatagramSocket sock = null;
        int port = 1235;
        String s;
        
        //File file = new File("input.txt");
        //BufferedReader cin = new BufferedReader(new FileReader(file));
         
        try
        {
            sock = new DatagramSocket();
             
            InetAddress host = InetAddress.getByName("localhost");
             
         	byte[] rawbytes = toBytes(0x08 , 0xB8 , 0xC0 ,0x0E, 0x00, 0x65,0x7F ,0x46, 0x0F, 0x00 ,0x48 ,0x17 ,0x00 ,0x00, 0x01 ,0x00 ,0x01 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00, 0x00, 0x00 ,0x00 ,0x00, 0x00 ,0x00, 0x00 ,0x00, 0x00 ,0x00, 0x77 ,0x00 ,0x00 ,0x00, 0x00 ,0x00 ,0x00 ,0x00, 0x2F ,0x63 ,0x66 ,0x2F, 0x61, 0x70, 0x70, 0x73, 0x2F, 0x64 ,0x73, 0x5F, 0x66,0x69 ,0x6C ,0x74, 0x65, 0x72, 0x5F ,0x74 ,0x62,0x6C ,0x2E ,0x74, 0x62 ,0x6C ,0x00 ,0x00, 0x00 ,0x00 ,0x00 ,0x00 ,0x00, 0x00, 0x00, 0x00, 0x00 ,0x00, 0x00 ,0x00 ,0x00 ,0x00, 0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00, 0x00, 0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00, 0x00,0x00,0x00 ,0x00 ,0x00 ); // using the helper  
         	
         	int k = 0;
            while(true)
            {
                
                // byte[] b = s.getBytes();
                 
                //DatagramPacket  dp = new DatagramPacket(b , b.length , host , port);
                //sock.send(dp);
            	
            	
            	
            	
            	DatagramPacket  dp = new DatagramPacket(rawbytes , rawbytes.length , host , port);
            	sock.send(dp);
            	
            	if(k < 20)
            	{
            		for(int m = 0; m< rawbytes.length;m++)
            		{
            			rawbytes[m] = (byte) (rawbytes[m] + 1 );
            		}
            			
            	}
            	if(k >= 20)
            	{
            		for(int m = 0; m< rawbytes.length;m++)
            		{
            			rawbytes[m] = (byte) (rawbytes[m] - 1 );
            		}
            			
            	}
            	k++;
            	if(k == 40)
            		k = 0;
            	
                Thread.sleep(500); // 500 ms delay
            }
        }
         
        catch(IOException e)
        {
            System.err.println("IOException " + e);
        }
    }
     
    //simple function to echo data to terminal
    public static void echo(String msg)
    {
        System.out.println(msg);
    }
}